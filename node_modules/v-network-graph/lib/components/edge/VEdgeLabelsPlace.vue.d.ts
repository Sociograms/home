import { Edges, EdgeLabelArea } from '../../common/types';
import { EdgeState, SummarizedEdgeState } from '../../models/edge';
import { EdgeLabelStyle } from '../..';
import { DefineComponent, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes, PropType } from 'vue';

interface Props {
    edges: Edges;
    state: EdgeState;
    summarizeState?: SummarizedEdgeState;
}
declare function __VLS_template(): {
    default?(_: {
        edges: Edges;
        config: EdgeLabelStyle;
        area: EdgeLabelArea;
        hovered: boolean;
        selected: boolean;
        scale: number;
    }): any;
};
declare const __VLS_component: DefineComponent<__VLS_TypePropsToRuntimeProps<Props>, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly< ExtractPropTypes<__VLS_TypePropsToRuntimeProps<Props>>>, {}>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
