import { Edge, EdgePosition, Edges, Point } from '../../common/types';
import { EdgeState } from '../../models/edge';
import { StrokeStyle } from '../../common/configs';
import { DefineComponent, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes, PropType } from 'vue';

interface Props {
    edgeId?: string;
    edge?: Edge;
    edges?: Edges;
    state: EdgeState;
    isSummarized: boolean;
}
declare function calculatePointAtLength(distance: number): Point;
declare function __VLS_template(): {
    default?(_: {
        edgeId: string | undefined;
        edge: Edge | undefined;
        edges: {
            [x: string]: Edge | undefined;
        };
        isSummarized: false;
        stroke: StrokeStyle;
        position: EdgePosition;
        center: Point;
        hovered: boolean;
        selected: boolean;
        scale: number;
        length: number;
        pointAtLength: typeof calculatePointAtLength;
    }): any;
};
declare const __VLS_component: DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    edgeId: undefined;
    edge: undefined;
    edges: () => {};
}>, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly< ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    edgeId: undefined;
    edge: undefined;
    edges: () => {};
}>>>, {
    edges: Edges;
    edge: Edge;
    edgeId: string;
}>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
