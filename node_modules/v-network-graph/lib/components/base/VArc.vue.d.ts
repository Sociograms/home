import { Position } from '../../common/types';
import { StrokeStyle } from '../../common/configs';
import { DefineComponent, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes, PropType } from 'vue';

declare const _default: DefineComponent<__VLS_TypePropsToRuntimeProps<{
    p1: Position;
    p2: Position;
    radius: number[];
    isLargeArc: boolean;
    isClockwise: boolean;
    config: StrokeStyle;
}>, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly< ExtractPropTypes<__VLS_TypePropsToRuntimeProps<{
    p1: Position;
    p2: Position;
    radius: number[];
    isLargeArc: boolean;
    isClockwise: boolean;
    config: StrokeStyle;
}>>>, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
