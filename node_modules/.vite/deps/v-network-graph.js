import {
  Fragment,
  TransitionGroup,
  computed,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createSlots,
  createTextVNode,
  createVNode,
  defineComponent,
  guardReactiveProps,
  inject,
  isReactive,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeProps,
  normalizeStyle,
  onMounted,
  onUnmounted,
  openBlock,
  provide,
  reactive,
  readonly,
  ref,
  renderList,
  renderSlot,
  resolveDynamicComponent,
  toDisplayString,
  toHandlers,
  toRef,
  unref,
  useAttrs,
  useSlots,
  watch,
  watchEffect,
  withCtx,
  withModifiers
} from "./chunk-RCKEYLUF.js";

// node_modules/lodash-es/_freeGlobal.js
var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
var freeGlobal_default = freeGlobal;

// node_modules/lodash-es/_root.js
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal_default || freeSelf || Function("return this")();
var root_default = root;

// node_modules/lodash-es/_Symbol.js
var Symbol2 = root_default.Symbol;
var Symbol_default = Symbol2;

// node_modules/lodash-es/_getRawTag.js
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
var nativeObjectToString = objectProto.toString;
var symToStringTag = Symbol_default ? Symbol_default.toStringTag : void 0;
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
  try {
    value[symToStringTag] = void 0;
    var unmasked = true;
  } catch (e) {
  }
  var result2 = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result2;
}
var getRawTag_default = getRawTag;

// node_modules/lodash-es/_objectToString.js
var objectProto2 = Object.prototype;
var nativeObjectToString2 = objectProto2.toString;
function objectToString(value) {
  return nativeObjectToString2.call(value);
}
var objectToString_default = objectToString;

// node_modules/lodash-es/_baseGetTag.js
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag2 = Symbol_default ? Symbol_default.toStringTag : void 0;
function baseGetTag(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag2 && symToStringTag2 in Object(value) ? getRawTag_default(value) : objectToString_default(value);
}
var baseGetTag_default = baseGetTag;

// node_modules/lodash-es/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_default = isObjectLike;

// node_modules/lodash-es/isSymbol.js
var symbolTag = "[object Symbol]";
function isSymbol(value) {
  return typeof value == "symbol" || isObjectLike_default(value) && baseGetTag_default(value) == symbolTag;
}
var isSymbol_default = isSymbol;

// node_modules/lodash-es/_baseToNumber.js
var NAN = 0 / 0;
function baseToNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol_default(value)) {
    return NAN;
  }
  return +value;
}
var baseToNumber_default = baseToNumber;

// node_modules/lodash-es/_arrayMap.js
function arrayMap(array, iteratee2) {
  var index = -1, length = array == null ? 0 : array.length, result2 = Array(length);
  while (++index < length) {
    result2[index] = iteratee2(array[index], index, array);
  }
  return result2;
}
var arrayMap_default = arrayMap;

// node_modules/lodash-es/isArray.js
var isArray = Array.isArray;
var isArray_default = isArray;

// node_modules/lodash-es/_baseToString.js
var INFINITY = 1 / 0;
var symbolProto = Symbol_default ? Symbol_default.prototype : void 0;
var symbolToString = symbolProto ? symbolProto.toString : void 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray_default(value)) {
    return arrayMap_default(value, baseToString) + "";
  }
  if (isSymbol_default(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result2 = value + "";
  return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
}
var baseToString_default = baseToString;

// node_modules/lodash-es/_createMathOperation.js
function createMathOperation(operator, defaultValue) {
  return function(value, other) {
    var result2;
    if (value === void 0 && other === void 0) {
      return defaultValue;
    }
    if (value !== void 0) {
      result2 = value;
    }
    if (other !== void 0) {
      if (result2 === void 0) {
        return other;
      }
      if (typeof value == "string" || typeof other == "string") {
        value = baseToString_default(value);
        other = baseToString_default(other);
      } else {
        value = baseToNumber_default(value);
        other = baseToNumber_default(other);
      }
      result2 = operator(value, other);
    }
    return result2;
  };
}
var createMathOperation_default = createMathOperation;

// node_modules/lodash-es/add.js
var add = createMathOperation_default(function(augend, addend) {
  return augend + addend;
}, 0);
var add_default = add;

// node_modules/lodash-es/_trimmedEndIndex.js
var reWhitespace = /\s/;
function trimmedEndIndex(string) {
  var index = string.length;
  while (index-- && reWhitespace.test(string.charAt(index))) {
  }
  return index;
}
var trimmedEndIndex_default = trimmedEndIndex;

// node_modules/lodash-es/_baseTrim.js
var reTrimStart = /^\s+/;
function baseTrim(string) {
  return string ? string.slice(0, trimmedEndIndex_default(string) + 1).replace(reTrimStart, "") : string;
}
var baseTrim_default = baseTrim;

// node_modules/lodash-es/isObject.js
function isObject(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
var isObject_default = isObject;

// node_modules/lodash-es/toNumber.js
var NAN2 = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol_default(value)) {
    return NAN2;
  }
  if (isObject_default(value)) {
    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
    value = isObject_default(other) ? other + "" : other;
  }
  if (typeof value != "string") {
    return value === 0 ? value : +value;
  }
  value = baseTrim_default(value);
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN2 : +value;
}
var toNumber_default = toNumber;

// node_modules/lodash-es/toFinite.js
var INFINITY2 = 1 / 0;
var MAX_INTEGER = 17976931348623157e292;
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber_default(value);
  if (value === INFINITY2 || value === -INFINITY2) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}
var toFinite_default = toFinite;

// node_modules/lodash-es/toInteger.js
function toInteger(value) {
  var result2 = toFinite_default(value), remainder = result2 % 1;
  return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
}
var toInteger_default = toInteger;

// node_modules/lodash-es/after.js
var FUNC_ERROR_TEXT = "Expected a function";
function after(n, func) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = toInteger_default(n);
  return function() {
    if (--n < 1) {
      return func.apply(this, arguments);
    }
  };
}
var after_default = after;

// node_modules/lodash-es/identity.js
function identity(value) {
  return value;
}
var identity_default = identity;

// node_modules/lodash-es/isFunction.js
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction(value) {
  if (!isObject_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_default = isFunction;

// node_modules/lodash-es/_coreJsData.js
var coreJsData = root_default["__core-js_shared__"];
var coreJsData_default = coreJsData;

// node_modules/lodash-es/_isMasked.js
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData_default && coreJsData_default.keys && coreJsData_default.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var isMasked_default = isMasked;

// node_modules/lodash-es/_toSource.js
var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var toSource_default = toSource;

// node_modules/lodash-es/_baseIsNative.js
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto2 = Function.prototype;
var objectProto3 = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty2 = objectProto3.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString2.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative(value) {
  if (!isObject_default(value) || isMasked_default(value)) {
    return false;
  }
  var pattern = isFunction_default(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource_default(value));
}
var baseIsNative_default = baseIsNative;

// node_modules/lodash-es/_getValue.js
function getValue(object, key) {
  return object == null ? void 0 : object[key];
}
var getValue_default = getValue;

// node_modules/lodash-es/_getNative.js
function getNative(object, key) {
  var value = getValue_default(object, key);
  return baseIsNative_default(value) ? value : void 0;
}
var getNative_default = getNative;

// node_modules/lodash-es/_WeakMap.js
var WeakMap = getNative_default(root_default, "WeakMap");
var WeakMap_default = WeakMap;

// node_modules/lodash-es/_metaMap.js
var metaMap = WeakMap_default && new WeakMap_default();
var metaMap_default = metaMap;

// node_modules/lodash-es/_baseSetData.js
var baseSetData = !metaMap_default ? identity_default : function(func, data) {
  metaMap_default.set(func, data);
  return func;
};
var baseSetData_default = baseSetData;

// node_modules/lodash-es/_baseCreate.js
var objectCreate = Object.create;
var baseCreate = /* @__PURE__ */ function() {
  function object() {
  }
  return function(proto) {
    if (!isObject_default(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result2 = new object();
    object.prototype = void 0;
    return result2;
  };
}();
var baseCreate_default = baseCreate;

// node_modules/lodash-es/_createCtor.js
function createCtor(Ctor) {
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return new Ctor();
      case 1:
        return new Ctor(args[0]);
      case 2:
        return new Ctor(args[0], args[1]);
      case 3:
        return new Ctor(args[0], args[1], args[2]);
      case 4:
        return new Ctor(args[0], args[1], args[2], args[3]);
      case 5:
        return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = baseCreate_default(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
    return isObject_default(result2) ? result2 : thisBinding;
  };
}
var createCtor_default = createCtor;

// node_modules/lodash-es/_createBind.js
var WRAP_BIND_FLAG = 1;
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor_default(func);
  function wrapper() {
    var fn2 = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return fn2.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}
var createBind_default = createBind;

// node_modules/lodash-es/_apply.js
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var apply_default = apply;

// node_modules/lodash-es/_composeArgs.js
var nativeMax = Math.max;
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array(leftLength + rangeLength), isUncurried = !isCurried;
  while (++leftIndex < leftLength) {
    result2[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result2[leftIndex++] = args[argsIndex++];
  }
  return result2;
}
var composeArgs_default = composeArgs;

// node_modules/lodash-es/_composeArgsRight.js
var nativeMax2 = Math.max;
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax2(argsLength - holdersLength, 0), result2 = Array(rangeLength + rightLength), isUncurried = !isCurried;
  while (++argsIndex < rangeLength) {
    result2[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result2[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result2;
}
var composeArgsRight_default = composeArgsRight;

// node_modules/lodash-es/_countHolders.js
function countHolders(array, placeholder) {
  var length = array.length, result2 = 0;
  while (length--) {
    if (array[length] === placeholder) {
      ++result2;
    }
  }
  return result2;
}
var countHolders_default = countHolders;

// node_modules/lodash-es/_baseLodash.js
function baseLodash() {
}
var baseLodash_default = baseLodash;

// node_modules/lodash-es/_LazyWrapper.js
var MAX_ARRAY_LENGTH = 4294967295;
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}
LazyWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;
var LazyWrapper_default = LazyWrapper;

// node_modules/lodash-es/noop.js
function noop() {
}
var noop_default = noop;

// node_modules/lodash-es/_getData.js
var getData = !metaMap_default ? noop_default : function(func) {
  return metaMap_default.get(func);
};
var getData_default = getData;

// node_modules/lodash-es/_realNames.js
var realNames = {};
var realNames_default = realNames;

// node_modules/lodash-es/_getFuncName.js
var objectProto4 = Object.prototype;
var hasOwnProperty3 = objectProto4.hasOwnProperty;
function getFuncName(func) {
  var result2 = func.name + "", array = realNames_default[result2], length = hasOwnProperty3.call(realNames_default, result2) ? array.length : 0;
  while (length--) {
    var data = array[length], otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result2;
}
var getFuncName_default = getFuncName;

// node_modules/lodash-es/_LodashWrapper.js
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = void 0;
}
LodashWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;
var LodashWrapper_default = LodashWrapper;

// node_modules/lodash-es/_copyArray.js
function copyArray(source, array) {
  var index = -1, length = source.length;
  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}
var copyArray_default = copyArray;

// node_modules/lodash-es/_wrapperClone.js
function wrapperClone(wrapper) {
  if (wrapper instanceof LazyWrapper_default) {
    return wrapper.clone();
  }
  var result2 = new LodashWrapper_default(wrapper.__wrapped__, wrapper.__chain__);
  result2.__actions__ = copyArray_default(wrapper.__actions__);
  result2.__index__ = wrapper.__index__;
  result2.__values__ = wrapper.__values__;
  return result2;
}
var wrapperClone_default = wrapperClone;

// node_modules/lodash-es/wrapperLodash.js
var objectProto5 = Object.prototype;
var hasOwnProperty4 = objectProto5.hasOwnProperty;
function lodash(value) {
  if (isObjectLike_default(value) && !isArray_default(value) && !(value instanceof LazyWrapper_default)) {
    if (value instanceof LodashWrapper_default) {
      return value;
    }
    if (hasOwnProperty4.call(value, "__wrapped__")) {
      return wrapperClone_default(value);
    }
  }
  return new LodashWrapper_default(value);
}
lodash.prototype = baseLodash_default.prototype;
lodash.prototype.constructor = lodash;
var wrapperLodash_default = lodash;

// node_modules/lodash-es/_isLaziable.js
function isLaziable(func) {
  var funcName = getFuncName_default(func), other = wrapperLodash_default[funcName];
  if (typeof other != "function" || !(funcName in LazyWrapper_default.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData_default(other);
  return !!data && func === data[0];
}
var isLaziable_default = isLaziable;

// node_modules/lodash-es/_shortOut.js
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var shortOut_default = shortOut;

// node_modules/lodash-es/_setData.js
var setData = shortOut_default(baseSetData_default);
var setData_default = setData;

// node_modules/lodash-es/_getWrapDetails.js
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/;
var reSplitDetails = /,? & /;
function getWrapDetails(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}
var getWrapDetails_default = getWrapDetails;

// node_modules/lodash-es/_insertWrapDetails.js
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
  details = details.join(length > 2 ? ", " : " ");
  return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
}
var insertWrapDetails_default = insertWrapDetails;

// node_modules/lodash-es/constant.js
function constant(value) {
  return function() {
    return value;
  };
}
var constant_default = constant;

// node_modules/lodash-es/_defineProperty.js
var defineProperty = function() {
  try {
    var func = getNative_default(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e) {
  }
}();
var defineProperty_default = defineProperty;

// node_modules/lodash-es/_baseSetToString.js
var baseSetToString = !defineProperty_default ? identity_default : function(func, string) {
  return defineProperty_default(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant_default(string),
    "writable": true
  });
};
var baseSetToString_default = baseSetToString;

// node_modules/lodash-es/_setToString.js
var setToString = shortOut_default(baseSetToString_default);
var setToString_default = setToString;

// node_modules/lodash-es/_arrayEach.js
function arrayEach(array, iteratee2) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (iteratee2(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}
var arrayEach_default = arrayEach;

// node_modules/lodash-es/_baseFindIndex.js
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index-- : ++index < length) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}
var baseFindIndex_default = baseFindIndex;

// node_modules/lodash-es/_baseIsNaN.js
function baseIsNaN(value) {
  return value !== value;
}
var baseIsNaN_default = baseIsNaN;

// node_modules/lodash-es/_strictIndexOf.js
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1, length = array.length;
  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}
var strictIndexOf_default = strictIndexOf;

// node_modules/lodash-es/_baseIndexOf.js
function baseIndexOf(array, value, fromIndex) {
  return value === value ? strictIndexOf_default(array, value, fromIndex) : baseFindIndex_default(array, baseIsNaN_default, fromIndex);
}
var baseIndexOf_default = baseIndexOf;

// node_modules/lodash-es/_arrayIncludes.js
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf_default(array, value, 0) > -1;
}
var arrayIncludes_default = arrayIncludes;

// node_modules/lodash-es/_updateWrapDetails.js
var WRAP_BIND_FLAG2 = 1;
var WRAP_BIND_KEY_FLAG = 2;
var WRAP_CURRY_FLAG = 8;
var WRAP_CURRY_RIGHT_FLAG = 16;
var WRAP_PARTIAL_FLAG = 32;
var WRAP_PARTIAL_RIGHT_FLAG = 64;
var WRAP_ARY_FLAG = 128;
var WRAP_REARG_FLAG = 256;
var WRAP_FLIP_FLAG = 512;
var wrapFlags = [
  ["ary", WRAP_ARY_FLAG],
  ["bind", WRAP_BIND_FLAG2],
  ["bindKey", WRAP_BIND_KEY_FLAG],
  ["curry", WRAP_CURRY_FLAG],
  ["curryRight", WRAP_CURRY_RIGHT_FLAG],
  ["flip", WRAP_FLIP_FLAG],
  ["partial", WRAP_PARTIAL_FLAG],
  ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
  ["rearg", WRAP_REARG_FLAG]
];
function updateWrapDetails(details, bitmask) {
  arrayEach_default(wrapFlags, function(pair) {
    var value = "_." + pair[0];
    if (bitmask & pair[1] && !arrayIncludes_default(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}
var updateWrapDetails_default = updateWrapDetails;

// node_modules/lodash-es/_setWrapToString.js
function setWrapToString(wrapper, reference, bitmask) {
  var source = reference + "";
  return setToString_default(wrapper, insertWrapDetails_default(source, updateWrapDetails_default(getWrapDetails_default(source), bitmask)));
}
var setWrapToString_default = setWrapToString;

// node_modules/lodash-es/_createRecurry.js
var WRAP_BIND_FLAG3 = 1;
var WRAP_BIND_KEY_FLAG2 = 2;
var WRAP_CURRY_BOUND_FLAG = 4;
var WRAP_CURRY_FLAG2 = 8;
var WRAP_PARTIAL_FLAG2 = 32;
var WRAP_PARTIAL_RIGHT_FLAG2 = 64;
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG2, newHolders = isCurry ? holders : void 0, newHoldersRight = isCurry ? void 0 : holders, newPartials = isCurry ? partials : void 0, newPartialsRight = isCurry ? void 0 : partials;
  bitmask |= isCurry ? WRAP_PARTIAL_FLAG2 : WRAP_PARTIAL_RIGHT_FLAG2;
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG2 : WRAP_PARTIAL_FLAG2);
  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG3 | WRAP_BIND_KEY_FLAG2);
  }
  var newData = [
    func,
    bitmask,
    thisArg,
    newPartials,
    newHolders,
    newPartialsRight,
    newHoldersRight,
    argPos,
    ary2,
    arity
  ];
  var result2 = wrapFunc.apply(void 0, newData);
  if (isLaziable_default(func)) {
    setData_default(result2, newData);
  }
  result2.placeholder = placeholder;
  return setWrapToString_default(result2, func, bitmask);
}
var createRecurry_default = createRecurry;

// node_modules/lodash-es/_getHolder.js
function getHolder(func) {
  var object = func;
  return object.placeholder;
}
var getHolder_default = getHolder;

// node_modules/lodash-es/_isIndex.js
var MAX_SAFE_INTEGER = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var isIndex_default = isIndex;

// node_modules/lodash-es/_reorder.js
var nativeMin = Math.min;
function reorder(array, indexes) {
  var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray_default(array);
  while (length--) {
    var index = indexes[length];
    array[length] = isIndex_default(index, arrLength) ? oldArray[index] : void 0;
  }
  return array;
}
var reorder_default = reorder;

// node_modules/lodash-es/_replaceHolders.js
var PLACEHOLDER = "__lodash_placeholder__";
function replaceHolders(array, placeholder) {
  var index = -1, length = array.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array[index];
    if (value === placeholder || value === PLACEHOLDER) {
      array[index] = PLACEHOLDER;
      result2[resIndex++] = index;
    }
  }
  return result2;
}
var replaceHolders_default = replaceHolders;

// node_modules/lodash-es/_createHybrid.js
var WRAP_BIND_FLAG4 = 1;
var WRAP_BIND_KEY_FLAG3 = 2;
var WRAP_CURRY_FLAG3 = 8;
var WRAP_CURRY_RIGHT_FLAG2 = 16;
var WRAP_ARY_FLAG2 = 128;
var WRAP_FLIP_FLAG2 = 512;
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG2, isBind = bitmask & WRAP_BIND_FLAG4, isBindKey = bitmask & WRAP_BIND_KEY_FLAG3, isCurried = bitmask & (WRAP_CURRY_FLAG3 | WRAP_CURRY_RIGHT_FLAG2), isFlip = bitmask & WRAP_FLIP_FLAG2, Ctor = isBindKey ? void 0 : createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index = length;
    while (index--) {
      args[index] = arguments[index];
    }
    if (isCurried) {
      var placeholder = getHolder_default(wrapper), holdersCount = countHolders_default(args, placeholder);
    }
    if (partials) {
      args = composeArgs_default(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = composeArgsRight_default(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = replaceHolders_default(args, placeholder);
      return createRecurry_default(
        func,
        bitmask,
        createHybrid,
        wrapper.placeholder,
        thisArg,
        args,
        newHolders,
        argPos,
        ary2,
        arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this, fn2 = isBindKey ? thisBinding[func] : func;
    length = args.length;
    if (argPos) {
      args = reorder_default(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary2 < length) {
      args.length = ary2;
    }
    if (this && this !== root_default && this instanceof wrapper) {
      fn2 = Ctor || createCtor_default(fn2);
    }
    return fn2.apply(thisBinding, args);
  }
  return wrapper;
}
var createHybrid_default = createHybrid;

// node_modules/lodash-es/_createCurry.js
function createCurry(func, bitmask, arity) {
  var Ctor = createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index = length, placeholder = getHolder_default(wrapper);
    while (index--) {
      args[index] = arguments[index];
    }
    var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders_default(args, placeholder);
    length -= holders.length;
    if (length < arity) {
      return createRecurry_default(
        func,
        bitmask,
        createHybrid_default,
        wrapper.placeholder,
        void 0,
        args,
        holders,
        void 0,
        void 0,
        arity - length
      );
    }
    var fn2 = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return apply_default(fn2, this, args);
  }
  return wrapper;
}
var createCurry_default = createCurry;

// node_modules/lodash-es/_createPartial.js
var WRAP_BIND_FLAG5 = 1;
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG5, Ctor = createCtor_default(func);
  function wrapper() {
    var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn2 = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return apply_default(fn2, isBind ? thisArg : this, args);
  }
  return wrapper;
}
var createPartial_default = createPartial;

// node_modules/lodash-es/_mergeData.js
var PLACEHOLDER2 = "__lodash_placeholder__";
var WRAP_BIND_FLAG6 = 1;
var WRAP_BIND_KEY_FLAG4 = 2;
var WRAP_CURRY_BOUND_FLAG2 = 4;
var WRAP_CURRY_FLAG4 = 8;
var WRAP_ARY_FLAG3 = 128;
var WRAP_REARG_FLAG2 = 256;
var nativeMin2 = Math.min;
function mergeData(data, source) {
  var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG6 | WRAP_BIND_KEY_FLAG4 | WRAP_ARY_FLAG3);
  var isCombo = srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_CURRY_FLAG4 || srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_REARG_FLAG2 && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG3 | WRAP_REARG_FLAG2) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG4;
  if (!(isCommon || isCombo)) {
    return data;
  }
  if (srcBitmask & WRAP_BIND_FLAG6) {
    data[2] = source[2];
    newBitmask |= bitmask & WRAP_BIND_FLAG6 ? 0 : WRAP_CURRY_BOUND_FLAG2;
  }
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? composeArgs_default(partials, value, source[4]) : value;
    data[4] = partials ? replaceHolders_default(data[3], PLACEHOLDER2) : source[4];
  }
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? composeArgsRight_default(partials, value, source[6]) : value;
    data[6] = partials ? replaceHolders_default(data[5], PLACEHOLDER2) : source[6];
  }
  value = source[7];
  if (value) {
    data[7] = value;
  }
  if (srcBitmask & WRAP_ARY_FLAG3) {
    data[8] = data[8] == null ? source[8] : nativeMin2(data[8], source[8]);
  }
  if (data[9] == null) {
    data[9] = source[9];
  }
  data[0] = source[0];
  data[1] = newBitmask;
  return data;
}
var mergeData_default = mergeData;

// node_modules/lodash-es/_createWrap.js
var FUNC_ERROR_TEXT2 = "Expected a function";
var WRAP_BIND_FLAG7 = 1;
var WRAP_BIND_KEY_FLAG5 = 2;
var WRAP_CURRY_FLAG5 = 8;
var WRAP_CURRY_RIGHT_FLAG3 = 16;
var WRAP_PARTIAL_FLAG3 = 32;
var WRAP_PARTIAL_RIGHT_FLAG3 = 64;
var nativeMax3 = Math.max;
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG5;
  if (!isBindKey && typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT2);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG3 | WRAP_PARTIAL_RIGHT_FLAG3);
    partials = holders = void 0;
  }
  ary2 = ary2 === void 0 ? ary2 : nativeMax3(toInteger_default(ary2), 0);
  arity = arity === void 0 ? arity : toInteger_default(arity);
  length -= holders ? holders.length : 0;
  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG3) {
    var partialsRight = partials, holdersRight = holders;
    partials = holders = void 0;
  }
  var data = isBindKey ? void 0 : getData_default(func);
  var newData = [
    func,
    bitmask,
    thisArg,
    partials,
    holders,
    partialsRight,
    holdersRight,
    argPos,
    ary2,
    arity
  ];
  if (data) {
    mergeData_default(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === void 0 ? isBindKey ? 0 : func.length : nativeMax3(newData[9] - length, 0);
  if (!arity && bitmask & (WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3)) {
    bitmask &= ~(WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG7) {
    var result2 = createBind_default(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG5 || bitmask == WRAP_CURRY_RIGHT_FLAG3) {
    result2 = createCurry_default(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG3 || bitmask == (WRAP_BIND_FLAG7 | WRAP_PARTIAL_FLAG3)) && !holders.length) {
    result2 = createPartial_default(func, bitmask, thisArg, partials);
  } else {
    result2 = createHybrid_default.apply(void 0, newData);
  }
  var setter = data ? baseSetData_default : setData_default;
  return setWrapToString_default(setter(result2, newData), func, bitmask);
}
var createWrap_default = createWrap;

// node_modules/lodash-es/ary.js
var WRAP_ARY_FLAG4 = 128;
function ary(func, n, guard) {
  n = guard ? void 0 : n;
  n = func && n == null ? func.length : n;
  return createWrap_default(func, WRAP_ARY_FLAG4, void 0, void 0, void 0, void 0, n);
}
var ary_default = ary;

// node_modules/lodash-es/_baseAssignValue.js
function baseAssignValue(object, key, value) {
  if (key == "__proto__" && defineProperty_default) {
    defineProperty_default(object, key, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object[key] = value;
  }
}
var baseAssignValue_default = baseAssignValue;

// node_modules/lodash-es/eq.js
function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_default = eq;

// node_modules/lodash-es/_assignValue.js
var objectProto6 = Object.prototype;
var hasOwnProperty5 = objectProto6.hasOwnProperty;
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty5.call(object, key) && eq_default(objValue, value)) || value === void 0 && !(key in object)) {
    baseAssignValue_default(object, key, value);
  }
}
var assignValue_default = assignValue;

// node_modules/lodash-es/_copyObject.js
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index = -1, length = props.length;
  while (++index < length) {
    var key = props[index];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue_default(object, key, newValue);
    } else {
      assignValue_default(object, key, newValue);
    }
  }
  return object;
}
var copyObject_default = copyObject;

// node_modules/lodash-es/_overRest.js
var nativeMax4 = Math.max;
function overRest(func, start, transform2) {
  start = nativeMax4(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index = -1, length = nativeMax4(args.length - start, 0), array = Array(length);
    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform2(array);
    return apply_default(func, this, otherArgs);
  };
}
var overRest_default = overRest;

// node_modules/lodash-es/_baseRest.js
function baseRest(func, start) {
  return setToString_default(overRest_default(func, start, identity_default), func + "");
}
var baseRest_default = baseRest;

// node_modules/lodash-es/isLength.js
var MAX_SAFE_INTEGER2 = 9007199254740991;
function isLength(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER2;
}
var isLength_default = isLength;

// node_modules/lodash-es/isArrayLike.js
function isArrayLike(value) {
  return value != null && isLength_default(value.length) && !isFunction_default(value);
}
var isArrayLike_default = isArrayLike;

// node_modules/lodash-es/_isIterateeCall.js
function isIterateeCall(value, index, object) {
  if (!isObject_default(object)) {
    return false;
  }
  var type = typeof index;
  if (type == "number" ? isArrayLike_default(object) && isIndex_default(index, object.length) : type == "string" && index in object) {
    return eq_default(object[index], value);
  }
  return false;
}
var isIterateeCall_default = isIterateeCall;

// node_modules/lodash-es/_createAssigner.js
function createAssigner(assigner) {
  return baseRest_default(function(object, sources) {
    var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}
var createAssigner_default = createAssigner;

// node_modules/lodash-es/_isPrototype.js
var objectProto7 = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto7;
  return value === proto;
}
var isPrototype_default = isPrototype;

// node_modules/lodash-es/_baseTimes.js
function baseTimes(n, iteratee2) {
  var index = -1, result2 = Array(n);
  while (++index < n) {
    result2[index] = iteratee2(index);
  }
  return result2;
}
var baseTimes_default = baseTimes;

// node_modules/lodash-es/_baseIsArguments.js
var argsTag = "[object Arguments]";
function baseIsArguments(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == argsTag;
}
var baseIsArguments_default = baseIsArguments;

// node_modules/lodash-es/isArguments.js
var objectProto8 = Object.prototype;
var hasOwnProperty6 = objectProto8.hasOwnProperty;
var propertyIsEnumerable = objectProto8.propertyIsEnumerable;
var isArguments = baseIsArguments_default(/* @__PURE__ */ function() {
  return arguments;
}()) ? baseIsArguments_default : function(value) {
  return isObjectLike_default(value) && hasOwnProperty6.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_default = isArguments;

// node_modules/lodash-es/stubFalse.js
function stubFalse() {
  return false;
}
var stubFalse_default = stubFalse;

// node_modules/lodash-es/isBuffer.js
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer2 = moduleExports ? root_default.Buffer : void 0;
var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse_default;
var isBuffer_default = isBuffer;

// node_modules/lodash-es/_baseIsTypedArray.js
var argsTag2 = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var objectTag = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag2] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag2] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value) {
  return isObjectLike_default(value) && isLength_default(value.length) && !!typedArrayTags[baseGetTag_default(value)];
}
var baseIsTypedArray_default = baseIsTypedArray;

// node_modules/lodash-es/_baseUnary.js
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}
var baseUnary_default = baseUnary;

// node_modules/lodash-es/_nodeUtil.js
var freeExports2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule2 = freeExports2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
var freeProcess = moduleExports2 && freeGlobal_default.process;
var nodeUtil = function() {
  try {
    var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
    if (types) {
      return types;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e) {
  }
}();
var nodeUtil_default = nodeUtil;

// node_modules/lodash-es/isTypedArray.js
var nodeIsTypedArray = nodeUtil_default && nodeUtil_default.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary_default(nodeIsTypedArray) : baseIsTypedArray_default;
var isTypedArray_default = isTypedArray;

// node_modules/lodash-es/_arrayLikeKeys.js
var objectProto9 = Object.prototype;
var hasOwnProperty7 = objectProto9.hasOwnProperty;
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_default(value), isArg = !isArr && isArguments_default(value), isBuff = !isArr && !isArg && isBuffer_default(value), isType = !isArr && !isArg && !isBuff && isTypedArray_default(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes_default(value.length, String) : [], length = result2.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty7.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
    isIndex_default(key, length)))) {
      result2.push(key);
    }
  }
  return result2;
}
var arrayLikeKeys_default = arrayLikeKeys;

// node_modules/lodash-es/_overArg.js
function overArg(func, transform2) {
  return function(arg) {
    return func(transform2(arg));
  };
}
var overArg_default = overArg;

// node_modules/lodash-es/_nativeKeys.js
var nativeKeys = overArg_default(Object.keys, Object);
var nativeKeys_default = nativeKeys;

// node_modules/lodash-es/_baseKeys.js
var objectProto10 = Object.prototype;
var hasOwnProperty8 = objectProto10.hasOwnProperty;
function baseKeys(object) {
  if (!isPrototype_default(object)) {
    return nativeKeys_default(object);
  }
  var result2 = [];
  for (var key in Object(object)) {
    if (hasOwnProperty8.call(object, key) && key != "constructor") {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeys_default = baseKeys;

// node_modules/lodash-es/keys.js
function keys(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object) : baseKeys_default(object);
}
var keys_default = keys;

// node_modules/lodash-es/assign.js
var objectProto11 = Object.prototype;
var hasOwnProperty9 = objectProto11.hasOwnProperty;
var assign = createAssigner_default(function(object, source) {
  if (isPrototype_default(source) || isArrayLike_default(source)) {
    copyObject_default(source, keys_default(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty9.call(source, key)) {
      assignValue_default(object, key, source[key]);
    }
  }
});
var assign_default = assign;

// node_modules/lodash-es/_nativeKeysIn.js
function nativeKeysIn(object) {
  var result2 = [];
  if (object != null) {
    for (var key in Object(object)) {
      result2.push(key);
    }
  }
  return result2;
}
var nativeKeysIn_default = nativeKeysIn;

// node_modules/lodash-es/_baseKeysIn.js
var objectProto12 = Object.prototype;
var hasOwnProperty10 = objectProto12.hasOwnProperty;
function baseKeysIn(object) {
  if (!isObject_default(object)) {
    return nativeKeysIn_default(object);
  }
  var isProto = isPrototype_default(object), result2 = [];
  for (var key in object) {
    if (!(key == "constructor" && (isProto || !hasOwnProperty10.call(object, key)))) {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeysIn_default = baseKeysIn;

// node_modules/lodash-es/keysIn.js
function keysIn(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object, true) : baseKeysIn_default(object);
}
var keysIn_default = keysIn;

// node_modules/lodash-es/assignIn.js
var assignIn = createAssigner_default(function(object, source) {
  copyObject_default(source, keysIn_default(source), object);
});
var assignIn_default = assignIn;

// node_modules/lodash-es/assignInWith.js
var assignInWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  copyObject_default(source, keysIn_default(source), object, customizer);
});
var assignInWith_default = assignInWith;

// node_modules/lodash-es/assignWith.js
var assignWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  copyObject_default(source, keys_default(source), object, customizer);
});
var assignWith_default = assignWith;

// node_modules/lodash-es/_isKey.js
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp = /^\w*$/;
function isKey(value, object) {
  if (isArray_default(value)) {
    return false;
  }
  var type = typeof value;
  if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol_default(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
var isKey_default = isKey;

// node_modules/lodash-es/_nativeCreate.js
var nativeCreate = getNative_default(Object, "create");
var nativeCreate_default = nativeCreate;

// node_modules/lodash-es/_hashClear.js
function hashClear() {
  this.__data__ = nativeCreate_default ? nativeCreate_default(null) : {};
  this.size = 0;
}
var hashClear_default = hashClear;

// node_modules/lodash-es/_hashDelete.js
function hashDelete(key) {
  var result2 = this.has(key) && delete this.__data__[key];
  this.size -= result2 ? 1 : 0;
  return result2;
}
var hashDelete_default = hashDelete;

// node_modules/lodash-es/_hashGet.js
var HASH_UNDEFINED = "__lodash_hash_undefined__";
var objectProto13 = Object.prototype;
var hasOwnProperty11 = objectProto13.hasOwnProperty;
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate_default) {
    var result2 = data[key];
    return result2 === HASH_UNDEFINED ? void 0 : result2;
  }
  return hasOwnProperty11.call(data, key) ? data[key] : void 0;
}
var hashGet_default = hashGet;

// node_modules/lodash-es/_hashHas.js
var objectProto14 = Object.prototype;
var hasOwnProperty12 = objectProto14.hasOwnProperty;
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate_default ? data[key] !== void 0 : hasOwnProperty12.call(data, key);
}
var hashHas_default = hashHas;

// node_modules/lodash-es/_hashSet.js
var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate_default && value === void 0 ? HASH_UNDEFINED2 : value;
  return this;
}
var hashSet_default = hashSet;

// node_modules/lodash-es/_Hash.js
function Hash(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = hashClear_default;
Hash.prototype["delete"] = hashDelete_default;
Hash.prototype.get = hashGet_default;
Hash.prototype.has = hashHas_default;
Hash.prototype.set = hashSet_default;
var Hash_default = Hash;

// node_modules/lodash-es/_listCacheClear.js
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
var listCacheClear_default = listCacheClear;

// node_modules/lodash-es/_assocIndexOf.js
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq_default(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var assocIndexOf_default = assocIndexOf;

// node_modules/lodash-es/_listCacheDelete.js
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var listCacheDelete_default = listCacheDelete;

// node_modules/lodash-es/_listCacheGet.js
function listCacheGet(key) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  return index < 0 ? void 0 : data[index][1];
}
var listCacheGet_default = listCacheGet;

// node_modules/lodash-es/_listCacheHas.js
function listCacheHas(key) {
  return assocIndexOf_default(this.__data__, key) > -1;
}
var listCacheHas_default = listCacheHas;

// node_modules/lodash-es/_listCacheSet.js
function listCacheSet(key, value) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var listCacheSet_default = listCacheSet;

// node_modules/lodash-es/_ListCache.js
function ListCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = listCacheClear_default;
ListCache.prototype["delete"] = listCacheDelete_default;
ListCache.prototype.get = listCacheGet_default;
ListCache.prototype.has = listCacheHas_default;
ListCache.prototype.set = listCacheSet_default;
var ListCache_default = ListCache;

// node_modules/lodash-es/_Map.js
var Map2 = getNative_default(root_default, "Map");
var Map_default = Map2;

// node_modules/lodash-es/_mapCacheClear.js
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash_default(),
    "map": new (Map_default || ListCache_default)(),
    "string": new Hash_default()
  };
}
var mapCacheClear_default = mapCacheClear;

// node_modules/lodash-es/_isKeyable.js
function isKeyable(value) {
  var type = typeof value;
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
var isKeyable_default = isKeyable;

// node_modules/lodash-es/_getMapData.js
function getMapData(map2, key) {
  var data = map2.__data__;
  return isKeyable_default(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var getMapData_default = getMapData;

// node_modules/lodash-es/_mapCacheDelete.js
function mapCacheDelete(key) {
  var result2 = getMapData_default(this, key)["delete"](key);
  this.size -= result2 ? 1 : 0;
  return result2;
}
var mapCacheDelete_default = mapCacheDelete;

// node_modules/lodash-es/_mapCacheGet.js
function mapCacheGet(key) {
  return getMapData_default(this, key).get(key);
}
var mapCacheGet_default = mapCacheGet;

// node_modules/lodash-es/_mapCacheHas.js
function mapCacheHas(key) {
  return getMapData_default(this, key).has(key);
}
var mapCacheHas_default = mapCacheHas;

// node_modules/lodash-es/_mapCacheSet.js
function mapCacheSet(key, value) {
  var data = getMapData_default(this, key), size2 = data.size;
  data.set(key, value);
  this.size += data.size == size2 ? 0 : 1;
  return this;
}
var mapCacheSet_default = mapCacheSet;

// node_modules/lodash-es/_MapCache.js
function MapCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear_default;
MapCache.prototype["delete"] = mapCacheDelete_default;
MapCache.prototype.get = mapCacheGet_default;
MapCache.prototype.has = mapCacheHas_default;
MapCache.prototype.set = mapCacheSet_default;
var MapCache_default = MapCache;

// node_modules/lodash-es/memoize.js
var FUNC_ERROR_TEXT3 = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT3);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result2 = func.apply(this, args);
    memoized.cache = cache.set(key, result2) || cache;
    return result2;
  };
  memoized.cache = new (memoize.Cache || MapCache_default)();
  return memoized;
}
memoize.Cache = MapCache_default;
var memoize_default = memoize;

// node_modules/lodash-es/_memoizeCapped.js
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result2 = memoize_default(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result2.cache;
  return result2;
}
var memoizeCapped_default = memoizeCapped;

// node_modules/lodash-es/_stringToPath.js
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = memoizeCapped_default(function(string) {
  var result2 = [];
  if (string.charCodeAt(0) === 46) {
    result2.push("");
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
  });
  return result2;
});
var stringToPath_default = stringToPath;

// node_modules/lodash-es/toString.js
function toString(value) {
  return value == null ? "" : baseToString_default(value);
}
var toString_default = toString;

// node_modules/lodash-es/_castPath.js
function castPath(value, object) {
  if (isArray_default(value)) {
    return value;
  }
  return isKey_default(value, object) ? [value] : stringToPath_default(toString_default(value));
}
var castPath_default = castPath;

// node_modules/lodash-es/_toKey.js
var INFINITY3 = 1 / 0;
function toKey(value) {
  if (typeof value == "string" || isSymbol_default(value)) {
    return value;
  }
  var result2 = value + "";
  return result2 == "0" && 1 / value == -INFINITY3 ? "-0" : result2;
}
var toKey_default = toKey;

// node_modules/lodash-es/_baseGet.js
function baseGet(object, path) {
  path = castPath_default(path, object);
  var index = 0, length = path.length;
  while (object != null && index < length) {
    object = object[toKey_default(path[index++])];
  }
  return index && index == length ? object : void 0;
}
var baseGet_default = baseGet;

// node_modules/lodash-es/get.js
function get(object, path, defaultValue) {
  var result2 = object == null ? void 0 : baseGet_default(object, path);
  return result2 === void 0 ? defaultValue : result2;
}
var get_default = get;

// node_modules/lodash-es/_baseAt.js
function baseAt(object, paths) {
  var index = -1, length = paths.length, result2 = Array(length), skip = object == null;
  while (++index < length) {
    result2[index] = skip ? void 0 : get_default(object, paths[index]);
  }
  return result2;
}
var baseAt_default = baseAt;

// node_modules/lodash-es/_arrayPush.js
function arrayPush(array, values2) {
  var index = -1, length = values2.length, offset = array.length;
  while (++index < length) {
    array[offset + index] = values2[index];
  }
  return array;
}
var arrayPush_default = arrayPush;

// node_modules/lodash-es/_isFlattenable.js
var spreadableSymbol = Symbol_default ? Symbol_default.isConcatSpreadable : void 0;
function isFlattenable(value) {
  return isArray_default(value) || isArguments_default(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
var isFlattenable_default = isFlattenable;

// node_modules/lodash-es/_baseFlatten.js
function baseFlatten(array, depth, predicate, isStrict, result2) {
  var index = -1, length = array.length;
  predicate || (predicate = isFlattenable_default);
  result2 || (result2 = []);
  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten(value, depth - 1, predicate, isStrict, result2);
      } else {
        arrayPush_default(result2, value);
      }
    } else if (!isStrict) {
      result2[result2.length] = value;
    }
  }
  return result2;
}
var baseFlatten_default = baseFlatten;

// node_modules/lodash-es/flatten.js
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten_default(array, 1) : [];
}
var flatten_default = flatten;

// node_modules/lodash-es/_flatRest.js
function flatRest(func) {
  return setToString_default(overRest_default(func, void 0, flatten_default), func + "");
}
var flatRest_default = flatRest;

// node_modules/lodash-es/at.js
var at = flatRest_default(baseAt_default);
var at_default = at;

// node_modules/lodash-es/_getPrototype.js
var getPrototype = overArg_default(Object.getPrototypeOf, Object);
var getPrototype_default = getPrototype;

// node_modules/lodash-es/isPlainObject.js
var objectTag2 = "[object Object]";
var funcProto3 = Function.prototype;
var objectProto15 = Object.prototype;
var funcToString3 = funcProto3.toString;
var hasOwnProperty13 = objectProto15.hasOwnProperty;
var objectCtorString = funcToString3.call(Object);
function isPlainObject(value) {
  if (!isObjectLike_default(value) || baseGetTag_default(value) != objectTag2) {
    return false;
  }
  var proto = getPrototype_default(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty13.call(proto, "constructor") && proto.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString3.call(Ctor) == objectCtorString;
}
var isPlainObject_default = isPlainObject;

// node_modules/lodash-es/isError.js
var domExcTag = "[object DOMException]";
var errorTag2 = "[object Error]";
function isError(value) {
  if (!isObjectLike_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == errorTag2 || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject_default(value);
}
var isError_default = isError;

// node_modules/lodash-es/attempt.js
var attempt = baseRest_default(function(func, args) {
  try {
    return apply_default(func, void 0, args);
  } catch (e) {
    return isError_default(e) ? e : new Error(e);
  }
});
var attempt_default = attempt;

// node_modules/lodash-es/before.js
var FUNC_ERROR_TEXT4 = "Expected a function";
function before(n, func) {
  var result2;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT4);
  }
  n = toInteger_default(n);
  return function() {
    if (--n > 0) {
      result2 = func.apply(this, arguments);
    }
    if (n <= 1) {
      func = void 0;
    }
    return result2;
  };
}
var before_default = before;

// node_modules/lodash-es/bind.js
var WRAP_BIND_FLAG8 = 1;
var WRAP_PARTIAL_FLAG4 = 32;
var bind = baseRest_default(function(func, thisArg, partials) {
  var bitmask = WRAP_BIND_FLAG8;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bind));
    bitmask |= WRAP_PARTIAL_FLAG4;
  }
  return createWrap_default(func, bitmask, thisArg, partials, holders);
});
bind.placeholder = {};
var bind_default = bind;

// node_modules/lodash-es/bindAll.js
var bindAll = flatRest_default(function(object, methodNames) {
  arrayEach_default(methodNames, function(key) {
    key = toKey_default(key);
    baseAssignValue_default(object, key, bind_default(object[key], object));
  });
  return object;
});
var bindAll_default = bindAll;

// node_modules/lodash-es/bindKey.js
var WRAP_BIND_FLAG9 = 1;
var WRAP_BIND_KEY_FLAG6 = 2;
var WRAP_PARTIAL_FLAG5 = 32;
var bindKey = baseRest_default(function(object, key, partials) {
  var bitmask = WRAP_BIND_FLAG9 | WRAP_BIND_KEY_FLAG6;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bindKey));
    bitmask |= WRAP_PARTIAL_FLAG5;
  }
  return createWrap_default(key, bitmask, object, partials, holders);
});
bindKey.placeholder = {};
var bindKey_default = bindKey;

// node_modules/lodash-es/_baseSlice.js
function baseSlice(array, start, end) {
  var index = -1, length = array.length;
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;
  var result2 = Array(length);
  while (++index < length) {
    result2[index] = array[index + start];
  }
  return result2;
}
var baseSlice_default = baseSlice;

// node_modules/lodash-es/_castSlice.js
function castSlice(array, start, end) {
  var length = array.length;
  end = end === void 0 ? length : end;
  return !start && end >= length ? array : baseSlice_default(array, start, end);
}
var castSlice_default = castSlice;

// node_modules/lodash-es/_hasUnicode.js
var rsAstralRange = "\\ud800-\\udfff";
var rsComboMarksRange = "\\u0300-\\u036f";
var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange = "\\u20d0-\\u20ff";
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var rsVarRange = "\\ufe0e\\ufe0f";
var rsZWJ = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
function hasUnicode(string) {
  return reHasUnicode.test(string);
}
var hasUnicode_default = hasUnicode;

// node_modules/lodash-es/_asciiToArray.js
function asciiToArray(string) {
  return string.split("");
}
var asciiToArray_default = asciiToArray;

// node_modules/lodash-es/_unicodeToArray.js
var rsAstralRange2 = "\\ud800-\\udfff";
var rsComboMarksRange2 = "\\u0300-\\u036f";
var reComboHalfMarksRange2 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange2 = "\\u20d0-\\u20ff";
var rsComboRange2 = rsComboMarksRange2 + reComboHalfMarksRange2 + rsComboSymbolsRange2;
var rsVarRange2 = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange2 + "]";
var rsCombo = "[" + rsComboRange2 + "]";
var rsFitz = "\\ud83c[\\udffb-\\udfff]";
var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
var rsNonAstral = "[^" + rsAstralRange2 + "]";
var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ2 = "\\u200d";
var reOptMod = rsModifier + "?";
var rsOptVar = "[" + rsVarRange2 + "]?";
var rsOptJoin = "(?:" + rsZWJ2 + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}
var unicodeToArray_default = unicodeToArray;

// node_modules/lodash-es/_stringToArray.js
function stringToArray(string) {
  return hasUnicode_default(string) ? unicodeToArray_default(string) : asciiToArray_default(string);
}
var stringToArray_default = stringToArray;

// node_modules/lodash-es/_createCaseFirst.js
function createCaseFirst(methodName) {
  return function(string) {
    string = toString_default(string);
    var strSymbols = hasUnicode_default(string) ? stringToArray_default(string) : void 0;
    var chr = strSymbols ? strSymbols[0] : string.charAt(0);
    var trailing = strSymbols ? castSlice_default(strSymbols, 1).join("") : string.slice(1);
    return chr[methodName]() + trailing;
  };
}
var createCaseFirst_default = createCaseFirst;

// node_modules/lodash-es/upperFirst.js
var upperFirst = createCaseFirst_default("toUpperCase");
var upperFirst_default = upperFirst;

// node_modules/lodash-es/capitalize.js
function capitalize(string) {
  return upperFirst_default(toString_default(string).toLowerCase());
}
var capitalize_default = capitalize;

// node_modules/lodash-es/_arrayReduce.js
function arrayReduce(array, iteratee2, accumulator, initAccum) {
  var index = -1, length = array == null ? 0 : array.length;
  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee2(accumulator, array[index], index, array);
  }
  return accumulator;
}
var arrayReduce_default = arrayReduce;

// node_modules/lodash-es/_basePropertyOf.js
function basePropertyOf(object) {
  return function(key) {
    return object == null ? void 0 : object[key];
  };
}
var basePropertyOf_default = basePropertyOf;

// node_modules/lodash-es/_deburrLetter.js
var deburredLetters = {
  // Latin-1 Supplement block.
  "À": "A",
  "Á": "A",
  "Â": "A",
  "Ã": "A",
  "Ä": "A",
  "Å": "A",
  "à": "a",
  "á": "a",
  "â": "a",
  "ã": "a",
  "ä": "a",
  "å": "a",
  "Ç": "C",
  "ç": "c",
  "Ð": "D",
  "ð": "d",
  "È": "E",
  "É": "E",
  "Ê": "E",
  "Ë": "E",
  "è": "e",
  "é": "e",
  "ê": "e",
  "ë": "e",
  "Ì": "I",
  "Í": "I",
  "Î": "I",
  "Ï": "I",
  "ì": "i",
  "í": "i",
  "î": "i",
  "ï": "i",
  "Ñ": "N",
  "ñ": "n",
  "Ò": "O",
  "Ó": "O",
  "Ô": "O",
  "Õ": "O",
  "Ö": "O",
  "Ø": "O",
  "ò": "o",
  "ó": "o",
  "ô": "o",
  "õ": "o",
  "ö": "o",
  "ø": "o",
  "Ù": "U",
  "Ú": "U",
  "Û": "U",
  "Ü": "U",
  "ù": "u",
  "ú": "u",
  "û": "u",
  "ü": "u",
  "Ý": "Y",
  "ý": "y",
  "ÿ": "y",
  "Æ": "Ae",
  "æ": "ae",
  "Þ": "Th",
  "þ": "th",
  "ß": "ss",
  // Latin Extended-A block.
  "Ā": "A",
  "Ă": "A",
  "Ą": "A",
  "ā": "a",
  "ă": "a",
  "ą": "a",
  "Ć": "C",
  "Ĉ": "C",
  "Ċ": "C",
  "Č": "C",
  "ć": "c",
  "ĉ": "c",
  "ċ": "c",
  "č": "c",
  "Ď": "D",
  "Đ": "D",
  "ď": "d",
  "đ": "d",
  "Ē": "E",
  "Ĕ": "E",
  "Ė": "E",
  "Ę": "E",
  "Ě": "E",
  "ē": "e",
  "ĕ": "e",
  "ė": "e",
  "ę": "e",
  "ě": "e",
  "Ĝ": "G",
  "Ğ": "G",
  "Ġ": "G",
  "Ģ": "G",
  "ĝ": "g",
  "ğ": "g",
  "ġ": "g",
  "ģ": "g",
  "Ĥ": "H",
  "Ħ": "H",
  "ĥ": "h",
  "ħ": "h",
  "Ĩ": "I",
  "Ī": "I",
  "Ĭ": "I",
  "Į": "I",
  "İ": "I",
  "ĩ": "i",
  "ī": "i",
  "ĭ": "i",
  "į": "i",
  "ı": "i",
  "Ĵ": "J",
  "ĵ": "j",
  "Ķ": "K",
  "ķ": "k",
  "ĸ": "k",
  "Ĺ": "L",
  "Ļ": "L",
  "Ľ": "L",
  "Ŀ": "L",
  "Ł": "L",
  "ĺ": "l",
  "ļ": "l",
  "ľ": "l",
  "ŀ": "l",
  "ł": "l",
  "Ń": "N",
  "Ņ": "N",
  "Ň": "N",
  "Ŋ": "N",
  "ń": "n",
  "ņ": "n",
  "ň": "n",
  "ŋ": "n",
  "Ō": "O",
  "Ŏ": "O",
  "Ő": "O",
  "ō": "o",
  "ŏ": "o",
  "ő": "o",
  "Ŕ": "R",
  "Ŗ": "R",
  "Ř": "R",
  "ŕ": "r",
  "ŗ": "r",
  "ř": "r",
  "Ś": "S",
  "Ŝ": "S",
  "Ş": "S",
  "Š": "S",
  "ś": "s",
  "ŝ": "s",
  "ş": "s",
  "š": "s",
  "Ţ": "T",
  "Ť": "T",
  "Ŧ": "T",
  "ţ": "t",
  "ť": "t",
  "ŧ": "t",
  "Ũ": "U",
  "Ū": "U",
  "Ŭ": "U",
  "Ů": "U",
  "Ű": "U",
  "Ų": "U",
  "ũ": "u",
  "ū": "u",
  "ŭ": "u",
  "ů": "u",
  "ű": "u",
  "ų": "u",
  "Ŵ": "W",
  "ŵ": "w",
  "Ŷ": "Y",
  "ŷ": "y",
  "Ÿ": "Y",
  "Ź": "Z",
  "Ż": "Z",
  "Ž": "Z",
  "ź": "z",
  "ż": "z",
  "ž": "z",
  "Ĳ": "IJ",
  "ĳ": "ij",
  "Œ": "Oe",
  "œ": "oe",
  "ŉ": "'n",
  "ſ": "s"
};
var deburrLetter = basePropertyOf_default(deburredLetters);
var deburrLetter_default = deburrLetter;

// node_modules/lodash-es/deburr.js
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
var rsComboMarksRange3 = "\\u0300-\\u036f";
var reComboHalfMarksRange3 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange3 = "\\u20d0-\\u20ff";
var rsComboRange3 = rsComboMarksRange3 + reComboHalfMarksRange3 + rsComboSymbolsRange3;
var rsCombo2 = "[" + rsComboRange3 + "]";
var reComboMark = RegExp(rsCombo2, "g");
function deburr(string) {
  string = toString_default(string);
  return string && string.replace(reLatin, deburrLetter_default).replace(reComboMark, "");
}
var deburr_default = deburr;

// node_modules/lodash-es/_asciiWords.js
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}
var asciiWords_default = asciiWords;

// node_modules/lodash-es/_hasUnicodeWord.js
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}
var hasUnicodeWord_default = hasUnicodeWord;

// node_modules/lodash-es/_unicodeWords.js
var rsAstralRange3 = "\\ud800-\\udfff";
var rsComboMarksRange4 = "\\u0300-\\u036f";
var reComboHalfMarksRange4 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange4 = "\\u20d0-\\u20ff";
var rsComboRange4 = rsComboMarksRange4 + reComboHalfMarksRange4 + rsComboSymbolsRange4;
var rsDingbatRange = "\\u2700-\\u27bf";
var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
var rsPunctuationRange = "\\u2000-\\u206f";
var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
var rsVarRange3 = "\\ufe0e\\ufe0f";
var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
var rsApos = "['’]";
var rsBreak = "[" + rsBreakRange + "]";
var rsCombo3 = "[" + rsComboRange4 + "]";
var rsDigits = "\\d+";
var rsDingbat = "[" + rsDingbatRange + "]";
var rsLower = "[" + rsLowerRange + "]";
var rsMisc = "[^" + rsAstralRange3 + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
var rsFitz2 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier2 = "(?:" + rsCombo3 + "|" + rsFitz2 + ")";
var rsNonAstral2 = "[^" + rsAstralRange3 + "]";
var rsRegional2 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair2 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsUpper = "[" + rsUpperRange + "]";
var rsZWJ3 = "\\u200d";
var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
var reOptMod2 = rsModifier2 + "?";
var rsOptVar2 = "[" + rsVarRange3 + "]?";
var rsOptJoin2 = "(?:" + rsZWJ3 + "(?:" + [rsNonAstral2, rsRegional2, rsSurrPair2].join("|") + ")" + rsOptVar2 + reOptMod2 + ")*";
var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
var rsSeq2 = rsOptVar2 + reOptMod2 + rsOptJoin2;
var rsEmoji = "(?:" + [rsDingbat, rsRegional2, rsSurrPair2].join("|") + ")" + rsSeq2;
var reUnicodeWord = RegExp([
  rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
  rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
  rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
  rsUpper + "+" + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join("|"), "g");
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}
var unicodeWords_default = unicodeWords;

// node_modules/lodash-es/words.js
function words(string, pattern, guard) {
  string = toString_default(string);
  pattern = guard ? void 0 : pattern;
  if (pattern === void 0) {
    return hasUnicodeWord_default(string) ? unicodeWords_default(string) : asciiWords_default(string);
  }
  return string.match(pattern) || [];
}
var words_default = words;

// node_modules/lodash-es/_createCompounder.js
var rsApos2 = "['’]";
var reApos = RegExp(rsApos2, "g");
function createCompounder(callback) {
  return function(string) {
    return arrayReduce_default(words_default(deburr_default(string).replace(reApos, "")), callback, "");
  };
}
var createCompounder_default = createCompounder;

// node_modules/lodash-es/camelCase.js
var camelCase = createCompounder_default(function(result2, word, index) {
  word = word.toLowerCase();
  return result2 + (index ? capitalize_default(word) : word);
});
var camelCase_default = camelCase;

// node_modules/lodash-es/castArray.js
function castArray() {
  if (!arguments.length) {
    return [];
  }
  var value = arguments[0];
  return isArray_default(value) ? value : [value];
}
var castArray_default = castArray;

// node_modules/lodash-es/_createRound.js
var nativeIsFinite = root_default.isFinite;
var nativeMin3 = Math.min;
function createRound(methodName) {
  var func = Math[methodName];
  return function(number, precision) {
    number = toNumber_default(number);
    precision = precision == null ? 0 : nativeMin3(toInteger_default(precision), 292);
    if (precision && nativeIsFinite(number)) {
      var pair = (toString_default(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
      pair = (toString_default(value) + "e").split("e");
      return +(pair[0] + "e" + (+pair[1] - precision));
    }
    return func(number);
  };
}
var createRound_default = createRound;

// node_modules/lodash-es/ceil.js
var ceil = createRound_default("ceil");
var ceil_default = ceil;

// node_modules/lodash-es/chain.js
function chain(value) {
  var result2 = wrapperLodash_default(value);
  result2.__chain__ = true;
  return result2;
}
var chain_default = chain;

// node_modules/lodash-es/chunk.js
var nativeCeil = Math.ceil;
var nativeMax5 = Math.max;
function chunk(array, size2, guard) {
  if (guard ? isIterateeCall_default(array, size2, guard) : size2 === void 0) {
    size2 = 1;
  } else {
    size2 = nativeMax5(toInteger_default(size2), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size2 < 1) {
    return [];
  }
  var index = 0, resIndex = 0, result2 = Array(nativeCeil(length / size2));
  while (index < length) {
    result2[resIndex++] = baseSlice_default(array, index, index += size2);
  }
  return result2;
}
var chunk_default = chunk;

// node_modules/lodash-es/_baseClamp.js
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== void 0) {
      number = number <= upper ? number : upper;
    }
    if (lower !== void 0) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}
var baseClamp_default = baseClamp;

// node_modules/lodash-es/clamp.js
function clamp(number, lower, upper) {
  if (upper === void 0) {
    upper = lower;
    lower = void 0;
  }
  if (upper !== void 0) {
    upper = toNumber_default(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== void 0) {
    lower = toNumber_default(lower);
    lower = lower === lower ? lower : 0;
  }
  return baseClamp_default(toNumber_default(number), lower, upper);
}
var clamp_default = clamp;

// node_modules/lodash-es/_stackClear.js
function stackClear() {
  this.__data__ = new ListCache_default();
  this.size = 0;
}
var stackClear_default = stackClear;

// node_modules/lodash-es/_stackDelete.js
function stackDelete(key) {
  var data = this.__data__, result2 = data["delete"](key);
  this.size = data.size;
  return result2;
}
var stackDelete_default = stackDelete;

// node_modules/lodash-es/_stackGet.js
function stackGet(key) {
  return this.__data__.get(key);
}
var stackGet_default = stackGet;

// node_modules/lodash-es/_stackHas.js
function stackHas(key) {
  return this.__data__.has(key);
}
var stackHas_default = stackHas;

// node_modules/lodash-es/_stackSet.js
var LARGE_ARRAY_SIZE = 200;
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache_default) {
    var pairs = data.__data__;
    if (!Map_default || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache_default(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var stackSet_default = stackSet;

// node_modules/lodash-es/_Stack.js
function Stack(entries) {
  var data = this.__data__ = new ListCache_default(entries);
  this.size = data.size;
}
Stack.prototype.clear = stackClear_default;
Stack.prototype["delete"] = stackDelete_default;
Stack.prototype.get = stackGet_default;
Stack.prototype.has = stackHas_default;
Stack.prototype.set = stackSet_default;
var Stack_default = Stack;

// node_modules/lodash-es/_baseAssign.js
function baseAssign(object, source) {
  return object && copyObject_default(source, keys_default(source), object);
}
var baseAssign_default = baseAssign;

// node_modules/lodash-es/_baseAssignIn.js
function baseAssignIn(object, source) {
  return object && copyObject_default(source, keysIn_default(source), object);
}
var baseAssignIn_default = baseAssignIn;

// node_modules/lodash-es/_cloneBuffer.js
var freeExports3 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule3 = freeExports3 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports3 = freeModule3 && freeModule3.exports === freeExports3;
var Buffer3 = moduleExports3 ? root_default.Buffer : void 0;
var allocUnsafe = Buffer3 ? Buffer3.allocUnsafe : void 0;
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result2);
  return result2;
}
var cloneBuffer_default = cloneBuffer;

// node_modules/lodash-es/_arrayFilter.js
function arrayFilter(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result2[resIndex++] = value;
    }
  }
  return result2;
}
var arrayFilter_default = arrayFilter;

// node_modules/lodash-es/stubArray.js
function stubArray() {
  return [];
}
var stubArray_default = stubArray;

// node_modules/lodash-es/_getSymbols.js
var objectProto16 = Object.prototype;
var propertyIsEnumerable2 = objectProto16.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols ? stubArray_default : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter_default(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable2.call(object, symbol);
  });
};
var getSymbols_default = getSymbols;

// node_modules/lodash-es/_copySymbols.js
function copySymbols(source, object) {
  return copyObject_default(source, getSymbols_default(source), object);
}
var copySymbols_default = copySymbols;

// node_modules/lodash-es/_getSymbolsIn.js
var nativeGetSymbols2 = Object.getOwnPropertySymbols;
var getSymbolsIn = !nativeGetSymbols2 ? stubArray_default : function(object) {
  var result2 = [];
  while (object) {
    arrayPush_default(result2, getSymbols_default(object));
    object = getPrototype_default(object);
  }
  return result2;
};
var getSymbolsIn_default = getSymbolsIn;

// node_modules/lodash-es/_copySymbolsIn.js
function copySymbolsIn(source, object) {
  return copyObject_default(source, getSymbolsIn_default(source), object);
}
var copySymbolsIn_default = copySymbolsIn;

// node_modules/lodash-es/_baseGetAllKeys.js
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result2 = keysFunc(object);
  return isArray_default(object) ? result2 : arrayPush_default(result2, symbolsFunc(object));
}
var baseGetAllKeys_default = baseGetAllKeys;

// node_modules/lodash-es/_getAllKeys.js
function getAllKeys(object) {
  return baseGetAllKeys_default(object, keys_default, getSymbols_default);
}
var getAllKeys_default = getAllKeys;

// node_modules/lodash-es/_getAllKeysIn.js
function getAllKeysIn(object) {
  return baseGetAllKeys_default(object, keysIn_default, getSymbolsIn_default);
}
var getAllKeysIn_default = getAllKeysIn;

// node_modules/lodash-es/_DataView.js
var DataView = getNative_default(root_default, "DataView");
var DataView_default = DataView;

// node_modules/lodash-es/_Promise.js
var Promise2 = getNative_default(root_default, "Promise");
var Promise_default = Promise2;

// node_modules/lodash-es/_Set.js
var Set2 = getNative_default(root_default, "Set");
var Set_default = Set2;

// node_modules/lodash-es/_getTag.js
var mapTag2 = "[object Map]";
var objectTag3 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag2 = "[object Set]";
var weakMapTag2 = "[object WeakMap]";
var dataViewTag2 = "[object DataView]";
var dataViewCtorString = toSource_default(DataView_default);
var mapCtorString = toSource_default(Map_default);
var promiseCtorString = toSource_default(Promise_default);
var setCtorString = toSource_default(Set_default);
var weakMapCtorString = toSource_default(WeakMap_default);
var getTag = baseGetTag_default;
if (DataView_default && getTag(new DataView_default(new ArrayBuffer(1))) != dataViewTag2 || Map_default && getTag(new Map_default()) != mapTag2 || Promise_default && getTag(Promise_default.resolve()) != promiseTag || Set_default && getTag(new Set_default()) != setTag2 || WeakMap_default && getTag(new WeakMap_default()) != weakMapTag2) {
  getTag = function(value) {
    var result2 = baseGetTag_default(value), Ctor = result2 == objectTag3 ? value.constructor : void 0, ctorString = Ctor ? toSource_default(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag2;
        case mapCtorString:
          return mapTag2;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag2;
        case weakMapCtorString:
          return weakMapTag2;
      }
    }
    return result2;
  };
}
var getTag_default = getTag;

// node_modules/lodash-es/_initCloneArray.js
var objectProto17 = Object.prototype;
var hasOwnProperty14 = objectProto17.hasOwnProperty;
function initCloneArray(array) {
  var length = array.length, result2 = new array.constructor(length);
  if (length && typeof array[0] == "string" && hasOwnProperty14.call(array, "index")) {
    result2.index = array.index;
    result2.input = array.input;
  }
  return result2;
}
var initCloneArray_default = initCloneArray;

// node_modules/lodash-es/_Uint8Array.js
var Uint8Array = root_default.Uint8Array;
var Uint8Array_default = Uint8Array;

// node_modules/lodash-es/_cloneArrayBuffer.js
function cloneArrayBuffer(arrayBuffer) {
  var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array_default(result2).set(new Uint8Array_default(arrayBuffer));
  return result2;
}
var cloneArrayBuffer_default = cloneArrayBuffer;

// node_modules/lodash-es/_cloneDataView.js
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}
var cloneDataView_default = cloneDataView;

// node_modules/lodash-es/_cloneRegExp.js
var reFlags = /\w*$/;
function cloneRegExp(regexp) {
  var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result2.lastIndex = regexp.lastIndex;
  return result2;
}
var cloneRegExp_default = cloneRegExp;

// node_modules/lodash-es/_cloneSymbol.js
var symbolProto2 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf = symbolProto2 ? symbolProto2.valueOf : void 0;
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}
var cloneSymbol_default = cloneSymbol;

// node_modules/lodash-es/_cloneTypedArray.js
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var cloneTypedArray_default = cloneTypedArray;

// node_modules/lodash-es/_initCloneByTag.js
var boolTag2 = "[object Boolean]";
var dateTag2 = "[object Date]";
var mapTag3 = "[object Map]";
var numberTag2 = "[object Number]";
var regexpTag2 = "[object RegExp]";
var setTag3 = "[object Set]";
var stringTag2 = "[object String]";
var symbolTag2 = "[object Symbol]";
var arrayBufferTag2 = "[object ArrayBuffer]";
var dataViewTag3 = "[object DataView]";
var float32Tag2 = "[object Float32Array]";
var float64Tag2 = "[object Float64Array]";
var int8Tag2 = "[object Int8Array]";
var int16Tag2 = "[object Int16Array]";
var int32Tag2 = "[object Int32Array]";
var uint8Tag2 = "[object Uint8Array]";
var uint8ClampedTag2 = "[object Uint8ClampedArray]";
var uint16Tag2 = "[object Uint16Array]";
var uint32Tag2 = "[object Uint32Array]";
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag2:
      return cloneArrayBuffer_default(object);
    case boolTag2:
    case dateTag2:
      return new Ctor(+object);
    case dataViewTag3:
      return cloneDataView_default(object, isDeep);
    case float32Tag2:
    case float64Tag2:
    case int8Tag2:
    case int16Tag2:
    case int32Tag2:
    case uint8Tag2:
    case uint8ClampedTag2:
    case uint16Tag2:
    case uint32Tag2:
      return cloneTypedArray_default(object, isDeep);
    case mapTag3:
      return new Ctor();
    case numberTag2:
    case stringTag2:
      return new Ctor(object);
    case regexpTag2:
      return cloneRegExp_default(object);
    case setTag3:
      return new Ctor();
    case symbolTag2:
      return cloneSymbol_default(object);
  }
}
var initCloneByTag_default = initCloneByTag;

// node_modules/lodash-es/_initCloneObject.js
function initCloneObject(object) {
  return typeof object.constructor == "function" && !isPrototype_default(object) ? baseCreate_default(getPrototype_default(object)) : {};
}
var initCloneObject_default = initCloneObject;

// node_modules/lodash-es/_baseIsMap.js
var mapTag4 = "[object Map]";
function baseIsMap(value) {
  return isObjectLike_default(value) && getTag_default(value) == mapTag4;
}
var baseIsMap_default = baseIsMap;

// node_modules/lodash-es/isMap.js
var nodeIsMap = nodeUtil_default && nodeUtil_default.isMap;
var isMap = nodeIsMap ? baseUnary_default(nodeIsMap) : baseIsMap_default;
var isMap_default = isMap;

// node_modules/lodash-es/_baseIsSet.js
var setTag4 = "[object Set]";
function baseIsSet(value) {
  return isObjectLike_default(value) && getTag_default(value) == setTag4;
}
var baseIsSet_default = baseIsSet;

// node_modules/lodash-es/isSet.js
var nodeIsSet = nodeUtil_default && nodeUtil_default.isSet;
var isSet = nodeIsSet ? baseUnary_default(nodeIsSet) : baseIsSet_default;
var isSet_default = isSet;

// node_modules/lodash-es/_baseClone.js
var CLONE_DEEP_FLAG = 1;
var CLONE_FLAT_FLAG = 2;
var CLONE_SYMBOLS_FLAG = 4;
var argsTag3 = "[object Arguments]";
var arrayTag2 = "[object Array]";
var boolTag3 = "[object Boolean]";
var dateTag3 = "[object Date]";
var errorTag3 = "[object Error]";
var funcTag3 = "[object Function]";
var genTag2 = "[object GeneratorFunction]";
var mapTag5 = "[object Map]";
var numberTag3 = "[object Number]";
var objectTag4 = "[object Object]";
var regexpTag3 = "[object RegExp]";
var setTag5 = "[object Set]";
var stringTag3 = "[object String]";
var symbolTag3 = "[object Symbol]";
var weakMapTag3 = "[object WeakMap]";
var arrayBufferTag3 = "[object ArrayBuffer]";
var dataViewTag4 = "[object DataView]";
var float32Tag3 = "[object Float32Array]";
var float64Tag3 = "[object Float64Array]";
var int8Tag3 = "[object Int8Array]";
var int16Tag3 = "[object Int16Array]";
var int32Tag3 = "[object Int32Array]";
var uint8Tag3 = "[object Uint8Array]";
var uint8ClampedTag3 = "[object Uint8ClampedArray]";
var uint16Tag3 = "[object Uint16Array]";
var uint32Tag3 = "[object Uint32Array]";
var cloneableTags = {};
cloneableTags[argsTag3] = cloneableTags[arrayTag2] = cloneableTags[arrayBufferTag3] = cloneableTags[dataViewTag4] = cloneableTags[boolTag3] = cloneableTags[dateTag3] = cloneableTags[float32Tag3] = cloneableTags[float64Tag3] = cloneableTags[int8Tag3] = cloneableTags[int16Tag3] = cloneableTags[int32Tag3] = cloneableTags[mapTag5] = cloneableTags[numberTag3] = cloneableTags[objectTag4] = cloneableTags[regexpTag3] = cloneableTags[setTag5] = cloneableTags[stringTag3] = cloneableTags[symbolTag3] = cloneableTags[uint8Tag3] = cloneableTags[uint8ClampedTag3] = cloneableTags[uint16Tag3] = cloneableTags[uint32Tag3] = true;
cloneableTags[errorTag3] = cloneableTags[funcTag3] = cloneableTags[weakMapTag3] = false;
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
  if (customizer) {
    result2 = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result2 !== void 0) {
    return result2;
  }
  if (!isObject_default(value)) {
    return value;
  }
  var isArr = isArray_default(value);
  if (isArr) {
    result2 = initCloneArray_default(value);
    if (!isDeep) {
      return copyArray_default(value, result2);
    }
  } else {
    var tag = getTag_default(value), isFunc = tag == funcTag3 || tag == genTag2;
    if (isBuffer_default(value)) {
      return cloneBuffer_default(value, isDeep);
    }
    if (tag == objectTag4 || tag == argsTag3 || isFunc && !object) {
      result2 = isFlat || isFunc ? {} : initCloneObject_default(value);
      if (!isDeep) {
        return isFlat ? copySymbolsIn_default(value, baseAssignIn_default(result2, value)) : copySymbols_default(value, baseAssign_default(result2, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result2 = initCloneByTag_default(value, tag, isDeep);
    }
  }
  stack || (stack = new Stack_default());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result2);
  if (isSet_default(value)) {
    value.forEach(function(subValue) {
      result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap_default(value)) {
    value.forEach(function(subValue, key2) {
      result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? getAllKeysIn_default : getAllKeys_default : isFlat ? keysIn_default : keys_default;
  var props = isArr ? void 0 : keysFunc(value);
  arrayEach_default(props || value, function(subValue, key2) {
    if (props) {
      key2 = subValue;
      subValue = value[key2];
    }
    assignValue_default(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
  });
  return result2;
}
var baseClone_default = baseClone;

// node_modules/lodash-es/clone.js
var CLONE_SYMBOLS_FLAG2 = 4;
function clone(value) {
  return baseClone_default(value, CLONE_SYMBOLS_FLAG2);
}
var clone_default = clone;

// node_modules/lodash-es/cloneDeep.js
var CLONE_DEEP_FLAG2 = 1;
var CLONE_SYMBOLS_FLAG3 = 4;
function cloneDeep(value) {
  return baseClone_default(value, CLONE_DEEP_FLAG2 | CLONE_SYMBOLS_FLAG3);
}
var cloneDeep_default = cloneDeep;

// node_modules/lodash-es/cloneDeepWith.js
var CLONE_DEEP_FLAG3 = 1;
var CLONE_SYMBOLS_FLAG4 = 4;
function cloneDeepWith(value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value, CLONE_DEEP_FLAG3 | CLONE_SYMBOLS_FLAG4, customizer);
}
var cloneDeepWith_default = cloneDeepWith;

// node_modules/lodash-es/cloneWith.js
var CLONE_SYMBOLS_FLAG5 = 4;
function cloneWith(value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value, CLONE_SYMBOLS_FLAG5, customizer);
}
var cloneWith_default = cloneWith;

// node_modules/lodash-es/commit.js
function wrapperCommit() {
  return new LodashWrapper_default(this.value(), this.__chain__);
}
var commit_default = wrapperCommit;

// node_modules/lodash-es/compact.js
function compact(array) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array[index];
    if (value) {
      result2[resIndex++] = value;
    }
  }
  return result2;
}
var compact_default = compact;

// node_modules/lodash-es/concat.js
function concat() {
  var length = arguments.length;
  if (!length) {
    return [];
  }
  var args = Array(length - 1), array = arguments[0], index = length;
  while (index--) {
    args[index - 1] = arguments[index];
  }
  return arrayPush_default(isArray_default(array) ? copyArray_default(array) : [array], baseFlatten_default(args, 1));
}
var concat_default = concat;

// node_modules/lodash-es/_setCacheAdd.js
var HASH_UNDEFINED3 = "__lodash_hash_undefined__";
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED3);
  return this;
}
var setCacheAdd_default = setCacheAdd;

// node_modules/lodash-es/_setCacheHas.js
function setCacheHas(value) {
  return this.__data__.has(value);
}
var setCacheHas_default = setCacheHas;

// node_modules/lodash-es/_SetCache.js
function SetCache(values2) {
  var index = -1, length = values2 == null ? 0 : values2.length;
  this.__data__ = new MapCache_default();
  while (++index < length) {
    this.add(values2[index]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd_default;
SetCache.prototype.has = setCacheHas_default;
var SetCache_default = SetCache;

// node_modules/lodash-es/_arraySome.js
function arraySome(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
var arraySome_default = arraySome;

// node_modules/lodash-es/_cacheHas.js
function cacheHas(cache, key) {
  return cache.has(key);
}
var cacheHas_default = cacheHas;

// node_modules/lodash-es/_equalArrays.js
var COMPARE_PARTIAL_FLAG = 1;
var COMPARE_UNORDERED_FLAG = 2;
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache_default() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index], othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result2 = false;
      break;
    }
    if (seen) {
      if (!arraySome_default(other, function(othValue2, othIndex) {
        if (!cacheHas_default(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result2 = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result2 = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result2;
}
var equalArrays_default = equalArrays;

// node_modules/lodash-es/_mapToArray.js
function mapToArray(map2) {
  var index = -1, result2 = Array(map2.size);
  map2.forEach(function(value, key) {
    result2[++index] = [key, value];
  });
  return result2;
}
var mapToArray_default = mapToArray;

// node_modules/lodash-es/_setToArray.js
function setToArray(set2) {
  var index = -1, result2 = Array(set2.size);
  set2.forEach(function(value) {
    result2[++index] = value;
  });
  return result2;
}
var setToArray_default = setToArray;

// node_modules/lodash-es/_equalByTag.js
var COMPARE_PARTIAL_FLAG2 = 1;
var COMPARE_UNORDERED_FLAG2 = 2;
var boolTag4 = "[object Boolean]";
var dateTag4 = "[object Date]";
var errorTag4 = "[object Error]";
var mapTag6 = "[object Map]";
var numberTag4 = "[object Number]";
var regexpTag4 = "[object RegExp]";
var setTag6 = "[object Set]";
var stringTag4 = "[object String]";
var symbolTag4 = "[object Symbol]";
var arrayBufferTag4 = "[object ArrayBuffer]";
var dataViewTag5 = "[object DataView]";
var symbolProto3 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf2 = symbolProto3 ? symbolProto3.valueOf : void 0;
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag5:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag4:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array_default(object), new Uint8Array_default(other))) {
        return false;
      }
      return true;
    case boolTag4:
    case dateTag4:
    case numberTag4:
      return eq_default(+object, +other);
    case errorTag4:
      return object.name == other.name && object.message == other.message;
    case regexpTag4:
    case stringTag4:
      return object == other + "";
    case mapTag6:
      var convert = mapToArray_default;
    case setTag6:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG2;
      convert || (convert = setToArray_default);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG2;
      stack.set(object, other);
      var result2 = equalArrays_default(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result2;
    case symbolTag4:
      if (symbolValueOf2) {
        return symbolValueOf2.call(object) == symbolValueOf2.call(other);
      }
  }
  return false;
}
var equalByTag_default = equalByTag;

// node_modules/lodash-es/_equalObjects.js
var COMPARE_PARTIAL_FLAG3 = 1;
var objectProto18 = Object.prototype;
var hasOwnProperty15 = objectProto18.hasOwnProperty;
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG3, objProps = getAllKeys_default(object), objLength = objProps.length, othProps = getAllKeys_default(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty15.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result2 = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result2 = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result2 && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result2 = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result2;
}
var equalObjects_default = equalObjects;

// node_modules/lodash-es/_baseIsEqualDeep.js
var COMPARE_PARTIAL_FLAG4 = 1;
var argsTag4 = "[object Arguments]";
var arrayTag3 = "[object Array]";
var objectTag5 = "[object Object]";
var objectProto19 = Object.prototype;
var hasOwnProperty16 = objectProto19.hasOwnProperty;
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_default(object), othIsArr = isArray_default(other), objTag = objIsArr ? arrayTag3 : getTag_default(object), othTag = othIsArr ? arrayTag3 : getTag_default(other);
  objTag = objTag == argsTag4 ? objectTag5 : objTag;
  othTag = othTag == argsTag4 ? objectTag5 : othTag;
  var objIsObj = objTag == objectTag5, othIsObj = othTag == objectTag5, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer_default(object)) {
    if (!isBuffer_default(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack_default());
    return objIsArr || isTypedArray_default(object) ? equalArrays_default(object, other, bitmask, customizer, equalFunc, stack) : equalByTag_default(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG4)) {
    var objIsWrapped = objIsObj && hasOwnProperty16.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty16.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack_default());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack_default());
  return equalObjects_default(object, other, bitmask, customizer, equalFunc, stack);
}
var baseIsEqualDeep_default = baseIsEqualDeep;

// node_modules/lodash-es/_baseIsEqual.js
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike_default(value) && !isObjectLike_default(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep_default(value, other, bitmask, customizer, baseIsEqual, stack);
}
var baseIsEqual_default = baseIsEqual;

// node_modules/lodash-es/_baseIsMatch.js
var COMPARE_PARTIAL_FLAG5 = 1;
var COMPARE_UNORDERED_FLAG3 = 2;
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length, length = index, noCustomizer = !customizer;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0], objValue = object[key], srcValue = data[1];
    if (noCustomizer && data[2]) {
      if (objValue === void 0 && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack_default();
      if (customizer) {
        var result2 = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result2 === void 0 ? baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG5 | COMPARE_UNORDERED_FLAG3, customizer, stack) : result2)) {
        return false;
      }
    }
  }
  return true;
}
var baseIsMatch_default = baseIsMatch;

// node_modules/lodash-es/_isStrictComparable.js
function isStrictComparable(value) {
  return value === value && !isObject_default(value);
}
var isStrictComparable_default = isStrictComparable;

// node_modules/lodash-es/_getMatchData.js
function getMatchData(object) {
  var result2 = keys_default(object), length = result2.length;
  while (length--) {
    var key = result2[length], value = object[key];
    result2[length] = [key, value, isStrictComparable_default(value)];
  }
  return result2;
}
var getMatchData_default = getMatchData;

// node_modules/lodash-es/_matchesStrictComparable.js
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
  };
}
var matchesStrictComparable_default = matchesStrictComparable;

// node_modules/lodash-es/_baseMatches.js
function baseMatches(source) {
  var matchData = getMatchData_default(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable_default(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch_default(object, source, matchData);
  };
}
var baseMatches_default = baseMatches;

// node_modules/lodash-es/_baseHasIn.js
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}
var baseHasIn_default = baseHasIn;

// node_modules/lodash-es/_hasPath.js
function hasPath(object, path, hasFunc) {
  path = castPath_default(path, object);
  var index = -1, length = path.length, result2 = false;
  while (++index < length) {
    var key = toKey_default(path[index]);
    if (!(result2 = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result2 || ++index != length) {
    return result2;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength_default(length) && isIndex_default(key, length) && (isArray_default(object) || isArguments_default(object));
}
var hasPath_default = hasPath;

// node_modules/lodash-es/hasIn.js
function hasIn(object, path) {
  return object != null && hasPath_default(object, path, baseHasIn_default);
}
var hasIn_default = hasIn;

// node_modules/lodash-es/_baseMatchesProperty.js
var COMPARE_PARTIAL_FLAG6 = 1;
var COMPARE_UNORDERED_FLAG4 = 2;
function baseMatchesProperty(path, srcValue) {
  if (isKey_default(path) && isStrictComparable_default(srcValue)) {
    return matchesStrictComparable_default(toKey_default(path), srcValue);
  }
  return function(object) {
    var objValue = get_default(object, path);
    return objValue === void 0 && objValue === srcValue ? hasIn_default(object, path) : baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG6 | COMPARE_UNORDERED_FLAG4);
  };
}
var baseMatchesProperty_default = baseMatchesProperty;

// node_modules/lodash-es/_baseProperty.js
function baseProperty(key) {
  return function(object) {
    return object == null ? void 0 : object[key];
  };
}
var baseProperty_default = baseProperty;

// node_modules/lodash-es/_basePropertyDeep.js
function basePropertyDeep(path) {
  return function(object) {
    return baseGet_default(object, path);
  };
}
var basePropertyDeep_default = basePropertyDeep;

// node_modules/lodash-es/property.js
function property(path) {
  return isKey_default(path) ? baseProperty_default(toKey_default(path)) : basePropertyDeep_default(path);
}
var property_default = property;

// node_modules/lodash-es/_baseIteratee.js
function baseIteratee(value) {
  if (typeof value == "function") {
    return value;
  }
  if (value == null) {
    return identity_default;
  }
  if (typeof value == "object") {
    return isArray_default(value) ? baseMatchesProperty_default(value[0], value[1]) : baseMatches_default(value);
  }
  return property_default(value);
}
var baseIteratee_default = baseIteratee;

// node_modules/lodash-es/cond.js
var FUNC_ERROR_TEXT5 = "Expected a function";
function cond(pairs) {
  var length = pairs == null ? 0 : pairs.length, toIteratee = baseIteratee_default;
  pairs = !length ? [] : arrayMap_default(pairs, function(pair) {
    if (typeof pair[1] != "function") {
      throw new TypeError(FUNC_ERROR_TEXT5);
    }
    return [toIteratee(pair[0]), pair[1]];
  });
  return baseRest_default(function(args) {
    var index = -1;
    while (++index < length) {
      var pair = pairs[index];
      if (apply_default(pair[0], this, args)) {
        return apply_default(pair[1], this, args);
      }
    }
  });
}
var cond_default = cond;

// node_modules/lodash-es/_baseConformsTo.js
function baseConformsTo(object, source, props) {
  var length = props.length;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (length--) {
    var key = props[length], predicate = source[key], value = object[key];
    if (value === void 0 && !(key in object) || !predicate(value)) {
      return false;
    }
  }
  return true;
}
var baseConformsTo_default = baseConformsTo;

// node_modules/lodash-es/_baseConforms.js
function baseConforms(source) {
  var props = keys_default(source);
  return function(object) {
    return baseConformsTo_default(object, source, props);
  };
}
var baseConforms_default = baseConforms;

// node_modules/lodash-es/conforms.js
var CLONE_DEEP_FLAG4 = 1;
function conforms(source) {
  return baseConforms_default(baseClone_default(source, CLONE_DEEP_FLAG4));
}
var conforms_default = conforms;

// node_modules/lodash-es/conformsTo.js
function conformsTo(object, source) {
  return source == null || baseConformsTo_default(object, source, keys_default(source));
}
var conformsTo_default = conformsTo;

// node_modules/lodash-es/_arrayAggregator.js
function arrayAggregator(array, setter, iteratee2, accumulator) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee2(value), array);
  }
  return accumulator;
}
var arrayAggregator_default = arrayAggregator;

// node_modules/lodash-es/_createBaseFor.js
function createBaseFor(fromRight) {
  return function(object, iteratee2, keysFunc) {
    var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee2(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}
var createBaseFor_default = createBaseFor;

// node_modules/lodash-es/_baseFor.js
var baseFor = createBaseFor_default();
var baseFor_default = baseFor;

// node_modules/lodash-es/_baseForOwn.js
function baseForOwn(object, iteratee2) {
  return object && baseFor_default(object, iteratee2, keys_default);
}
var baseForOwn_default = baseForOwn;

// node_modules/lodash-es/_createBaseEach.js
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee2) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike_default(collection)) {
      return eachFunc(collection, iteratee2);
    }
    var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
    while (fromRight ? index-- : ++index < length) {
      if (iteratee2(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var createBaseEach_default = createBaseEach;

// node_modules/lodash-es/_baseEach.js
var baseEach = createBaseEach_default(baseForOwn_default);
var baseEach_default = baseEach;

// node_modules/lodash-es/_baseAggregator.js
function baseAggregator(collection, setter, iteratee2, accumulator) {
  baseEach_default(collection, function(value, key, collection2) {
    setter(accumulator, value, iteratee2(value), collection2);
  });
  return accumulator;
}
var baseAggregator_default = baseAggregator;

// node_modules/lodash-es/_createAggregator.js
function createAggregator(setter, initializer) {
  return function(collection, iteratee2) {
    var func = isArray_default(collection) ? arrayAggregator_default : baseAggregator_default, accumulator = initializer ? initializer() : {};
    return func(collection, setter, baseIteratee_default(iteratee2, 2), accumulator);
  };
}
var createAggregator_default = createAggregator;

// node_modules/lodash-es/countBy.js
var objectProto20 = Object.prototype;
var hasOwnProperty17 = objectProto20.hasOwnProperty;
var countBy = createAggregator_default(function(result2, value, key) {
  if (hasOwnProperty17.call(result2, key)) {
    ++result2[key];
  } else {
    baseAssignValue_default(result2, key, 1);
  }
});
var countBy_default = countBy;

// node_modules/lodash-es/create.js
function create(prototype, properties) {
  var result2 = baseCreate_default(prototype);
  return properties == null ? result2 : baseAssign_default(result2, properties);
}
var create_default = create;

// node_modules/lodash-es/curry.js
var WRAP_CURRY_FLAG6 = 8;
function curry(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_FLAG6, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curry.placeholder;
  return result2;
}
curry.placeholder = {};
var curry_default = curry;

// node_modules/lodash-es/curryRight.js
var WRAP_CURRY_RIGHT_FLAG4 = 16;
function curryRight(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_RIGHT_FLAG4, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curryRight.placeholder;
  return result2;
}
curryRight.placeholder = {};
var curryRight_default = curryRight;

// node_modules/lodash-es/now.js
var now = function() {
  return root_default.Date.now();
};
var now_default = now;

// node_modules/lodash-es/debounce.js
var FUNC_ERROR_TEXT6 = "Expected a function";
var nativeMax6 = Math.max;
var nativeMin4 = Math.min;
function debounce(func, wait, options) {
  var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT6);
  }
  wait = toNumber_default(wait) || 0;
  if (isObject_default(options)) {
    leading = !!options.leading;
    maxing = "maxWait" in options;
    maxWait = maxing ? nativeMax6(toNumber_default(options.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time;
    result2 = func.apply(thisArg, args);
    return result2;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result2;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin4(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now_default();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result2;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result2 : trailingEdge(now_default());
  }
  function debounced() {
    var time = now_default(), isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result2;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
var debounce_default = debounce;

// node_modules/lodash-es/defaultTo.js
function defaultTo(value, defaultValue) {
  return value == null || value !== value ? defaultValue : value;
}
var defaultTo_default = defaultTo;

// node_modules/lodash-es/defaults.js
var objectProto21 = Object.prototype;
var hasOwnProperty18 = objectProto21.hasOwnProperty;
var defaults = baseRest_default(function(object, sources) {
  object = Object(object);
  var index = -1;
  var length = sources.length;
  var guard = length > 2 ? sources[2] : void 0;
  if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
    length = 1;
  }
  while (++index < length) {
    var source = sources[index];
    var props = keysIn_default(source);
    var propsIndex = -1;
    var propsLength = props.length;
    while (++propsIndex < propsLength) {
      var key = props[propsIndex];
      var value = object[key];
      if (value === void 0 || eq_default(value, objectProto21[key]) && !hasOwnProperty18.call(object, key)) {
        object[key] = source[key];
      }
    }
  }
  return object;
});
var defaults_default = defaults;

// node_modules/lodash-es/_assignMergeValue.js
function assignMergeValue(object, key, value) {
  if (value !== void 0 && !eq_default(object[key], value) || value === void 0 && !(key in object)) {
    baseAssignValue_default(object, key, value);
  }
}
var assignMergeValue_default = assignMergeValue;

// node_modules/lodash-es/isArrayLikeObject.js
function isArrayLikeObject(value) {
  return isObjectLike_default(value) && isArrayLike_default(value);
}
var isArrayLikeObject_default = isArrayLikeObject;

// node_modules/lodash-es/_safeGet.js
function safeGet(object, key) {
  if (key === "constructor" && typeof object[key] === "function") {
    return;
  }
  if (key == "__proto__") {
    return;
  }
  return object[key];
}
var safeGet_default = safeGet;

// node_modules/lodash-es/toPlainObject.js
function toPlainObject(value) {
  return copyObject_default(value, keysIn_default(value));
}
var toPlainObject_default = toPlainObject;

// node_modules/lodash-es/_baseMergeDeep.js
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet_default(object, key), srcValue = safeGet_default(source, key), stacked = stack.get(srcValue);
  if (stacked) {
    assignMergeValue_default(object, key, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray_default(srcValue), isBuff = !isArr && isBuffer_default(srcValue), isTyped = !isArr && !isBuff && isTypedArray_default(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray_default(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject_default(objValue)) {
        newValue = copyArray_default(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer_default(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray_default(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject_default(srcValue) || isArguments_default(srcValue)) {
      newValue = objValue;
      if (isArguments_default(objValue)) {
        newValue = toPlainObject_default(objValue);
      } else if (!isObject_default(objValue) || isFunction_default(objValue)) {
        newValue = initCloneObject_default(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack["delete"](srcValue);
  }
  assignMergeValue_default(object, key, newValue);
}
var baseMergeDeep_default = baseMergeDeep;

// node_modules/lodash-es/_baseMerge.js
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor_default(source, function(srcValue, key) {
    stack || (stack = new Stack_default());
    if (isObject_default(srcValue)) {
      baseMergeDeep_default(object, source, key, srcIndex, baseMerge, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet_default(object, key), srcValue, key + "", object, source, stack) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      assignMergeValue_default(object, key, newValue);
    }
  }, keysIn_default);
}
var baseMerge_default = baseMerge;

// node_modules/lodash-es/_customDefaultsMerge.js
function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
  if (isObject_default(objValue) && isObject_default(srcValue)) {
    stack.set(srcValue, objValue);
    baseMerge_default(objValue, srcValue, void 0, customDefaultsMerge, stack);
    stack["delete"](srcValue);
  }
  return objValue;
}
var customDefaultsMerge_default = customDefaultsMerge;

// node_modules/lodash-es/mergeWith.js
var mergeWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  baseMerge_default(object, source, srcIndex, customizer);
});
var mergeWith_default = mergeWith;

// node_modules/lodash-es/defaultsDeep.js
var defaultsDeep = baseRest_default(function(args) {
  args.push(void 0, customDefaultsMerge_default);
  return apply_default(mergeWith_default, void 0, args);
});
var defaultsDeep_default = defaultsDeep;

// node_modules/lodash-es/_baseDelay.js
var FUNC_ERROR_TEXT7 = "Expected a function";
function baseDelay(func, wait, args) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT7);
  }
  return setTimeout(function() {
    func.apply(void 0, args);
  }, wait);
}
var baseDelay_default = baseDelay;

// node_modules/lodash-es/defer.js
var defer = baseRest_default(function(func, args) {
  return baseDelay_default(func, 1, args);
});
var defer_default = defer;

// node_modules/lodash-es/delay.js
var delay = baseRest_default(function(func, wait, args) {
  return baseDelay_default(func, toNumber_default(wait) || 0, args);
});
var delay_default = delay;

// node_modules/lodash-es/_arrayIncludesWith.js
function arrayIncludesWith(array, value, comparator) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}
var arrayIncludesWith_default = arrayIncludesWith;

// node_modules/lodash-es/_baseDifference.js
var LARGE_ARRAY_SIZE2 = 200;
function baseDifference(array, values2, iteratee2, comparator) {
  var index = -1, includes2 = arrayIncludes_default, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
  if (!length) {
    return result2;
  }
  if (iteratee2) {
    values2 = arrayMap_default(values2, baseUnary_default(iteratee2));
  }
  if (comparator) {
    includes2 = arrayIncludesWith_default;
    isCommon = false;
  } else if (values2.length >= LARGE_ARRAY_SIZE2) {
    includes2 = cacheHas_default;
    isCommon = false;
    values2 = new SetCache_default(values2);
  }
  outer:
    while (++index < length) {
      var value = array[index], computed2 = iteratee2 == null ? value : iteratee2(value);
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed2 === computed2) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values2[valuesIndex] === computed2) {
            continue outer;
          }
        }
        result2.push(value);
      } else if (!includes2(values2, computed2, comparator)) {
        result2.push(value);
      }
    }
  return result2;
}
var baseDifference_default = baseDifference;

// node_modules/lodash-es/difference.js
var difference = baseRest_default(function(array, values2) {
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values2, 1, isArrayLikeObject_default, true)) : [];
});
var difference_default = difference;

// node_modules/lodash-es/last.js
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : void 0;
}
var last_default = last;

// node_modules/lodash-es/differenceBy.js
var differenceBy = baseRest_default(function(array, values2) {
  var iteratee2 = last_default(values2);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2)) : [];
});
var differenceBy_default = differenceBy;

// node_modules/lodash-es/differenceWith.js
var differenceWith = baseRest_default(function(array, values2) {
  var comparator = last_default(values2);
  if (isArrayLikeObject_default(comparator)) {
    comparator = void 0;
  }
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), void 0, comparator) : [];
});
var differenceWith_default = differenceWith;

// node_modules/lodash-es/divide.js
var divide = createMathOperation_default(function(dividend, divisor) {
  return dividend / divisor;
}, 1);
var divide_default = divide;

// node_modules/lodash-es/drop.js
function drop(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array, n < 0 ? 0 : n, length);
}
var drop_default = drop;

// node_modules/lodash-es/dropRight.js
function dropRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array, 0, n < 0 ? 0 : n);
}
var dropRight_default = dropRight;

// node_modules/lodash-es/_baseWhile.js
function baseWhile(array, predicate, isDrop, fromRight) {
  var length = array.length, index = fromRight ? length : -1;
  while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
  }
  return isDrop ? baseSlice_default(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice_default(array, fromRight ? index + 1 : 0, fromRight ? length : index);
}
var baseWhile_default = baseWhile;

// node_modules/lodash-es/dropRightWhile.js
function dropRightWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3), true, true) : [];
}
var dropRightWhile_default = dropRightWhile;

// node_modules/lodash-es/dropWhile.js
function dropWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3), true) : [];
}
var dropWhile_default = dropWhile;

// node_modules/lodash-es/_castFunction.js
function castFunction(value) {
  return typeof value == "function" ? value : identity_default;
}
var castFunction_default = castFunction;

// node_modules/lodash-es/forEach.js
function forEach(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEach_default : baseEach_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEach_default = forEach;

// node_modules/lodash-es/_arrayEachRight.js
function arrayEachRight(array, iteratee2) {
  var length = array == null ? 0 : array.length;
  while (length--) {
    if (iteratee2(array[length], length, array) === false) {
      break;
    }
  }
  return array;
}
var arrayEachRight_default = arrayEachRight;

// node_modules/lodash-es/_baseForRight.js
var baseForRight = createBaseFor_default(true);
var baseForRight_default = baseForRight;

// node_modules/lodash-es/_baseForOwnRight.js
function baseForOwnRight(object, iteratee2) {
  return object && baseForRight_default(object, iteratee2, keys_default);
}
var baseForOwnRight_default = baseForOwnRight;

// node_modules/lodash-es/_baseEachRight.js
var baseEachRight = createBaseEach_default(baseForOwnRight_default, true);
var baseEachRight_default = baseEachRight;

// node_modules/lodash-es/forEachRight.js
function forEachRight(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEachRight_default : baseEachRight_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEachRight_default = forEachRight;

// node_modules/lodash-es/endsWith.js
function endsWith(string, target, position) {
  string = toString_default(string);
  target = baseToString_default(target);
  var length = string.length;
  position = position === void 0 ? length : baseClamp_default(toInteger_default(position), 0, length);
  var end = position;
  position -= target.length;
  return position >= 0 && string.slice(position, end) == target;
}
var endsWith_default = endsWith;

// node_modules/lodash-es/_baseToPairs.js
function baseToPairs(object, props) {
  return arrayMap_default(props, function(key) {
    return [key, object[key]];
  });
}
var baseToPairs_default = baseToPairs;

// node_modules/lodash-es/_setToPairs.js
function setToPairs(set2) {
  var index = -1, result2 = Array(set2.size);
  set2.forEach(function(value) {
    result2[++index] = [value, value];
  });
  return result2;
}
var setToPairs_default = setToPairs;

// node_modules/lodash-es/_createToPairs.js
var mapTag7 = "[object Map]";
var setTag7 = "[object Set]";
function createToPairs(keysFunc) {
  return function(object) {
    var tag = getTag_default(object);
    if (tag == mapTag7) {
      return mapToArray_default(object);
    }
    if (tag == setTag7) {
      return setToPairs_default(object);
    }
    return baseToPairs_default(object, keysFunc(object));
  };
}
var createToPairs_default = createToPairs;

// node_modules/lodash-es/toPairs.js
var toPairs = createToPairs_default(keys_default);
var toPairs_default = toPairs;

// node_modules/lodash-es/toPairsIn.js
var toPairsIn = createToPairs_default(keysIn_default);
var toPairsIn_default = toPairsIn;

// node_modules/lodash-es/_escapeHtmlChar.js
var htmlEscapes = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var escapeHtmlChar = basePropertyOf_default(htmlEscapes);
var escapeHtmlChar_default = escapeHtmlChar;

// node_modules/lodash-es/escape.js
var reUnescapedHtml = /[&<>"']/g;
var reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
function escape(string) {
  string = toString_default(string);
  return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar_default) : string;
}
var escape_default = escape;

// node_modules/lodash-es/escapeRegExp.js
var reRegExpChar2 = /[\\^$.*+?()[\]{}|]/g;
var reHasRegExpChar = RegExp(reRegExpChar2.source);
function escapeRegExp(string) {
  string = toString_default(string);
  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar2, "\\$&") : string;
}
var escapeRegExp_default = escapeRegExp;

// node_modules/lodash-es/_arrayEvery.js
function arrayEvery(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (!predicate(array[index], index, array)) {
      return false;
    }
  }
  return true;
}
var arrayEvery_default = arrayEvery;

// node_modules/lodash-es/_baseEvery.js
function baseEvery(collection, predicate) {
  var result2 = true;
  baseEach_default(collection, function(value, index, collection2) {
    result2 = !!predicate(value, index, collection2);
    return result2;
  });
  return result2;
}
var baseEvery_default = baseEvery;

// node_modules/lodash-es/every.js
function every(collection, predicate, guard) {
  var func = isArray_default(collection) ? arrayEvery_default : baseEvery_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var every_default = every;

// node_modules/lodash-es/toLength.js
var MAX_ARRAY_LENGTH2 = 4294967295;
function toLength(value) {
  return value ? baseClamp_default(toInteger_default(value), 0, MAX_ARRAY_LENGTH2) : 0;
}
var toLength_default = toLength;

// node_modules/lodash-es/_baseFill.js
function baseFill(array, value, start, end) {
  var length = array.length;
  start = toInteger_default(start);
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end === void 0 || end > length ? length : toInteger_default(end);
  if (end < 0) {
    end += length;
  }
  end = start > end ? 0 : toLength_default(end);
  while (start < end) {
    array[start++] = value;
  }
  return array;
}
var baseFill_default = baseFill;

// node_modules/lodash-es/fill.js
function fill(array, value, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (start && typeof start != "number" && isIterateeCall_default(array, value, start)) {
    start = 0;
    end = length;
  }
  return baseFill_default(array, value, start, end);
}
var fill_default = fill;

// node_modules/lodash-es/_baseFilter.js
function baseFilter(collection, predicate) {
  var result2 = [];
  baseEach_default(collection, function(value, index, collection2) {
    if (predicate(value, index, collection2)) {
      result2.push(value);
    }
  });
  return result2;
}
var baseFilter_default = baseFilter;

// node_modules/lodash-es/filter.js
function filter(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, baseIteratee_default(predicate, 3));
}
var filter_default = filter;

// node_modules/lodash-es/_createFind.js
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike_default(collection)) {
      var iteratee2 = baseIteratee_default(predicate, 3);
      collection = keys_default(collection);
      predicate = function(key) {
        return iteratee2(iterable[key], key, iterable);
      };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee2 ? collection[index] : index] : void 0;
  };
}
var createFind_default = createFind;

// node_modules/lodash-es/findIndex.js
var nativeMax7 = Math.max;
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index < 0) {
    index = nativeMax7(length + index, 0);
  }
  return baseFindIndex_default(array, baseIteratee_default(predicate, 3), index);
}
var findIndex_default = findIndex;

// node_modules/lodash-es/find.js
var find = createFind_default(findIndex_default);
var find_default = find;

// node_modules/lodash-es/_baseFindKey.js
function baseFindKey(collection, predicate, eachFunc) {
  var result2;
  eachFunc(collection, function(value, key, collection2) {
    if (predicate(value, key, collection2)) {
      result2 = key;
      return false;
    }
  });
  return result2;
}
var baseFindKey_default = baseFindKey;

// node_modules/lodash-es/findKey.js
function findKey(object, predicate) {
  return baseFindKey_default(object, baseIteratee_default(predicate, 3), baseForOwn_default);
}
var findKey_default = findKey;

// node_modules/lodash-es/findLastIndex.js
var nativeMax8 = Math.max;
var nativeMin5 = Math.min;
function findLastIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length - 1;
  if (fromIndex !== void 0) {
    index = toInteger_default(fromIndex);
    index = fromIndex < 0 ? nativeMax8(length + index, 0) : nativeMin5(index, length - 1);
  }
  return baseFindIndex_default(array, baseIteratee_default(predicate, 3), index, true);
}
var findLastIndex_default = findLastIndex;

// node_modules/lodash-es/findLast.js
var findLast = createFind_default(findLastIndex_default);
var findLast_default = findLast;

// node_modules/lodash-es/findLastKey.js
function findLastKey(object, predicate) {
  return baseFindKey_default(object, baseIteratee_default(predicate, 3), baseForOwnRight_default);
}
var findLastKey_default = findLastKey;

// node_modules/lodash-es/head.js
function head(array) {
  return array && array.length ? array[0] : void 0;
}
var head_default = head;

// node_modules/lodash-es/_baseMap.js
function baseMap(collection, iteratee2) {
  var index = -1, result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value, key, collection2) {
    result2[++index] = iteratee2(value, key, collection2);
  });
  return result2;
}
var baseMap_default = baseMap;

// node_modules/lodash-es/map.js
function map(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayMap_default : baseMap_default;
  return func(collection, baseIteratee_default(iteratee2, 3));
}
var map_default = map;

// node_modules/lodash-es/flatMap.js
function flatMap(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), 1);
}
var flatMap_default = flatMap;

// node_modules/lodash-es/flatMapDeep.js
var INFINITY4 = 1 / 0;
function flatMapDeep(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), INFINITY4);
}
var flatMapDeep_default = flatMapDeep;

// node_modules/lodash-es/flatMapDepth.js
function flatMapDepth(collection, iteratee2, depth) {
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(map_default(collection, iteratee2), depth);
}
var flatMapDepth_default = flatMapDepth;

// node_modules/lodash-es/flattenDeep.js
var INFINITY5 = 1 / 0;
function flattenDeep(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten_default(array, INFINITY5) : [];
}
var flattenDeep_default = flattenDeep;

// node_modules/lodash-es/flattenDepth.js
function flattenDepth(array, depth) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(array, depth);
}
var flattenDepth_default = flattenDepth;

// node_modules/lodash-es/flip.js
var WRAP_FLIP_FLAG3 = 512;
function flip(func) {
  return createWrap_default(func, WRAP_FLIP_FLAG3);
}
var flip_default = flip;

// node_modules/lodash-es/floor.js
var floor = createRound_default("floor");
var floor_default = floor;

// node_modules/lodash-es/_createFlow.js
var FUNC_ERROR_TEXT8 = "Expected a function";
var WRAP_CURRY_FLAG7 = 8;
var WRAP_PARTIAL_FLAG6 = 32;
var WRAP_ARY_FLAG5 = 128;
var WRAP_REARG_FLAG3 = 256;
function createFlow(fromRight) {
  return flatRest_default(function(funcs) {
    var length = funcs.length, index = length, prereq = LodashWrapper_default.prototype.thru;
    if (fromRight) {
      funcs.reverse();
    }
    while (index--) {
      var func = funcs[index];
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT8);
      }
      if (prereq && !wrapper && getFuncName_default(func) == "wrapper") {
        var wrapper = new LodashWrapper_default([], true);
      }
    }
    index = wrapper ? index : length;
    while (++index < length) {
      func = funcs[index];
      var funcName = getFuncName_default(func), data = funcName == "wrapper" ? getData_default(func) : void 0;
      if (data && isLaziable_default(data[0]) && data[1] == (WRAP_ARY_FLAG5 | WRAP_CURRY_FLAG7 | WRAP_PARTIAL_FLAG6 | WRAP_REARG_FLAG3) && !data[4].length && data[9] == 1) {
        wrapper = wrapper[getFuncName_default(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = func.length == 1 && isLaziable_default(func) ? wrapper[funcName]() : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments, value = args[0];
      if (wrapper && args.length == 1 && isArray_default(value)) {
        return wrapper.plant(value).value();
      }
      var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
      while (++index2 < length) {
        result2 = funcs[index2].call(this, result2);
      }
      return result2;
    };
  });
}
var createFlow_default = createFlow;

// node_modules/lodash-es/flow.js
var flow = createFlow_default();
var flow_default = flow;

// node_modules/lodash-es/flowRight.js
var flowRight = createFlow_default(true);
var flowRight_default = flowRight;

// node_modules/lodash-es/forIn.js
function forIn(object, iteratee2) {
  return object == null ? object : baseFor_default(object, castFunction_default(iteratee2), keysIn_default);
}
var forIn_default = forIn;

// node_modules/lodash-es/forInRight.js
function forInRight(object, iteratee2) {
  return object == null ? object : baseForRight_default(object, castFunction_default(iteratee2), keysIn_default);
}
var forInRight_default = forInRight;

// node_modules/lodash-es/forOwn.js
function forOwn(object, iteratee2) {
  return object && baseForOwn_default(object, castFunction_default(iteratee2));
}
var forOwn_default = forOwn;

// node_modules/lodash-es/forOwnRight.js
function forOwnRight(object, iteratee2) {
  return object && baseForOwnRight_default(object, castFunction_default(iteratee2));
}
var forOwnRight_default = forOwnRight;

// node_modules/lodash-es/fromPairs.js
function fromPairs(pairs) {
  var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
  while (++index < length) {
    var pair = pairs[index];
    result2[pair[0]] = pair[1];
  }
  return result2;
}
var fromPairs_default = fromPairs;

// node_modules/lodash-es/_baseFunctions.js
function baseFunctions(object, props) {
  return arrayFilter_default(props, function(key) {
    return isFunction_default(object[key]);
  });
}
var baseFunctions_default = baseFunctions;

// node_modules/lodash-es/functions.js
function functions(object) {
  return object == null ? [] : baseFunctions_default(object, keys_default(object));
}
var functions_default = functions;

// node_modules/lodash-es/functionsIn.js
function functionsIn(object) {
  return object == null ? [] : baseFunctions_default(object, keysIn_default(object));
}
var functionsIn_default = functionsIn;

// node_modules/lodash-es/groupBy.js
var objectProto22 = Object.prototype;
var hasOwnProperty19 = objectProto22.hasOwnProperty;
var groupBy = createAggregator_default(function(result2, value, key) {
  if (hasOwnProperty19.call(result2, key)) {
    result2[key].push(value);
  } else {
    baseAssignValue_default(result2, key, [value]);
  }
});
var groupBy_default = groupBy;

// node_modules/lodash-es/_baseGt.js
function baseGt(value, other) {
  return value > other;
}
var baseGt_default = baseGt;

// node_modules/lodash-es/_createRelationalOperation.js
function createRelationalOperation(operator) {
  return function(value, other) {
    if (!(typeof value == "string" && typeof other == "string")) {
      value = toNumber_default(value);
      other = toNumber_default(other);
    }
    return operator(value, other);
  };
}
var createRelationalOperation_default = createRelationalOperation;

// node_modules/lodash-es/gt.js
var gt = createRelationalOperation_default(baseGt_default);
var gt_default = gt;

// node_modules/lodash-es/gte.js
var gte = createRelationalOperation_default(function(value, other) {
  return value >= other;
});
var gte_default = gte;

// node_modules/lodash-es/_baseHas.js
var objectProto23 = Object.prototype;
var hasOwnProperty20 = objectProto23.hasOwnProperty;
function baseHas(object, key) {
  return object != null && hasOwnProperty20.call(object, key);
}
var baseHas_default = baseHas;

// node_modules/lodash-es/has.js
function has(object, path) {
  return object != null && hasPath_default(object, path, baseHas_default);
}
var has_default = has;

// node_modules/lodash-es/_baseInRange.js
var nativeMax9 = Math.max;
var nativeMin6 = Math.min;
function baseInRange(number, start, end) {
  return number >= nativeMin6(start, end) && number < nativeMax9(start, end);
}
var baseInRange_default = baseInRange;

// node_modules/lodash-es/inRange.js
function inRange(number, start, end) {
  start = toFinite_default(start);
  if (end === void 0) {
    end = start;
    start = 0;
  } else {
    end = toFinite_default(end);
  }
  number = toNumber_default(number);
  return baseInRange_default(number, start, end);
}
var inRange_default = inRange;

// node_modules/lodash-es/isString.js
var stringTag5 = "[object String]";
function isString(value) {
  return typeof value == "string" || !isArray_default(value) && isObjectLike_default(value) && baseGetTag_default(value) == stringTag5;
}
var isString_default = isString;

// node_modules/lodash-es/_baseValues.js
function baseValues(object, props) {
  return arrayMap_default(props, function(key) {
    return object[key];
  });
}
var baseValues_default = baseValues;

// node_modules/lodash-es/values.js
function values(object) {
  return object == null ? [] : baseValues_default(object, keys_default(object));
}
var values_default = values;

// node_modules/lodash-es/includes.js
var nativeMax10 = Math.max;
function includes(collection, value, fromIndex, guard) {
  collection = isArrayLike_default(collection) ? collection : values_default(collection);
  fromIndex = fromIndex && !guard ? toInteger_default(fromIndex) : 0;
  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = nativeMax10(length + fromIndex, 0);
  }
  return isString_default(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf_default(collection, value, fromIndex) > -1;
}
var includes_default = includes;

// node_modules/lodash-es/indexOf.js
var nativeMax11 = Math.max;
function indexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index < 0) {
    index = nativeMax11(length + index, 0);
  }
  return baseIndexOf_default(array, value, index);
}
var indexOf_default = indexOf;

// node_modules/lodash-es/initial.js
function initial(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseSlice_default(array, 0, -1) : [];
}
var initial_default = initial;

// node_modules/lodash-es/_baseIntersection.js
var nativeMin7 = Math.min;
function baseIntersection(arrays, iteratee2, comparator) {
  var includes2 = comparator ? arrayIncludesWith_default : arrayIncludes_default, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result2 = [];
  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee2) {
      array = arrayMap_default(array, baseUnary_default(iteratee2));
    }
    maxLength = nativeMin7(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache_default(othIndex && array) : void 0;
  }
  array = arrays[0];
  var index = -1, seen = caches[0];
  outer:
    while (++index < length && result2.length < maxLength) {
      var value = array[index], computed2 = iteratee2 ? iteratee2(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (!(seen ? cacheHas_default(seen, computed2) : includes2(result2, computed2, comparator))) {
        othIndex = othLength;
        while (--othIndex) {
          var cache = caches[othIndex];
          if (!(cache ? cacheHas_default(cache, computed2) : includes2(arrays[othIndex], computed2, comparator))) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed2);
        }
        result2.push(value);
      }
    }
  return result2;
}
var baseIntersection_default = baseIntersection;

// node_modules/lodash-es/_castArrayLikeObject.js
function castArrayLikeObject(value) {
  return isArrayLikeObject_default(value) ? value : [];
}
var castArrayLikeObject_default = castArrayLikeObject;

// node_modules/lodash-es/intersection.js
var intersection = baseRest_default(function(arrays) {
  var mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped) : [];
});
var intersection_default = intersection;

// node_modules/lodash-es/intersectionBy.js
var intersectionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  if (iteratee2 === last_default(mapped)) {
    iteratee2 = void 0;
  } else {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, baseIteratee_default(iteratee2, 2)) : [];
});
var intersectionBy_default = intersectionBy;

// node_modules/lodash-es/intersectionWith.js
var intersectionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  comparator = typeof comparator == "function" ? comparator : void 0;
  if (comparator) {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, void 0, comparator) : [];
});
var intersectionWith_default = intersectionWith;

// node_modules/lodash-es/_baseInverter.js
function baseInverter(object, setter, iteratee2, accumulator) {
  baseForOwn_default(object, function(value, key, object2) {
    setter(accumulator, iteratee2(value), key, object2);
  });
  return accumulator;
}
var baseInverter_default = baseInverter;

// node_modules/lodash-es/_createInverter.js
function createInverter(setter, toIteratee) {
  return function(object, iteratee2) {
    return baseInverter_default(object, setter, toIteratee(iteratee2), {});
  };
}
var createInverter_default = createInverter;

// node_modules/lodash-es/invert.js
var objectProto24 = Object.prototype;
var nativeObjectToString3 = objectProto24.toString;
var invert = createInverter_default(function(result2, value, key) {
  if (value != null && typeof value.toString != "function") {
    value = nativeObjectToString3.call(value);
  }
  result2[value] = key;
}, constant_default(identity_default));
var invert_default = invert;

// node_modules/lodash-es/invertBy.js
var objectProto25 = Object.prototype;
var hasOwnProperty21 = objectProto25.hasOwnProperty;
var nativeObjectToString4 = objectProto25.toString;
var invertBy = createInverter_default(function(result2, value, key) {
  if (value != null && typeof value.toString != "function") {
    value = nativeObjectToString4.call(value);
  }
  if (hasOwnProperty21.call(result2, value)) {
    result2[value].push(key);
  } else {
    result2[value] = [key];
  }
}, baseIteratee_default);
var invertBy_default = invertBy;

// node_modules/lodash-es/_parent.js
function parent(object, path) {
  return path.length < 2 ? object : baseGet_default(object, baseSlice_default(path, 0, -1));
}
var parent_default = parent;

// node_modules/lodash-es/_baseInvoke.js
function baseInvoke(object, path, args) {
  path = castPath_default(path, object);
  object = parent_default(object, path);
  var func = object == null ? object : object[toKey_default(last_default(path))];
  return func == null ? void 0 : apply_default(func, object, args);
}
var baseInvoke_default = baseInvoke;

// node_modules/lodash-es/invoke.js
var invoke = baseRest_default(baseInvoke_default);
var invoke_default = invoke;

// node_modules/lodash-es/invokeMap.js
var invokeMap = baseRest_default(function(collection, path, args) {
  var index = -1, isFunc = typeof path == "function", result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value) {
    result2[++index] = isFunc ? apply_default(path, value, args) : baseInvoke_default(value, path, args);
  });
  return result2;
});
var invokeMap_default = invokeMap;

// node_modules/lodash-es/_baseIsArrayBuffer.js
var arrayBufferTag5 = "[object ArrayBuffer]";
function baseIsArrayBuffer(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == arrayBufferTag5;
}
var baseIsArrayBuffer_default = baseIsArrayBuffer;

// node_modules/lodash-es/isArrayBuffer.js
var nodeIsArrayBuffer = nodeUtil_default && nodeUtil_default.isArrayBuffer;
var isArrayBuffer = nodeIsArrayBuffer ? baseUnary_default(nodeIsArrayBuffer) : baseIsArrayBuffer_default;
var isArrayBuffer_default = isArrayBuffer;

// node_modules/lodash-es/isBoolean.js
var boolTag5 = "[object Boolean]";
function isBoolean(value) {
  return value === true || value === false || isObjectLike_default(value) && baseGetTag_default(value) == boolTag5;
}
var isBoolean_default = isBoolean;

// node_modules/lodash-es/_baseIsDate.js
var dateTag5 = "[object Date]";
function baseIsDate(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == dateTag5;
}
var baseIsDate_default = baseIsDate;

// node_modules/lodash-es/isDate.js
var nodeIsDate = nodeUtil_default && nodeUtil_default.isDate;
var isDate = nodeIsDate ? baseUnary_default(nodeIsDate) : baseIsDate_default;
var isDate_default = isDate;

// node_modules/lodash-es/isElement.js
function isElement(value) {
  return isObjectLike_default(value) && value.nodeType === 1 && !isPlainObject_default(value);
}
var isElement_default = isElement;

// node_modules/lodash-es/isEmpty.js
var mapTag8 = "[object Map]";
var setTag8 = "[object Set]";
var objectProto26 = Object.prototype;
var hasOwnProperty22 = objectProto26.hasOwnProperty;
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike_default(value) && (isArray_default(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer_default(value) || isTypedArray_default(value) || isArguments_default(value))) {
    return !value.length;
  }
  var tag = getTag_default(value);
  if (tag == mapTag8 || tag == setTag8) {
    return !value.size;
  }
  if (isPrototype_default(value)) {
    return !baseKeys_default(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty22.call(value, key)) {
      return false;
    }
  }
  return true;
}
var isEmpty_default = isEmpty;

// node_modules/lodash-es/isEqual.js
function isEqual(value, other) {
  return baseIsEqual_default(value, other);
}
var isEqual_default = isEqual;

// node_modules/lodash-es/isEqualWith.js
function isEqualWith(value, other, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  var result2 = customizer ? customizer(value, other) : void 0;
  return result2 === void 0 ? baseIsEqual_default(value, other, void 0, customizer) : !!result2;
}
var isEqualWith_default = isEqualWith;

// node_modules/lodash-es/isFinite.js
var nativeIsFinite2 = root_default.isFinite;
function isFinite2(value) {
  return typeof value == "number" && nativeIsFinite2(value);
}
var isFinite_default = isFinite2;

// node_modules/lodash-es/isInteger.js
function isInteger(value) {
  return typeof value == "number" && value == toInteger_default(value);
}
var isInteger_default = isInteger;

// node_modules/lodash-es/isMatch.js
function isMatch(object, source) {
  return object === source || baseIsMatch_default(object, source, getMatchData_default(source));
}
var isMatch_default = isMatch;

// node_modules/lodash-es/isMatchWith.js
function isMatchWith(object, source, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseIsMatch_default(object, source, getMatchData_default(source), customizer);
}
var isMatchWith_default = isMatchWith;

// node_modules/lodash-es/isNumber.js
var numberTag5 = "[object Number]";
function isNumber(value) {
  return typeof value == "number" || isObjectLike_default(value) && baseGetTag_default(value) == numberTag5;
}
var isNumber_default = isNumber;

// node_modules/lodash-es/isNaN.js
function isNaN2(value) {
  return isNumber_default(value) && value != +value;
}
var isNaN_default = isNaN2;

// node_modules/lodash-es/_isMaskable.js
var isMaskable = coreJsData_default ? isFunction_default : stubFalse_default;
var isMaskable_default = isMaskable;

// node_modules/lodash-es/isNative.js
var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.";
function isNative(value) {
  if (isMaskable_default(value)) {
    throw new Error(CORE_ERROR_TEXT);
  }
  return baseIsNative_default(value);
}
var isNative_default = isNative;

// node_modules/lodash-es/isNil.js
function isNil(value) {
  return value == null;
}
var isNil_default = isNil;

// node_modules/lodash-es/isNull.js
function isNull(value) {
  return value === null;
}
var isNull_default = isNull;

// node_modules/lodash-es/_baseIsRegExp.js
var regexpTag5 = "[object RegExp]";
function baseIsRegExp(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == regexpTag5;
}
var baseIsRegExp_default = baseIsRegExp;

// node_modules/lodash-es/isRegExp.js
var nodeIsRegExp = nodeUtil_default && nodeUtil_default.isRegExp;
var isRegExp = nodeIsRegExp ? baseUnary_default(nodeIsRegExp) : baseIsRegExp_default;
var isRegExp_default = isRegExp;

// node_modules/lodash-es/isSafeInteger.js
var MAX_SAFE_INTEGER3 = 9007199254740991;
function isSafeInteger(value) {
  return isInteger_default(value) && value >= -MAX_SAFE_INTEGER3 && value <= MAX_SAFE_INTEGER3;
}
var isSafeInteger_default = isSafeInteger;

// node_modules/lodash-es/isUndefined.js
function isUndefined(value) {
  return value === void 0;
}
var isUndefined_default = isUndefined;

// node_modules/lodash-es/isWeakMap.js
var weakMapTag4 = "[object WeakMap]";
function isWeakMap(value) {
  return isObjectLike_default(value) && getTag_default(value) == weakMapTag4;
}
var isWeakMap_default = isWeakMap;

// node_modules/lodash-es/isWeakSet.js
var weakSetTag = "[object WeakSet]";
function isWeakSet(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == weakSetTag;
}
var isWeakSet_default = isWeakSet;

// node_modules/lodash-es/iteratee.js
var CLONE_DEEP_FLAG5 = 1;
function iteratee(func) {
  return baseIteratee_default(typeof func == "function" ? func : baseClone_default(func, CLONE_DEEP_FLAG5));
}
var iteratee_default = iteratee;

// node_modules/lodash-es/join.js
var arrayProto2 = Array.prototype;
var nativeJoin = arrayProto2.join;
function join(array, separator) {
  return array == null ? "" : nativeJoin.call(array, separator);
}
var join_default = join;

// node_modules/lodash-es/kebabCase.js
var kebabCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? "-" : "") + word.toLowerCase();
});
var kebabCase_default = kebabCase;

// node_modules/lodash-es/keyBy.js
var keyBy = createAggregator_default(function(result2, value, key) {
  baseAssignValue_default(result2, key, value);
});
var keyBy_default = keyBy;

// node_modules/lodash-es/_strictLastIndexOf.js
function strictLastIndexOf(array, value, fromIndex) {
  var index = fromIndex + 1;
  while (index--) {
    if (array[index] === value) {
      return index;
    }
  }
  return index;
}
var strictLastIndexOf_default = strictLastIndexOf;

// node_modules/lodash-es/lastIndexOf.js
var nativeMax12 = Math.max;
var nativeMin8 = Math.min;
function lastIndexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length;
  if (fromIndex !== void 0) {
    index = toInteger_default(fromIndex);
    index = index < 0 ? nativeMax12(length + index, 0) : nativeMin8(index, length - 1);
  }
  return value === value ? strictLastIndexOf_default(array, value, index) : baseFindIndex_default(array, baseIsNaN_default, index, true);
}
var lastIndexOf_default = lastIndexOf;

// node_modules/lodash-es/lowerCase.js
var lowerCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? " " : "") + word.toLowerCase();
});
var lowerCase_default = lowerCase;

// node_modules/lodash-es/lowerFirst.js
var lowerFirst = createCaseFirst_default("toLowerCase");
var lowerFirst_default = lowerFirst;

// node_modules/lodash-es/_baseLt.js
function baseLt(value, other) {
  return value < other;
}
var baseLt_default = baseLt;

// node_modules/lodash-es/lt.js
var lt = createRelationalOperation_default(baseLt_default);
var lt_default = lt;

// node_modules/lodash-es/lte.js
var lte = createRelationalOperation_default(function(value, other) {
  return value <= other;
});
var lte_default = lte;

// node_modules/lodash-es/mapKeys.js
function mapKeys(object, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object, function(value, key, object2) {
    baseAssignValue_default(result2, iteratee2(value, key, object2), value);
  });
  return result2;
}
var mapKeys_default = mapKeys;

// node_modules/lodash-es/mapValues.js
function mapValues(object, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object, function(value, key, object2) {
    baseAssignValue_default(result2, key, iteratee2(value, key, object2));
  });
  return result2;
}
var mapValues_default = mapValues;

// node_modules/lodash-es/matches.js
var CLONE_DEEP_FLAG6 = 1;
function matches(source) {
  return baseMatches_default(baseClone_default(source, CLONE_DEEP_FLAG6));
}
var matches_default = matches;

// node_modules/lodash-es/matchesProperty.js
var CLONE_DEEP_FLAG7 = 1;
function matchesProperty(path, srcValue) {
  return baseMatchesProperty_default(path, baseClone_default(srcValue, CLONE_DEEP_FLAG7));
}
var matchesProperty_default = matchesProperty;

// node_modules/lodash-es/_baseExtremum.js
function baseExtremum(array, iteratee2, comparator) {
  var index = -1, length = array.length;
  while (++index < length) {
    var value = array[index], current = iteratee2(value);
    if (current != null && (computed2 === void 0 ? current === current && !isSymbol_default(current) : comparator(current, computed2))) {
      var computed2 = current, result2 = value;
    }
  }
  return result2;
}
var baseExtremum_default = baseExtremum;

// node_modules/lodash-es/max.js
function max(array) {
  return array && array.length ? baseExtremum_default(array, identity_default, baseGt_default) : void 0;
}
var max_default = max;

// node_modules/lodash-es/maxBy.js
function maxBy(array, iteratee2) {
  return array && array.length ? baseExtremum_default(array, baseIteratee_default(iteratee2, 2), baseGt_default) : void 0;
}
var maxBy_default = maxBy;

// node_modules/lodash-es/_baseSum.js
function baseSum(array, iteratee2) {
  var result2, index = -1, length = array.length;
  while (++index < length) {
    var current = iteratee2(array[index]);
    if (current !== void 0) {
      result2 = result2 === void 0 ? current : result2 + current;
    }
  }
  return result2;
}
var baseSum_default = baseSum;

// node_modules/lodash-es/_baseMean.js
var NAN3 = 0 / 0;
function baseMean(array, iteratee2) {
  var length = array == null ? 0 : array.length;
  return length ? baseSum_default(array, iteratee2) / length : NAN3;
}
var baseMean_default = baseMean;

// node_modules/lodash-es/mean.js
function mean(array) {
  return baseMean_default(array, identity_default);
}
var mean_default = mean;

// node_modules/lodash-es/meanBy.js
function meanBy(array, iteratee2) {
  return baseMean_default(array, baseIteratee_default(iteratee2, 2));
}
var meanBy_default = meanBy;

// node_modules/lodash-es/merge.js
var merge = createAssigner_default(function(object, source, srcIndex) {
  baseMerge_default(object, source, srcIndex);
});
var merge_default = merge;

// node_modules/lodash-es/method.js
var method = baseRest_default(function(path, args) {
  return function(object) {
    return baseInvoke_default(object, path, args);
  };
});
var method_default = method;

// node_modules/lodash-es/methodOf.js
var methodOf = baseRest_default(function(object, args) {
  return function(path) {
    return baseInvoke_default(object, path, args);
  };
});
var methodOf_default = methodOf;

// node_modules/lodash-es/min.js
function min(array) {
  return array && array.length ? baseExtremum_default(array, identity_default, baseLt_default) : void 0;
}
var min_default = min;

// node_modules/lodash-es/minBy.js
function minBy(array, iteratee2) {
  return array && array.length ? baseExtremum_default(array, baseIteratee_default(iteratee2, 2), baseLt_default) : void 0;
}
var minBy_default = minBy;

// node_modules/lodash-es/mixin.js
function mixin(object, source, options) {
  var props = keys_default(source), methodNames = baseFunctions_default(source, props);
  var chain2 = !(isObject_default(options) && "chain" in options) || !!options.chain, isFunc = isFunction_default(object);
  arrayEach_default(methodNames, function(methodName) {
    var func = source[methodName];
    object[methodName] = func;
    if (isFunc) {
      object.prototype[methodName] = function() {
        var chainAll = this.__chain__;
        if (chain2 || chainAll) {
          var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray_default(this.__actions__);
          actions.push({ "func": func, "args": arguments, "thisArg": object });
          result2.__chain__ = chainAll;
          return result2;
        }
        return func.apply(object, arrayPush_default([this.value()], arguments));
      };
    }
  });
  return object;
}
var mixin_default = mixin;

// node_modules/lodash-es/multiply.js
var multiply = createMathOperation_default(function(multiplier, multiplicand) {
  return multiplier * multiplicand;
}, 1);
var multiply_default = multiply;

// node_modules/lodash-es/negate.js
var FUNC_ERROR_TEXT9 = "Expected a function";
function negate(predicate) {
  if (typeof predicate != "function") {
    throw new TypeError(FUNC_ERROR_TEXT9);
  }
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return !predicate.call(this);
      case 1:
        return !predicate.call(this, args[0]);
      case 2:
        return !predicate.call(this, args[0], args[1]);
      case 3:
        return !predicate.call(this, args[0], args[1], args[2]);
    }
    return !predicate.apply(this, args);
  };
}
var negate_default = negate;

// node_modules/lodash-es/_iteratorToArray.js
function iteratorToArray(iterator) {
  var data, result2 = [];
  while (!(data = iterator.next()).done) {
    result2.push(data.value);
  }
  return result2;
}
var iteratorToArray_default = iteratorToArray;

// node_modules/lodash-es/toArray.js
var mapTag9 = "[object Map]";
var setTag9 = "[object Set]";
var symIterator = Symbol_default ? Symbol_default.iterator : void 0;
function toArray(value) {
  if (!value) {
    return [];
  }
  if (isArrayLike_default(value)) {
    return isString_default(value) ? stringToArray_default(value) : copyArray_default(value);
  }
  if (symIterator && value[symIterator]) {
    return iteratorToArray_default(value[symIterator]());
  }
  var tag = getTag_default(value), func = tag == mapTag9 ? mapToArray_default : tag == setTag9 ? setToArray_default : values_default;
  return func(value);
}
var toArray_default = toArray;

// node_modules/lodash-es/next.js
function wrapperNext() {
  if (this.__values__ === void 0) {
    this.__values__ = toArray_default(this.value());
  }
  var done = this.__index__ >= this.__values__.length, value = done ? void 0 : this.__values__[this.__index__++];
  return { "done": done, "value": value };
}
var next_default = wrapperNext;

// node_modules/lodash-es/_baseNth.js
function baseNth(array, n) {
  var length = array.length;
  if (!length) {
    return;
  }
  n += n < 0 ? length : 0;
  return isIndex_default(n, length) ? array[n] : void 0;
}
var baseNth_default = baseNth;

// node_modules/lodash-es/nth.js
function nth(array, n) {
  return array && array.length ? baseNth_default(array, toInteger_default(n)) : void 0;
}
var nth_default = nth;

// node_modules/lodash-es/nthArg.js
function nthArg(n) {
  n = toInteger_default(n);
  return baseRest_default(function(args) {
    return baseNth_default(args, n);
  });
}
var nthArg_default = nthArg;

// node_modules/lodash-es/_baseUnset.js
function baseUnset(object, path) {
  path = castPath_default(path, object);
  object = parent_default(object, path);
  return object == null || delete object[toKey_default(last_default(path))];
}
var baseUnset_default = baseUnset;

// node_modules/lodash-es/_customOmitClone.js
function customOmitClone(value) {
  return isPlainObject_default(value) ? void 0 : value;
}
var customOmitClone_default = customOmitClone;

// node_modules/lodash-es/omit.js
var CLONE_DEEP_FLAG8 = 1;
var CLONE_FLAT_FLAG2 = 2;
var CLONE_SYMBOLS_FLAG6 = 4;
var omit = flatRest_default(function(object, paths) {
  var result2 = {};
  if (object == null) {
    return result2;
  }
  var isDeep = false;
  paths = arrayMap_default(paths, function(path) {
    path = castPath_default(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject_default(object, getAllKeysIn_default(object), result2);
  if (isDeep) {
    result2 = baseClone_default(result2, CLONE_DEEP_FLAG8 | CLONE_FLAT_FLAG2 | CLONE_SYMBOLS_FLAG6, customOmitClone_default);
  }
  var length = paths.length;
  while (length--) {
    baseUnset_default(result2, paths[length]);
  }
  return result2;
});
var omit_default = omit;

// node_modules/lodash-es/_baseSet.js
function baseSet(object, path, value, customizer) {
  if (!isObject_default(object)) {
    return object;
  }
  path = castPath_default(path, object);
  var index = -1, length = path.length, lastIndex = length - 1, nested = object;
  while (nested != null && ++index < length) {
    var key = toKey_default(path[index]), newValue = value;
    if (key === "__proto__" || key === "constructor" || key === "prototype") {
      return object;
    }
    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : void 0;
      if (newValue === void 0) {
        newValue = isObject_default(objValue) ? objValue : isIndex_default(path[index + 1]) ? [] : {};
      }
    }
    assignValue_default(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}
var baseSet_default = baseSet;

// node_modules/lodash-es/_basePickBy.js
function basePickBy(object, paths, predicate) {
  var index = -1, length = paths.length, result2 = {};
  while (++index < length) {
    var path = paths[index], value = baseGet_default(object, path);
    if (predicate(value, path)) {
      baseSet_default(result2, castPath_default(path, object), value);
    }
  }
  return result2;
}
var basePickBy_default = basePickBy;

// node_modules/lodash-es/pickBy.js
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap_default(getAllKeysIn_default(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee_default(predicate);
  return basePickBy_default(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}
var pickBy_default = pickBy;

// node_modules/lodash-es/omitBy.js
function omitBy(object, predicate) {
  return pickBy_default(object, negate_default(baseIteratee_default(predicate)));
}
var omitBy_default = omitBy;

// node_modules/lodash-es/once.js
function once(func) {
  return before_default(2, func);
}
var once_default = once;

// node_modules/lodash-es/_baseSortBy.js
function baseSortBy(array, comparer) {
  var length = array.length;
  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}
var baseSortBy_default = baseSortBy;

// node_modules/lodash-es/_compareAscending.js
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol_default(value);
    var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol_default(other);
    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
      return 1;
    }
    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}
var compareAscending_default = compareAscending;

// node_modules/lodash-es/_compareMultiple.js
function compareMultiple(object, other, orders) {
  var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
  while (++index < length) {
    var result2 = compareAscending_default(objCriteria[index], othCriteria[index]);
    if (result2) {
      if (index >= ordersLength) {
        return result2;
      }
      var order = orders[index];
      return result2 * (order == "desc" ? -1 : 1);
    }
  }
  return object.index - other.index;
}
var compareMultiple_default = compareMultiple;

// node_modules/lodash-es/_baseOrderBy.js
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = arrayMap_default(iteratees, function(iteratee2) {
      if (isArray_default(iteratee2)) {
        return function(value) {
          return baseGet_default(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
        };
      }
      return iteratee2;
    });
  } else {
    iteratees = [identity_default];
  }
  var index = -1;
  iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
  var result2 = baseMap_default(collection, function(value, key, collection2) {
    var criteria = arrayMap_default(iteratees, function(iteratee2) {
      return iteratee2(value);
    });
    return { "criteria": criteria, "index": ++index, "value": value };
  });
  return baseSortBy_default(result2, function(object, other) {
    return compareMultiple_default(object, other, orders);
  });
}
var baseOrderBy_default = baseOrderBy;

// node_modules/lodash-es/orderBy.js
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!isArray_default(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? void 0 : orders;
  if (!isArray_default(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return baseOrderBy_default(collection, iteratees, orders);
}
var orderBy_default = orderBy;

// node_modules/lodash-es/_createOver.js
function createOver(arrayFunc) {
  return flatRest_default(function(iteratees) {
    iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
    return baseRest_default(function(args) {
      var thisArg = this;
      return arrayFunc(iteratees, function(iteratee2) {
        return apply_default(iteratee2, thisArg, args);
      });
    });
  });
}
var createOver_default = createOver;

// node_modules/lodash-es/over.js
var over = createOver_default(arrayMap_default);
var over_default = over;

// node_modules/lodash-es/_castRest.js
var castRest = baseRest_default;
var castRest_default = castRest;

// node_modules/lodash-es/overArgs.js
var nativeMin9 = Math.min;
var overArgs = castRest_default(function(func, transforms) {
  transforms = transforms.length == 1 && isArray_default(transforms[0]) ? arrayMap_default(transforms[0], baseUnary_default(baseIteratee_default)) : arrayMap_default(baseFlatten_default(transforms, 1), baseUnary_default(baseIteratee_default));
  var funcsLength = transforms.length;
  return baseRest_default(function(args) {
    var index = -1, length = nativeMin9(args.length, funcsLength);
    while (++index < length) {
      args[index] = transforms[index].call(this, args[index]);
    }
    return apply_default(func, this, args);
  });
});
var overArgs_default = overArgs;

// node_modules/lodash-es/overEvery.js
var overEvery = createOver_default(arrayEvery_default);
var overEvery_default = overEvery;

// node_modules/lodash-es/overSome.js
var overSome = createOver_default(arraySome_default);
var overSome_default = overSome;

// node_modules/lodash-es/_baseRepeat.js
var MAX_SAFE_INTEGER4 = 9007199254740991;
var nativeFloor = Math.floor;
function baseRepeat(string, n) {
  var result2 = "";
  if (!string || n < 1 || n > MAX_SAFE_INTEGER4) {
    return result2;
  }
  do {
    if (n % 2) {
      result2 += string;
    }
    n = nativeFloor(n / 2);
    if (n) {
      string += string;
    }
  } while (n);
  return result2;
}
var baseRepeat_default = baseRepeat;

// node_modules/lodash-es/_asciiSize.js
var asciiSize = baseProperty_default("length");
var asciiSize_default = asciiSize;

// node_modules/lodash-es/_unicodeSize.js
var rsAstralRange4 = "\\ud800-\\udfff";
var rsComboMarksRange5 = "\\u0300-\\u036f";
var reComboHalfMarksRange5 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange5 = "\\u20d0-\\u20ff";
var rsComboRange5 = rsComboMarksRange5 + reComboHalfMarksRange5 + rsComboSymbolsRange5;
var rsVarRange4 = "\\ufe0e\\ufe0f";
var rsAstral2 = "[" + rsAstralRange4 + "]";
var rsCombo4 = "[" + rsComboRange5 + "]";
var rsFitz3 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier3 = "(?:" + rsCombo4 + "|" + rsFitz3 + ")";
var rsNonAstral3 = "[^" + rsAstralRange4 + "]";
var rsRegional3 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair3 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ4 = "\\u200d";
var reOptMod3 = rsModifier3 + "?";
var rsOptVar3 = "[" + rsVarRange4 + "]?";
var rsOptJoin3 = "(?:" + rsZWJ4 + "(?:" + [rsNonAstral3, rsRegional3, rsSurrPair3].join("|") + ")" + rsOptVar3 + reOptMod3 + ")*";
var rsSeq3 = rsOptVar3 + reOptMod3 + rsOptJoin3;
var rsSymbol2 = "(?:" + [rsNonAstral3 + rsCombo4 + "?", rsCombo4, rsRegional3, rsSurrPair3, rsAstral2].join("|") + ")";
var reUnicode2 = RegExp(rsFitz3 + "(?=" + rsFitz3 + ")|" + rsSymbol2 + rsSeq3, "g");
function unicodeSize(string) {
  var result2 = reUnicode2.lastIndex = 0;
  while (reUnicode2.test(string)) {
    ++result2;
  }
  return result2;
}
var unicodeSize_default = unicodeSize;

// node_modules/lodash-es/_stringSize.js
function stringSize(string) {
  return hasUnicode_default(string) ? unicodeSize_default(string) : asciiSize_default(string);
}
var stringSize_default = stringSize;

// node_modules/lodash-es/_createPadding.js
var nativeCeil2 = Math.ceil;
function createPadding(length, chars) {
  chars = chars === void 0 ? " " : baseToString_default(chars);
  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? baseRepeat_default(chars, length) : chars;
  }
  var result2 = baseRepeat_default(chars, nativeCeil2(length / stringSize_default(chars)));
  return hasUnicode_default(chars) ? castSlice_default(stringToArray_default(result2), 0, length).join("") : result2.slice(0, length);
}
var createPadding_default = createPadding;

// node_modules/lodash-es/pad.js
var nativeCeil3 = Math.ceil;
var nativeFloor2 = Math.floor;
function pad(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  if (!length || strLength >= length) {
    return string;
  }
  var mid = (length - strLength) / 2;
  return createPadding_default(nativeFloor2(mid), chars) + string + createPadding_default(nativeCeil3(mid), chars);
}
var pad_default = pad;

// node_modules/lodash-es/padEnd.js
function padEnd(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  return length && strLength < length ? string + createPadding_default(length - strLength, chars) : string;
}
var padEnd_default = padEnd;

// node_modules/lodash-es/padStart.js
function padStart(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  return length && strLength < length ? createPadding_default(length - strLength, chars) + string : string;
}
var padStart_default = padStart;

// node_modules/lodash-es/parseInt.js
var reTrimStart2 = /^\s+/;
var nativeParseInt = root_default.parseInt;
function parseInt2(string, radix, guard) {
  if (guard || radix == null) {
    radix = 0;
  } else if (radix) {
    radix = +radix;
  }
  return nativeParseInt(toString_default(string).replace(reTrimStart2, ""), radix || 0);
}
var parseInt_default = parseInt2;

// node_modules/lodash-es/partial.js
var WRAP_PARTIAL_FLAG7 = 32;
var partial = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partial));
  return createWrap_default(func, WRAP_PARTIAL_FLAG7, void 0, partials, holders);
});
partial.placeholder = {};
var partial_default = partial;

// node_modules/lodash-es/partialRight.js
var WRAP_PARTIAL_RIGHT_FLAG4 = 64;
var partialRight = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partialRight));
  return createWrap_default(func, WRAP_PARTIAL_RIGHT_FLAG4, void 0, partials, holders);
});
partialRight.placeholder = {};
var partialRight_default = partialRight;

// node_modules/lodash-es/partition.js
var partition = createAggregator_default(function(result2, value, key) {
  result2[key ? 0 : 1].push(value);
}, function() {
  return [[], []];
});
var partition_default = partition;

// node_modules/lodash-es/_basePick.js
function basePick(object, paths) {
  return basePickBy_default(object, paths, function(value, path) {
    return hasIn_default(object, path);
  });
}
var basePick_default = basePick;

// node_modules/lodash-es/pick.js
var pick = flatRest_default(function(object, paths) {
  return object == null ? {} : basePick_default(object, paths);
});
var pick_default = pick;

// node_modules/lodash-es/plant.js
function wrapperPlant(value) {
  var result2, parent2 = this;
  while (parent2 instanceof baseLodash_default) {
    var clone2 = wrapperClone_default(parent2);
    clone2.__index__ = 0;
    clone2.__values__ = void 0;
    if (result2) {
      previous.__wrapped__ = clone2;
    } else {
      result2 = clone2;
    }
    var previous = clone2;
    parent2 = parent2.__wrapped__;
  }
  previous.__wrapped__ = value;
  return result2;
}
var plant_default = wrapperPlant;

// node_modules/lodash-es/propertyOf.js
function propertyOf(object) {
  return function(path) {
    return object == null ? void 0 : baseGet_default(object, path);
  };
}
var propertyOf_default = propertyOf;

// node_modules/lodash-es/_baseIndexOfWith.js
function baseIndexOfWith(array, value, fromIndex, comparator) {
  var index = fromIndex - 1, length = array.length;
  while (++index < length) {
    if (comparator(array[index], value)) {
      return index;
    }
  }
  return -1;
}
var baseIndexOfWith_default = baseIndexOfWith;

// node_modules/lodash-es/_basePullAll.js
var arrayProto3 = Array.prototype;
var splice2 = arrayProto3.splice;
function basePullAll(array, values2, iteratee2, comparator) {
  var indexOf2 = comparator ? baseIndexOfWith_default : baseIndexOf_default, index = -1, length = values2.length, seen = array;
  if (array === values2) {
    values2 = copyArray_default(values2);
  }
  if (iteratee2) {
    seen = arrayMap_default(array, baseUnary_default(iteratee2));
  }
  while (++index < length) {
    var fromIndex = 0, value = values2[index], computed2 = iteratee2 ? iteratee2(value) : value;
    while ((fromIndex = indexOf2(seen, computed2, fromIndex, comparator)) > -1) {
      if (seen !== array) {
        splice2.call(seen, fromIndex, 1);
      }
      splice2.call(array, fromIndex, 1);
    }
  }
  return array;
}
var basePullAll_default = basePullAll;

// node_modules/lodash-es/pullAll.js
function pullAll(array, values2) {
  return array && array.length && values2 && values2.length ? basePullAll_default(array, values2) : array;
}
var pullAll_default = pullAll;

// node_modules/lodash-es/pull.js
var pull = baseRest_default(pullAll_default);
var pull_default = pull;

// node_modules/lodash-es/pullAllBy.js
function pullAllBy(array, values2, iteratee2) {
  return array && array.length && values2 && values2.length ? basePullAll_default(array, values2, baseIteratee_default(iteratee2, 2)) : array;
}
var pullAllBy_default = pullAllBy;

// node_modules/lodash-es/pullAllWith.js
function pullAllWith(array, values2, comparator) {
  return array && array.length && values2 && values2.length ? basePullAll_default(array, values2, void 0, comparator) : array;
}
var pullAllWith_default = pullAllWith;

// node_modules/lodash-es/_basePullAt.js
var arrayProto4 = Array.prototype;
var splice3 = arrayProto4.splice;
function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0, lastIndex = length - 1;
  while (length--) {
    var index = indexes[length];
    if (length == lastIndex || index !== previous) {
      var previous = index;
      if (isIndex_default(index)) {
        splice3.call(array, index, 1);
      } else {
        baseUnset_default(array, index);
      }
    }
  }
  return array;
}
var basePullAt_default = basePullAt;

// node_modules/lodash-es/pullAt.js
var pullAt = flatRest_default(function(array, indexes) {
  var length = array == null ? 0 : array.length, result2 = baseAt_default(array, indexes);
  basePullAt_default(array, arrayMap_default(indexes, function(index) {
    return isIndex_default(index, length) ? +index : index;
  }).sort(compareAscending_default));
  return result2;
});
var pullAt_default = pullAt;

// node_modules/lodash-es/_baseRandom.js
var nativeFloor3 = Math.floor;
var nativeRandom = Math.random;
function baseRandom(lower, upper) {
  return lower + nativeFloor3(nativeRandom() * (upper - lower + 1));
}
var baseRandom_default = baseRandom;

// node_modules/lodash-es/random.js
var freeParseFloat = parseFloat;
var nativeMin10 = Math.min;
var nativeRandom2 = Math.random;
function random(lower, upper, floating) {
  if (floating && typeof floating != "boolean" && isIterateeCall_default(lower, upper, floating)) {
    upper = floating = void 0;
  }
  if (floating === void 0) {
    if (typeof upper == "boolean") {
      floating = upper;
      upper = void 0;
    } else if (typeof lower == "boolean") {
      floating = lower;
      lower = void 0;
    }
  }
  if (lower === void 0 && upper === void 0) {
    lower = 0;
    upper = 1;
  } else {
    lower = toFinite_default(lower);
    if (upper === void 0) {
      upper = lower;
      lower = 0;
    } else {
      upper = toFinite_default(upper);
    }
  }
  if (lower > upper) {
    var temp = lower;
    lower = upper;
    upper = temp;
  }
  if (floating || lower % 1 || upper % 1) {
    var rand = nativeRandom2();
    return nativeMin10(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
  }
  return baseRandom_default(lower, upper);
}
var random_default = random;

// node_modules/lodash-es/_baseRange.js
var nativeCeil4 = Math.ceil;
var nativeMax13 = Math.max;
function baseRange(start, end, step, fromRight) {
  var index = -1, length = nativeMax13(nativeCeil4((end - start) / (step || 1)), 0), result2 = Array(length);
  while (length--) {
    result2[fromRight ? length : ++index] = start;
    start += step;
  }
  return result2;
}
var baseRange_default = baseRange;

// node_modules/lodash-es/_createRange.js
function createRange(fromRight) {
  return function(start, end, step) {
    if (step && typeof step != "number" && isIterateeCall_default(start, end, step)) {
      end = step = void 0;
    }
    start = toFinite_default(start);
    if (end === void 0) {
      end = start;
      start = 0;
    } else {
      end = toFinite_default(end);
    }
    step = step === void 0 ? start < end ? 1 : -1 : toFinite_default(step);
    return baseRange_default(start, end, step, fromRight);
  };
}
var createRange_default = createRange;

// node_modules/lodash-es/range.js
var range = createRange_default();
var range_default = range;

// node_modules/lodash-es/rangeRight.js
var rangeRight = createRange_default(true);
var rangeRight_default = rangeRight;

// node_modules/lodash-es/rearg.js
var WRAP_REARG_FLAG4 = 256;
var rearg = flatRest_default(function(func, indexes) {
  return createWrap_default(func, WRAP_REARG_FLAG4, void 0, void 0, void 0, indexes);
});
var rearg_default = rearg;

// node_modules/lodash-es/_baseReduce.js
function baseReduce(collection, iteratee2, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index, collection2) {
    accumulator = initAccum ? (initAccum = false, value) : iteratee2(accumulator, value, index, collection2);
  });
  return accumulator;
}
var baseReduce_default = baseReduce;

// node_modules/lodash-es/reduce.js
function reduce(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduce_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEach_default);
}
var reduce_default = reduce;

// node_modules/lodash-es/_arrayReduceRight.js
function arrayReduceRight(array, iteratee2, accumulator, initAccum) {
  var length = array == null ? 0 : array.length;
  if (initAccum && length) {
    accumulator = array[--length];
  }
  while (length--) {
    accumulator = iteratee2(accumulator, array[length], length, array);
  }
  return accumulator;
}
var arrayReduceRight_default = arrayReduceRight;

// node_modules/lodash-es/reduceRight.js
function reduceRight(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduceRight_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEachRight_default);
}
var reduceRight_default = reduceRight;

// node_modules/lodash-es/reject.js
function reject(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, negate_default(baseIteratee_default(predicate, 3)));
}
var reject_default = reject;

// node_modules/lodash-es/remove.js
function remove(array, predicate) {
  var result2 = [];
  if (!(array && array.length)) {
    return result2;
  }
  var index = -1, indexes = [], length = array.length;
  predicate = baseIteratee_default(predicate, 3);
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result2.push(value);
      indexes.push(index);
    }
  }
  basePullAt_default(array, indexes);
  return result2;
}
var remove_default = remove;

// node_modules/lodash-es/repeat.js
function repeat(string, n, guard) {
  if (guard ? isIterateeCall_default(string, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  return baseRepeat_default(toString_default(string), n);
}
var repeat_default = repeat;

// node_modules/lodash-es/replace.js
function replace() {
  var args = arguments, string = toString_default(args[0]);
  return args.length < 3 ? string : string.replace(args[1], args[2]);
}
var replace_default = replace;

// node_modules/lodash-es/rest.js
var FUNC_ERROR_TEXT10 = "Expected a function";
function rest(func, start) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT10);
  }
  start = start === void 0 ? start : toInteger_default(start);
  return baseRest_default(func, start);
}
var rest_default = rest;

// node_modules/lodash-es/result.js
function result(object, path, defaultValue) {
  path = castPath_default(path, object);
  var index = -1, length = path.length;
  if (!length) {
    length = 1;
    object = void 0;
  }
  while (++index < length) {
    var value = object == null ? void 0 : object[toKey_default(path[index])];
    if (value === void 0) {
      index = length;
      value = defaultValue;
    }
    object = isFunction_default(value) ? value.call(object) : value;
  }
  return object;
}
var result_default = result;

// node_modules/lodash-es/reverse.js
var arrayProto5 = Array.prototype;
var nativeReverse = arrayProto5.reverse;
function reverse(array) {
  return array == null ? array : nativeReverse.call(array);
}
var reverse_default = reverse;

// node_modules/lodash-es/round.js
var round = createRound_default("round");
var round_default = round;

// node_modules/lodash-es/_arraySample.js
function arraySample(array) {
  var length = array.length;
  return length ? array[baseRandom_default(0, length - 1)] : void 0;
}
var arraySample_default = arraySample;

// node_modules/lodash-es/_baseSample.js
function baseSample(collection) {
  return arraySample_default(values_default(collection));
}
var baseSample_default = baseSample;

// node_modules/lodash-es/sample.js
function sample(collection) {
  var func = isArray_default(collection) ? arraySample_default : baseSample_default;
  return func(collection);
}
var sample_default = sample;

// node_modules/lodash-es/_shuffleSelf.js
function shuffleSelf(array, size2) {
  var index = -1, length = array.length, lastIndex = length - 1;
  size2 = size2 === void 0 ? length : size2;
  while (++index < size2) {
    var rand = baseRandom_default(index, lastIndex), value = array[rand];
    array[rand] = array[index];
    array[index] = value;
  }
  array.length = size2;
  return array;
}
var shuffleSelf_default = shuffleSelf;

// node_modules/lodash-es/_arraySampleSize.js
function arraySampleSize(array, n) {
  return shuffleSelf_default(copyArray_default(array), baseClamp_default(n, 0, array.length));
}
var arraySampleSize_default = arraySampleSize;

// node_modules/lodash-es/_baseSampleSize.js
function baseSampleSize(collection, n) {
  var array = values_default(collection);
  return shuffleSelf_default(array, baseClamp_default(n, 0, array.length));
}
var baseSampleSize_default = baseSampleSize;

// node_modules/lodash-es/sampleSize.js
function sampleSize(collection, n, guard) {
  if (guard ? isIterateeCall_default(collection, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  var func = isArray_default(collection) ? arraySampleSize_default : baseSampleSize_default;
  return func(collection, n);
}
var sampleSize_default = sampleSize;

// node_modules/lodash-es/set.js
function set(object, path, value) {
  return object == null ? object : baseSet_default(object, path, value);
}
var set_default = set;

// node_modules/lodash-es/setWith.js
function setWith(object, path, value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object == null ? object : baseSet_default(object, path, value, customizer);
}
var setWith_default = setWith;

// node_modules/lodash-es/_arrayShuffle.js
function arrayShuffle(array) {
  return shuffleSelf_default(copyArray_default(array));
}
var arrayShuffle_default = arrayShuffle;

// node_modules/lodash-es/_baseShuffle.js
function baseShuffle(collection) {
  return shuffleSelf_default(values_default(collection));
}
var baseShuffle_default = baseShuffle;

// node_modules/lodash-es/shuffle.js
function shuffle(collection) {
  var func = isArray_default(collection) ? arrayShuffle_default : baseShuffle_default;
  return func(collection);
}
var shuffle_default = shuffle;

// node_modules/lodash-es/size.js
var mapTag10 = "[object Map]";
var setTag10 = "[object Set]";
function size(collection) {
  if (collection == null) {
    return 0;
  }
  if (isArrayLike_default(collection)) {
    return isString_default(collection) ? stringSize_default(collection) : collection.length;
  }
  var tag = getTag_default(collection);
  if (tag == mapTag10 || tag == setTag10) {
    return collection.size;
  }
  return baseKeys_default(collection).length;
}
var size_default = size;

// node_modules/lodash-es/slice.js
function slice(array, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (end && typeof end != "number" && isIterateeCall_default(array, start, end)) {
    start = 0;
    end = length;
  } else {
    start = start == null ? 0 : toInteger_default(start);
    end = end === void 0 ? length : toInteger_default(end);
  }
  return baseSlice_default(array, start, end);
}
var slice_default = slice;

// node_modules/lodash-es/snakeCase.js
var snakeCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? "_" : "") + word.toLowerCase();
});
var snakeCase_default = snakeCase;

// node_modules/lodash-es/_baseSome.js
function baseSome(collection, predicate) {
  var result2;
  baseEach_default(collection, function(value, index, collection2) {
    result2 = predicate(value, index, collection2);
    return !result2;
  });
  return !!result2;
}
var baseSome_default = baseSome;

// node_modules/lodash-es/some.js
function some(collection, predicate, guard) {
  var func = isArray_default(collection) ? arraySome_default : baseSome_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var some_default = some;

// node_modules/lodash-es/sortBy.js
var sortBy = baseRest_default(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall_default(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall_default(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy_default(collection, baseFlatten_default(iteratees, 1), []);
});
var sortBy_default = sortBy;

// node_modules/lodash-es/_baseSortedIndexBy.js
var MAX_ARRAY_LENGTH3 = 4294967295;
var MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH3 - 1;
var nativeFloor4 = Math.floor;
var nativeMin11 = Math.min;
function baseSortedIndexBy(array, value, iteratee2, retHighest) {
  var low = 0, high = array == null ? 0 : array.length;
  if (high === 0) {
    return 0;
  }
  value = iteratee2(value);
  var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol_default(value), valIsUndefined = value === void 0;
  while (low < high) {
    var mid = nativeFloor4((low + high) / 2), computed2 = iteratee2(array[mid]), othIsDefined = computed2 !== void 0, othIsNull = computed2 === null, othIsReflexive = computed2 === computed2, othIsSymbol = isSymbol_default(computed2);
    if (valIsNaN) {
      var setLow = retHighest || othIsReflexive;
    } else if (valIsUndefined) {
      setLow = othIsReflexive && (retHighest || othIsDefined);
    } else if (valIsNull) {
      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
    } else if (valIsSymbol) {
      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
    } else if (othIsNull || othIsSymbol) {
      setLow = false;
    } else {
      setLow = retHighest ? computed2 <= value : computed2 < value;
    }
    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }
  return nativeMin11(high, MAX_ARRAY_INDEX);
}
var baseSortedIndexBy_default = baseSortedIndexBy;

// node_modules/lodash-es/_baseSortedIndex.js
var MAX_ARRAY_LENGTH4 = 4294967295;
var HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH4 >>> 1;
function baseSortedIndex(array, value, retHighest) {
  var low = 0, high = array == null ? low : array.length;
  if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
    while (low < high) {
      var mid = low + high >>> 1, computed2 = array[mid];
      if (computed2 !== null && !isSymbol_default(computed2) && (retHighest ? computed2 <= value : computed2 < value)) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }
    return high;
  }
  return baseSortedIndexBy_default(array, value, identity_default, retHighest);
}
var baseSortedIndex_default = baseSortedIndex;

// node_modules/lodash-es/sortedIndex.js
function sortedIndex(array, value) {
  return baseSortedIndex_default(array, value);
}
var sortedIndex_default = sortedIndex;

// node_modules/lodash-es/sortedIndexBy.js
function sortedIndexBy(array, value, iteratee2) {
  return baseSortedIndexBy_default(array, value, baseIteratee_default(iteratee2, 2));
}
var sortedIndexBy_default = sortedIndexBy;

// node_modules/lodash-es/sortedIndexOf.js
function sortedIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index = baseSortedIndex_default(array, value);
    if (index < length && eq_default(array[index], value)) {
      return index;
    }
  }
  return -1;
}
var sortedIndexOf_default = sortedIndexOf;

// node_modules/lodash-es/sortedLastIndex.js
function sortedLastIndex(array, value) {
  return baseSortedIndex_default(array, value, true);
}
var sortedLastIndex_default = sortedLastIndex;

// node_modules/lodash-es/sortedLastIndexBy.js
function sortedLastIndexBy(array, value, iteratee2) {
  return baseSortedIndexBy_default(array, value, baseIteratee_default(iteratee2, 2), true);
}
var sortedLastIndexBy_default = sortedLastIndexBy;

// node_modules/lodash-es/sortedLastIndexOf.js
function sortedLastIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index = baseSortedIndex_default(array, value, true) - 1;
    if (eq_default(array[index], value)) {
      return index;
    }
  }
  return -1;
}
var sortedLastIndexOf_default = sortedLastIndexOf;

// node_modules/lodash-es/_baseSortedUniq.js
function baseSortedUniq(array, iteratee2) {
  var index = -1, length = array.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array[index], computed2 = iteratee2 ? iteratee2(value) : value;
    if (!index || !eq_default(computed2, seen)) {
      var seen = computed2;
      result2[resIndex++] = value === 0 ? 0 : value;
    }
  }
  return result2;
}
var baseSortedUniq_default = baseSortedUniq;

// node_modules/lodash-es/sortedUniq.js
function sortedUniq(array) {
  return array && array.length ? baseSortedUniq_default(array) : [];
}
var sortedUniq_default = sortedUniq;

// node_modules/lodash-es/sortedUniqBy.js
function sortedUniqBy(array, iteratee2) {
  return array && array.length ? baseSortedUniq_default(array, baseIteratee_default(iteratee2, 2)) : [];
}
var sortedUniqBy_default = sortedUniqBy;

// node_modules/lodash-es/split.js
var MAX_ARRAY_LENGTH5 = 4294967295;
function split(string, separator, limit) {
  if (limit && typeof limit != "number" && isIterateeCall_default(string, separator, limit)) {
    separator = limit = void 0;
  }
  limit = limit === void 0 ? MAX_ARRAY_LENGTH5 : limit >>> 0;
  if (!limit) {
    return [];
  }
  string = toString_default(string);
  if (string && (typeof separator == "string" || separator != null && !isRegExp_default(separator))) {
    separator = baseToString_default(separator);
    if (!separator && hasUnicode_default(string)) {
      return castSlice_default(stringToArray_default(string), 0, limit);
    }
  }
  return string.split(separator, limit);
}
var split_default = split;

// node_modules/lodash-es/spread.js
var FUNC_ERROR_TEXT11 = "Expected a function";
var nativeMax14 = Math.max;
function spread(func, start) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT11);
  }
  start = start == null ? 0 : nativeMax14(toInteger_default(start), 0);
  return baseRest_default(function(args) {
    var array = args[start], otherArgs = castSlice_default(args, 0, start);
    if (array) {
      arrayPush_default(otherArgs, array);
    }
    return apply_default(func, this, otherArgs);
  });
}
var spread_default = spread;

// node_modules/lodash-es/startCase.js
var startCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? " " : "") + upperFirst_default(word);
});
var startCase_default = startCase;

// node_modules/lodash-es/startsWith.js
function startsWith(string, target, position) {
  string = toString_default(string);
  position = position == null ? 0 : baseClamp_default(toInteger_default(position), 0, string.length);
  target = baseToString_default(target);
  return string.slice(position, position + target.length) == target;
}
var startsWith_default = startsWith;

// node_modules/lodash-es/stubObject.js
function stubObject() {
  return {};
}
var stubObject_default = stubObject;

// node_modules/lodash-es/stubString.js
function stubString() {
  return "";
}
var stubString_default = stubString;

// node_modules/lodash-es/stubTrue.js
function stubTrue() {
  return true;
}
var stubTrue_default = stubTrue;

// node_modules/lodash-es/subtract.js
var subtract = createMathOperation_default(function(minuend, subtrahend) {
  return minuend - subtrahend;
}, 0);
var subtract_default = subtract;

// node_modules/lodash-es/sum.js
function sum(array) {
  return array && array.length ? baseSum_default(array, identity_default) : 0;
}
var sum_default = sum;

// node_modules/lodash-es/sumBy.js
function sumBy(array, iteratee2) {
  return array && array.length ? baseSum_default(array, baseIteratee_default(iteratee2, 2)) : 0;
}
var sumBy_default = sumBy;

// node_modules/lodash-es/tail.js
function tail(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseSlice_default(array, 1, length) : [];
}
var tail_default = tail;

// node_modules/lodash-es/take.js
function take(array, n, guard) {
  if (!(array && array.length)) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array, 0, n < 0 ? 0 : n);
}
var take_default = take;

// node_modules/lodash-es/takeRight.js
function takeRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array, n < 0 ? 0 : n, length);
}
var takeRight_default = takeRight;

// node_modules/lodash-es/takeRightWhile.js
function takeRightWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3), false, true) : [];
}
var takeRightWhile_default = takeRightWhile;

// node_modules/lodash-es/takeWhile.js
function takeWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3)) : [];
}
var takeWhile_default = takeWhile;

// node_modules/lodash-es/tap.js
function tap(value, interceptor) {
  interceptor(value);
  return value;
}
var tap_default = tap;

// node_modules/lodash-es/_customDefaultsAssignIn.js
var objectProto27 = Object.prototype;
var hasOwnProperty23 = objectProto27.hasOwnProperty;
function customDefaultsAssignIn(objValue, srcValue, key, object) {
  if (objValue === void 0 || eq_default(objValue, objectProto27[key]) && !hasOwnProperty23.call(object, key)) {
    return srcValue;
  }
  return objValue;
}
var customDefaultsAssignIn_default = customDefaultsAssignIn;

// node_modules/lodash-es/_escapeStringChar.js
var stringEscapes = {
  "\\": "\\",
  "'": "'",
  "\n": "n",
  "\r": "r",
  "\u2028": "u2028",
  "\u2029": "u2029"
};
function escapeStringChar(chr) {
  return "\\" + stringEscapes[chr];
}
var escapeStringChar_default = escapeStringChar;

// node_modules/lodash-es/_reInterpolate.js
var reInterpolate = /<%=([\s\S]+?)%>/g;
var reInterpolate_default = reInterpolate;

// node_modules/lodash-es/_reEscape.js
var reEscape = /<%-([\s\S]+?)%>/g;
var reEscape_default = reEscape;

// node_modules/lodash-es/_reEvaluate.js
var reEvaluate = /<%([\s\S]+?)%>/g;
var reEvaluate_default = reEvaluate;

// node_modules/lodash-es/templateSettings.js
var templateSettings = {
  /**
   * Used to detect `data` property values to be HTML-escaped.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "escape": reEscape_default,
  /**
   * Used to detect code to be evaluated.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "evaluate": reEvaluate_default,
  /**
   * Used to detect `data` property values to inject.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "interpolate": reInterpolate_default,
  /**
   * Used to reference the data object in the template text.
   *
   * @memberOf _.templateSettings
   * @type {string}
   */
  "variable": "",
  /**
   * Used to import variables into the compiled template.
   *
   * @memberOf _.templateSettings
   * @type {Object}
   */
  "imports": {
    /**
     * A reference to the `lodash` function.
     *
     * @memberOf _.templateSettings.imports
     * @type {Function}
     */
    "_": { "escape": escape_default }
  }
};
var templateSettings_default = templateSettings;

// node_modules/lodash-es/template.js
var INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
var reEmptyStringLeading = /\b__p \+= '';/g;
var reEmptyStringMiddle = /\b(__p \+=) '' \+/g;
var reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
var reNoMatch = /($^)/;
var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
var objectProto28 = Object.prototype;
var hasOwnProperty24 = objectProto28.hasOwnProperty;
function template(string, options, guard) {
  var settings = templateSettings_default.imports._.templateSettings || templateSettings_default;
  if (guard && isIterateeCall_default(string, options, guard)) {
    options = void 0;
  }
  string = toString_default(string);
  options = assignInWith_default({}, options, settings, customDefaultsAssignIn_default);
  var imports = assignInWith_default({}, options.imports, settings.imports, customDefaultsAssignIn_default), importsKeys = keys_default(imports), importsValues = baseValues_default(imports, importsKeys);
  var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
  var reDelimiters = RegExp(
    (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate_default ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
    "g"
  );
  var sourceURL = hasOwnProperty24.call(options, "sourceURL") ? "//# sourceURL=" + (options.sourceURL + "").replace(/\s/g, " ") + "\n" : "";
  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
    interpolateValue || (interpolateValue = esTemplateValue);
    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar_default);
    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }
    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }
    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }
    index = offset + match.length;
    return match;
  });
  source += "';\n";
  var variable = hasOwnProperty24.call(options, "variable") && options.variable;
  if (!variable) {
    source = "with (obj) {\n" + source + "\n}\n";
  } else if (reForbiddenIdentifierChars.test(variable)) {
    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
  }
  source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
  source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
  var result2 = attempt_default(function() {
    return Function(importsKeys, sourceURL + "return " + source).apply(void 0, importsValues);
  });
  result2.source = source;
  if (isError_default(result2)) {
    throw result2;
  }
  return result2;
}
var template_default = template;

// node_modules/lodash-es/throttle.js
var FUNC_ERROR_TEXT12 = "Expected a function";
function throttle(func, wait, options) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT12);
  }
  if (isObject_default(options)) {
    leading = "leading" in options ? !!options.leading : leading;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  return debounce_default(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var throttle_default = throttle;

// node_modules/lodash-es/thru.js
function thru(value, interceptor) {
  return interceptor(value);
}
var thru_default = thru;

// node_modules/lodash-es/times.js
var MAX_SAFE_INTEGER5 = 9007199254740991;
var MAX_ARRAY_LENGTH6 = 4294967295;
var nativeMin12 = Math.min;
function times(n, iteratee2) {
  n = toInteger_default(n);
  if (n < 1 || n > MAX_SAFE_INTEGER5) {
    return [];
  }
  var index = MAX_ARRAY_LENGTH6, length = nativeMin12(n, MAX_ARRAY_LENGTH6);
  iteratee2 = castFunction_default(iteratee2);
  n -= MAX_ARRAY_LENGTH6;
  var result2 = baseTimes_default(length, iteratee2);
  while (++index < n) {
    iteratee2(index);
  }
  return result2;
}
var times_default = times;

// node_modules/lodash-es/toIterator.js
function wrapperToIterator() {
  return this;
}
var toIterator_default = wrapperToIterator;

// node_modules/lodash-es/_baseWrapperValue.js
function baseWrapperValue(value, actions) {
  var result2 = value;
  if (result2 instanceof LazyWrapper_default) {
    result2 = result2.value();
  }
  return arrayReduce_default(actions, function(result3, action) {
    return action.func.apply(action.thisArg, arrayPush_default([result3], action.args));
  }, result2);
}
var baseWrapperValue_default = baseWrapperValue;

// node_modules/lodash-es/wrapperValue.js
function wrapperValue() {
  return baseWrapperValue_default(this.__wrapped__, this.__actions__);
}
var wrapperValue_default = wrapperValue;

// node_modules/lodash-es/toLower.js
function toLower(value) {
  return toString_default(value).toLowerCase();
}
var toLower_default = toLower;

// node_modules/lodash-es/toPath.js
function toPath(value) {
  if (isArray_default(value)) {
    return arrayMap_default(value, toKey_default);
  }
  return isSymbol_default(value) ? [value] : copyArray_default(stringToPath_default(toString_default(value)));
}
var toPath_default = toPath;

// node_modules/lodash-es/toSafeInteger.js
var MAX_SAFE_INTEGER6 = 9007199254740991;
function toSafeInteger(value) {
  return value ? baseClamp_default(toInteger_default(value), -MAX_SAFE_INTEGER6, MAX_SAFE_INTEGER6) : value === 0 ? value : 0;
}
var toSafeInteger_default = toSafeInteger;

// node_modules/lodash-es/toUpper.js
function toUpper(value) {
  return toString_default(value).toUpperCase();
}
var toUpper_default = toUpper;

// node_modules/lodash-es/transform.js
function transform(object, iteratee2, accumulator) {
  var isArr = isArray_default(object), isArrLike = isArr || isBuffer_default(object) || isTypedArray_default(object);
  iteratee2 = baseIteratee_default(iteratee2, 4);
  if (accumulator == null) {
    var Ctor = object && object.constructor;
    if (isArrLike) {
      accumulator = isArr ? new Ctor() : [];
    } else if (isObject_default(object)) {
      accumulator = isFunction_default(Ctor) ? baseCreate_default(getPrototype_default(object)) : {};
    } else {
      accumulator = {};
    }
  }
  (isArrLike ? arrayEach_default : baseForOwn_default)(object, function(value, index, object2) {
    return iteratee2(accumulator, value, index, object2);
  });
  return accumulator;
}
var transform_default = transform;

// node_modules/lodash-es/_charsEndIndex.js
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;
  while (index-- && baseIndexOf_default(chrSymbols, strSymbols[index], 0) > -1) {
  }
  return index;
}
var charsEndIndex_default = charsEndIndex;

// node_modules/lodash-es/_charsStartIndex.js
function charsStartIndex(strSymbols, chrSymbols) {
  var index = -1, length = strSymbols.length;
  while (++index < length && baseIndexOf_default(chrSymbols, strSymbols[index], 0) > -1) {
  }
  return index;
}
var charsStartIndex_default = charsStartIndex;

// node_modules/lodash-es/trim.js
function trim(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return baseTrim_default(string);
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), chrSymbols = stringToArray_default(chars), start = charsStartIndex_default(strSymbols, chrSymbols), end = charsEndIndex_default(strSymbols, chrSymbols) + 1;
  return castSlice_default(strSymbols, start, end).join("");
}
var trim_default = trim;

// node_modules/lodash-es/trimEnd.js
function trimEnd(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return string.slice(0, trimmedEndIndex_default(string) + 1);
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), end = charsEndIndex_default(strSymbols, stringToArray_default(chars)) + 1;
  return castSlice_default(strSymbols, 0, end).join("");
}
var trimEnd_default = trimEnd;

// node_modules/lodash-es/trimStart.js
var reTrimStart3 = /^\s+/;
function trimStart(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return string.replace(reTrimStart3, "");
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), start = charsStartIndex_default(strSymbols, stringToArray_default(chars));
  return castSlice_default(strSymbols, start).join("");
}
var trimStart_default = trimStart;

// node_modules/lodash-es/truncate.js
var DEFAULT_TRUNC_LENGTH = 30;
var DEFAULT_TRUNC_OMISSION = "...";
var reFlags2 = /\w*$/;
function truncate(string, options) {
  var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
  if (isObject_default(options)) {
    var separator = "separator" in options ? options.separator : separator;
    length = "length" in options ? toInteger_default(options.length) : length;
    omission = "omission" in options ? baseToString_default(options.omission) : omission;
  }
  string = toString_default(string);
  var strLength = string.length;
  if (hasUnicode_default(string)) {
    var strSymbols = stringToArray_default(string);
    strLength = strSymbols.length;
  }
  if (length >= strLength) {
    return string;
  }
  var end = length - stringSize_default(omission);
  if (end < 1) {
    return omission;
  }
  var result2 = strSymbols ? castSlice_default(strSymbols, 0, end).join("") : string.slice(0, end);
  if (separator === void 0) {
    return result2 + omission;
  }
  if (strSymbols) {
    end += result2.length - end;
  }
  if (isRegExp_default(separator)) {
    if (string.slice(end).search(separator)) {
      var match, substring = result2;
      if (!separator.global) {
        separator = RegExp(separator.source, toString_default(reFlags2.exec(separator)) + "g");
      }
      separator.lastIndex = 0;
      while (match = separator.exec(substring)) {
        var newEnd = match.index;
      }
      result2 = result2.slice(0, newEnd === void 0 ? end : newEnd);
    }
  } else if (string.indexOf(baseToString_default(separator), end) != end) {
    var index = result2.lastIndexOf(separator);
    if (index > -1) {
      result2 = result2.slice(0, index);
    }
  }
  return result2 + omission;
}
var truncate_default = truncate;

// node_modules/lodash-es/unary.js
function unary(func) {
  return ary_default(func, 1);
}
var unary_default = unary;

// node_modules/lodash-es/_unescapeHtmlChar.js
var htmlUnescapes = {
  "&amp;": "&",
  "&lt;": "<",
  "&gt;": ">",
  "&quot;": '"',
  "&#39;": "'"
};
var unescapeHtmlChar = basePropertyOf_default(htmlUnescapes);
var unescapeHtmlChar_default = unescapeHtmlChar;

// node_modules/lodash-es/unescape.js
var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;
var reHasEscapedHtml = RegExp(reEscapedHtml.source);
function unescape(string) {
  string = toString_default(string);
  return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar_default) : string;
}
var unescape_default = unescape;

// node_modules/lodash-es/_createSet.js
var INFINITY6 = 1 / 0;
var createSet = !(Set_default && 1 / setToArray_default(new Set_default([, -0]))[1] == INFINITY6) ? noop_default : function(values2) {
  return new Set_default(values2);
};
var createSet_default = createSet;

// node_modules/lodash-es/_baseUniq.js
var LARGE_ARRAY_SIZE3 = 200;
function baseUniq(array, iteratee2, comparator) {
  var index = -1, includes2 = arrayIncludes_default, length = array.length, isCommon = true, result2 = [], seen = result2;
  if (comparator) {
    isCommon = false;
    includes2 = arrayIncludesWith_default;
  } else if (length >= LARGE_ARRAY_SIZE3) {
    var set2 = iteratee2 ? null : createSet_default(array);
    if (set2) {
      return setToArray_default(set2);
    }
    isCommon = false;
    includes2 = cacheHas_default;
    seen = new SetCache_default();
  } else {
    seen = iteratee2 ? [] : result2;
  }
  outer:
    while (++index < length) {
      var value = array[index], computed2 = iteratee2 ? iteratee2(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed2 === computed2) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed2) {
            continue outer;
          }
        }
        if (iteratee2) {
          seen.push(computed2);
        }
        result2.push(value);
      } else if (!includes2(seen, computed2, comparator)) {
        if (seen !== result2) {
          seen.push(computed2);
        }
        result2.push(value);
      }
    }
  return result2;
}
var baseUniq_default = baseUniq;

// node_modules/lodash-es/union.js
var union = baseRest_default(function(arrays) {
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true));
});
var union_default = union;

// node_modules/lodash-es/unionBy.js
var unionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2));
});
var unionBy_default = unionBy;

// node_modules/lodash-es/unionWith.js
var unionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), void 0, comparator);
});
var unionWith_default = unionWith;

// node_modules/lodash-es/uniq.js
function uniq(array) {
  return array && array.length ? baseUniq_default(array) : [];
}
var uniq_default = uniq;

// node_modules/lodash-es/uniqBy.js
function uniqBy(array, iteratee2) {
  return array && array.length ? baseUniq_default(array, baseIteratee_default(iteratee2, 2)) : [];
}
var uniqBy_default = uniqBy;

// node_modules/lodash-es/uniqWith.js
function uniqWith(array, comparator) {
  comparator = typeof comparator == "function" ? comparator : void 0;
  return array && array.length ? baseUniq_default(array, void 0, comparator) : [];
}
var uniqWith_default = uniqWith;

// node_modules/lodash-es/uniqueId.js
var idCounter = 0;
function uniqueId(prefix) {
  var id = ++idCounter;
  return toString_default(prefix) + id;
}
var uniqueId_default = uniqueId;

// node_modules/lodash-es/unset.js
function unset(object, path) {
  return object == null ? true : baseUnset_default(object, path);
}
var unset_default = unset;

// node_modules/lodash-es/unzip.js
var nativeMax15 = Math.max;
function unzip(array) {
  if (!(array && array.length)) {
    return [];
  }
  var length = 0;
  array = arrayFilter_default(array, function(group) {
    if (isArrayLikeObject_default(group)) {
      length = nativeMax15(group.length, length);
      return true;
    }
  });
  return baseTimes_default(length, function(index) {
    return arrayMap_default(array, baseProperty_default(index));
  });
}
var unzip_default = unzip;

// node_modules/lodash-es/unzipWith.js
function unzipWith(array, iteratee2) {
  if (!(array && array.length)) {
    return [];
  }
  var result2 = unzip_default(array);
  if (iteratee2 == null) {
    return result2;
  }
  return arrayMap_default(result2, function(group) {
    return apply_default(iteratee2, void 0, group);
  });
}
var unzipWith_default = unzipWith;

// node_modules/lodash-es/_baseUpdate.js
function baseUpdate(object, path, updater, customizer) {
  return baseSet_default(object, path, updater(baseGet_default(object, path)), customizer);
}
var baseUpdate_default = baseUpdate;

// node_modules/lodash-es/update.js
function update(object, path, updater) {
  return object == null ? object : baseUpdate_default(object, path, castFunction_default(updater));
}
var update_default = update;

// node_modules/lodash-es/updateWith.js
function updateWith(object, path, updater, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object == null ? object : baseUpdate_default(object, path, castFunction_default(updater), customizer);
}
var updateWith_default = updateWith;

// node_modules/lodash-es/upperCase.js
var upperCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? " " : "") + word.toUpperCase();
});
var upperCase_default = upperCase;

// node_modules/lodash-es/valuesIn.js
function valuesIn(object) {
  return object == null ? [] : baseValues_default(object, keysIn_default(object));
}
var valuesIn_default = valuesIn;

// node_modules/lodash-es/without.js
var without = baseRest_default(function(array, values2) {
  return isArrayLikeObject_default(array) ? baseDifference_default(array, values2) : [];
});
var without_default = without;

// node_modules/lodash-es/wrap.js
function wrap(value, wrapper) {
  return partial_default(castFunction_default(wrapper), value);
}
var wrap_default = wrap;

// node_modules/lodash-es/wrapperAt.js
var wrapperAt = flatRest_default(function(paths) {
  var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
    return baseAt_default(object, paths);
  };
  if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper_default) || !isIndex_default(start)) {
    return this.thru(interceptor);
  }
  value = value.slice(start, +start + (length ? 1 : 0));
  value.__actions__.push({
    "func": thru_default,
    "args": [interceptor],
    "thisArg": void 0
  });
  return new LodashWrapper_default(value, this.__chain__).thru(function(array) {
    if (length && !array.length) {
      array.push(void 0);
    }
    return array;
  });
});
var wrapperAt_default = wrapperAt;

// node_modules/lodash-es/wrapperChain.js
function wrapperChain() {
  return chain_default(this);
}
var wrapperChain_default = wrapperChain;

// node_modules/lodash-es/wrapperReverse.js
function wrapperReverse() {
  var value = this.__wrapped__;
  if (value instanceof LazyWrapper_default) {
    var wrapped = value;
    if (this.__actions__.length) {
      wrapped = new LazyWrapper_default(this);
    }
    wrapped = wrapped.reverse();
    wrapped.__actions__.push({
      "func": thru_default,
      "args": [reverse_default],
      "thisArg": void 0
    });
    return new LodashWrapper_default(wrapped, this.__chain__);
  }
  return this.thru(reverse_default);
}
var wrapperReverse_default = wrapperReverse;

// node_modules/lodash-es/_baseXor.js
function baseXor(arrays, iteratee2, comparator) {
  var length = arrays.length;
  if (length < 2) {
    return length ? baseUniq_default(arrays[0]) : [];
  }
  var index = -1, result2 = Array(length);
  while (++index < length) {
    var array = arrays[index], othIndex = -1;
    while (++othIndex < length) {
      if (othIndex != index) {
        result2[index] = baseDifference_default(result2[index] || array, arrays[othIndex], iteratee2, comparator);
      }
    }
  }
  return baseUniq_default(baseFlatten_default(result2, 1), iteratee2, comparator);
}
var baseXor_default = baseXor;

// node_modules/lodash-es/xor.js
var xor = baseRest_default(function(arrays) {
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default));
});
var xor_default = xor;

// node_modules/lodash-es/xorBy.js
var xorBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), baseIteratee_default(iteratee2, 2));
});
var xorBy_default = xorBy;

// node_modules/lodash-es/xorWith.js
var xorWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), void 0, comparator);
});
var xorWith_default = xorWith;

// node_modules/lodash-es/zip.js
var zip = baseRest_default(unzip_default);
var zip_default = zip;

// node_modules/lodash-es/_baseZipObject.js
function baseZipObject(props, values2, assignFunc) {
  var index = -1, length = props.length, valsLength = values2.length, result2 = {};
  while (++index < length) {
    var value = index < valsLength ? values2[index] : void 0;
    assignFunc(result2, props[index], value);
  }
  return result2;
}
var baseZipObject_default = baseZipObject;

// node_modules/lodash-es/zipObject.js
function zipObject(props, values2) {
  return baseZipObject_default(props || [], values2 || [], assignValue_default);
}
var zipObject_default = zipObject;

// node_modules/lodash-es/zipObjectDeep.js
function zipObjectDeep(props, values2) {
  return baseZipObject_default(props || [], values2 || [], baseSet_default);
}
var zipObjectDeep_default = zipObjectDeep;

// node_modules/lodash-es/zipWith.js
var zipWith = baseRest_default(function(arrays) {
  var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : void 0;
  iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : void 0;
  return unzipWith_default(arrays, iteratee2);
});
var zipWith_default = zipWith;

// node_modules/lodash-es/array.default.js
var array_default_default = {
  chunk: chunk_default,
  compact: compact_default,
  concat: concat_default,
  difference: difference_default,
  differenceBy: differenceBy_default,
  differenceWith: differenceWith_default,
  drop: drop_default,
  dropRight: dropRight_default,
  dropRightWhile: dropRightWhile_default,
  dropWhile: dropWhile_default,
  fill: fill_default,
  findIndex: findIndex_default,
  findLastIndex: findLastIndex_default,
  first: head_default,
  flatten: flatten_default,
  flattenDeep: flattenDeep_default,
  flattenDepth: flattenDepth_default,
  fromPairs: fromPairs_default,
  head: head_default,
  indexOf: indexOf_default,
  initial: initial_default,
  intersection: intersection_default,
  intersectionBy: intersectionBy_default,
  intersectionWith: intersectionWith_default,
  join: join_default,
  last: last_default,
  lastIndexOf: lastIndexOf_default,
  nth: nth_default,
  pull: pull_default,
  pullAll: pullAll_default,
  pullAllBy: pullAllBy_default,
  pullAllWith: pullAllWith_default,
  pullAt: pullAt_default,
  remove: remove_default,
  reverse: reverse_default,
  slice: slice_default,
  sortedIndex: sortedIndex_default,
  sortedIndexBy: sortedIndexBy_default,
  sortedIndexOf: sortedIndexOf_default,
  sortedLastIndex: sortedLastIndex_default,
  sortedLastIndexBy: sortedLastIndexBy_default,
  sortedLastIndexOf: sortedLastIndexOf_default,
  sortedUniq: sortedUniq_default,
  sortedUniqBy: sortedUniqBy_default,
  tail: tail_default,
  take: take_default,
  takeRight: takeRight_default,
  takeRightWhile: takeRightWhile_default,
  takeWhile: takeWhile_default,
  union: union_default,
  unionBy: unionBy_default,
  unionWith: unionWith_default,
  uniq: uniq_default,
  uniqBy: uniqBy_default,
  uniqWith: uniqWith_default,
  unzip: unzip_default,
  unzipWith: unzipWith_default,
  without: without_default,
  xor: xor_default,
  xorBy: xorBy_default,
  xorWith: xorWith_default,
  zip: zip_default,
  zipObject: zipObject_default,
  zipObjectDeep: zipObjectDeep_default,
  zipWith: zipWith_default
};

// node_modules/lodash-es/collection.default.js
var collection_default_default = {
  countBy: countBy_default,
  each: forEach_default,
  eachRight: forEachRight_default,
  every: every_default,
  filter: filter_default,
  find: find_default,
  findLast: findLast_default,
  flatMap: flatMap_default,
  flatMapDeep: flatMapDeep_default,
  flatMapDepth: flatMapDepth_default,
  forEach: forEach_default,
  forEachRight: forEachRight_default,
  groupBy: groupBy_default,
  includes: includes_default,
  invokeMap: invokeMap_default,
  keyBy: keyBy_default,
  map: map_default,
  orderBy: orderBy_default,
  partition: partition_default,
  reduce: reduce_default,
  reduceRight: reduceRight_default,
  reject: reject_default,
  sample: sample_default,
  sampleSize: sampleSize_default,
  shuffle: shuffle_default,
  size: size_default,
  some: some_default,
  sortBy: sortBy_default
};

// node_modules/lodash-es/date.default.js
var date_default_default = {
  now: now_default
};

// node_modules/lodash-es/function.default.js
var function_default_default = {
  after: after_default,
  ary: ary_default,
  before: before_default,
  bind: bind_default,
  bindKey: bindKey_default,
  curry: curry_default,
  curryRight: curryRight_default,
  debounce: debounce_default,
  defer: defer_default,
  delay: delay_default,
  flip: flip_default,
  memoize: memoize_default,
  negate: negate_default,
  once: once_default,
  overArgs: overArgs_default,
  partial: partial_default,
  partialRight: partialRight_default,
  rearg: rearg_default,
  rest: rest_default,
  spread: spread_default,
  throttle: throttle_default,
  unary: unary_default,
  wrap: wrap_default
};

// node_modules/lodash-es/lang.default.js
var lang_default_default = {
  castArray: castArray_default,
  clone: clone_default,
  cloneDeep: cloneDeep_default,
  cloneDeepWith: cloneDeepWith_default,
  cloneWith: cloneWith_default,
  conformsTo: conformsTo_default,
  eq: eq_default,
  gt: gt_default,
  gte: gte_default,
  isArguments: isArguments_default,
  isArray: isArray_default,
  isArrayBuffer: isArrayBuffer_default,
  isArrayLike: isArrayLike_default,
  isArrayLikeObject: isArrayLikeObject_default,
  isBoolean: isBoolean_default,
  isBuffer: isBuffer_default,
  isDate: isDate_default,
  isElement: isElement_default,
  isEmpty: isEmpty_default,
  isEqual: isEqual_default,
  isEqualWith: isEqualWith_default,
  isError: isError_default,
  isFinite: isFinite_default,
  isFunction: isFunction_default,
  isInteger: isInteger_default,
  isLength: isLength_default,
  isMap: isMap_default,
  isMatch: isMatch_default,
  isMatchWith: isMatchWith_default,
  isNaN: isNaN_default,
  isNative: isNative_default,
  isNil: isNil_default,
  isNull: isNull_default,
  isNumber: isNumber_default,
  isObject: isObject_default,
  isObjectLike: isObjectLike_default,
  isPlainObject: isPlainObject_default,
  isRegExp: isRegExp_default,
  isSafeInteger: isSafeInteger_default,
  isSet: isSet_default,
  isString: isString_default,
  isSymbol: isSymbol_default,
  isTypedArray: isTypedArray_default,
  isUndefined: isUndefined_default,
  isWeakMap: isWeakMap_default,
  isWeakSet: isWeakSet_default,
  lt: lt_default,
  lte: lte_default,
  toArray: toArray_default,
  toFinite: toFinite_default,
  toInteger: toInteger_default,
  toLength: toLength_default,
  toNumber: toNumber_default,
  toPlainObject: toPlainObject_default,
  toSafeInteger: toSafeInteger_default,
  toString: toString_default
};

// node_modules/lodash-es/math.default.js
var math_default_default = {
  add: add_default,
  ceil: ceil_default,
  divide: divide_default,
  floor: floor_default,
  max: max_default,
  maxBy: maxBy_default,
  mean: mean_default,
  meanBy: meanBy_default,
  min: min_default,
  minBy: minBy_default,
  multiply: multiply_default,
  round: round_default,
  subtract: subtract_default,
  sum: sum_default,
  sumBy: sumBy_default
};

// node_modules/lodash-es/number.default.js
var number_default_default = {
  clamp: clamp_default,
  inRange: inRange_default,
  random: random_default
};

// node_modules/lodash-es/object.default.js
var object_default_default = {
  assign: assign_default,
  assignIn: assignIn_default,
  assignInWith: assignInWith_default,
  assignWith: assignWith_default,
  at: at_default,
  create: create_default,
  defaults: defaults_default,
  defaultsDeep: defaultsDeep_default,
  entries: toPairs_default,
  entriesIn: toPairsIn_default,
  extend: assignIn_default,
  extendWith: assignInWith_default,
  findKey: findKey_default,
  findLastKey: findLastKey_default,
  forIn: forIn_default,
  forInRight: forInRight_default,
  forOwn: forOwn_default,
  forOwnRight: forOwnRight_default,
  functions: functions_default,
  functionsIn: functionsIn_default,
  get: get_default,
  has: has_default,
  hasIn: hasIn_default,
  invert: invert_default,
  invertBy: invertBy_default,
  invoke: invoke_default,
  keys: keys_default,
  keysIn: keysIn_default,
  mapKeys: mapKeys_default,
  mapValues: mapValues_default,
  merge: merge_default,
  mergeWith: mergeWith_default,
  omit: omit_default,
  omitBy: omitBy_default,
  pick: pick_default,
  pickBy: pickBy_default,
  result: result_default,
  set: set_default,
  setWith: setWith_default,
  toPairs: toPairs_default,
  toPairsIn: toPairsIn_default,
  transform: transform_default,
  unset: unset_default,
  update: update_default,
  updateWith: updateWith_default,
  values: values_default,
  valuesIn: valuesIn_default
};

// node_modules/lodash-es/seq.default.js
var seq_default_default = {
  at: wrapperAt_default,
  chain: chain_default,
  commit: commit_default,
  lodash: wrapperLodash_default,
  next: next_default,
  plant: plant_default,
  reverse: wrapperReverse_default,
  tap: tap_default,
  thru: thru_default,
  toIterator: toIterator_default,
  toJSON: wrapperValue_default,
  value: wrapperValue_default,
  valueOf: wrapperValue_default,
  wrapperChain: wrapperChain_default
};

// node_modules/lodash-es/string.default.js
var string_default_default = {
  camelCase: camelCase_default,
  capitalize: capitalize_default,
  deburr: deburr_default,
  endsWith: endsWith_default,
  escape: escape_default,
  escapeRegExp: escapeRegExp_default,
  kebabCase: kebabCase_default,
  lowerCase: lowerCase_default,
  lowerFirst: lowerFirst_default,
  pad: pad_default,
  padEnd: padEnd_default,
  padStart: padStart_default,
  parseInt: parseInt_default,
  repeat: repeat_default,
  replace: replace_default,
  snakeCase: snakeCase_default,
  split: split_default,
  startCase: startCase_default,
  startsWith: startsWith_default,
  template: template_default,
  templateSettings: templateSettings_default,
  toLower: toLower_default,
  toUpper: toUpper_default,
  trim: trim_default,
  trimEnd: trimEnd_default,
  trimStart: trimStart_default,
  truncate: truncate_default,
  unescape: unescape_default,
  upperCase: upperCase_default,
  upperFirst: upperFirst_default,
  words: words_default
};

// node_modules/lodash-es/util.default.js
var util_default_default = {
  attempt: attempt_default,
  bindAll: bindAll_default,
  cond: cond_default,
  conforms: conforms_default,
  constant: constant_default,
  defaultTo: defaultTo_default,
  flow: flow_default,
  flowRight: flowRight_default,
  identity: identity_default,
  iteratee: iteratee_default,
  matches: matches_default,
  matchesProperty: matchesProperty_default,
  method: method_default,
  methodOf: methodOf_default,
  mixin: mixin_default,
  noop: noop_default,
  nthArg: nthArg_default,
  over: over_default,
  overEvery: overEvery_default,
  overSome: overSome_default,
  property: property_default,
  propertyOf: propertyOf_default,
  range: range_default,
  rangeRight: rangeRight_default,
  stubArray: stubArray_default,
  stubFalse: stubFalse_default,
  stubObject: stubObject_default,
  stubString: stubString_default,
  stubTrue: stubTrue_default,
  times: times_default,
  toPath: toPath_default,
  uniqueId: uniqueId_default
};

// node_modules/lodash-es/_lazyClone.js
function lazyClone() {
  var result2 = new LazyWrapper_default(this.__wrapped__);
  result2.__actions__ = copyArray_default(this.__actions__);
  result2.__dir__ = this.__dir__;
  result2.__filtered__ = this.__filtered__;
  result2.__iteratees__ = copyArray_default(this.__iteratees__);
  result2.__takeCount__ = this.__takeCount__;
  result2.__views__ = copyArray_default(this.__views__);
  return result2;
}
var lazyClone_default = lazyClone;

// node_modules/lodash-es/_lazyReverse.js
function lazyReverse() {
  if (this.__filtered__) {
    var result2 = new LazyWrapper_default(this);
    result2.__dir__ = -1;
    result2.__filtered__ = true;
  } else {
    result2 = this.clone();
    result2.__dir__ *= -1;
  }
  return result2;
}
var lazyReverse_default = lazyReverse;

// node_modules/lodash-es/_getView.js
var nativeMax16 = Math.max;
var nativeMin13 = Math.min;
function getView(start, end, transforms) {
  var index = -1, length = transforms.length;
  while (++index < length) {
    var data = transforms[index], size2 = data.size;
    switch (data.type) {
      case "drop":
        start += size2;
        break;
      case "dropRight":
        end -= size2;
        break;
      case "take":
        end = nativeMin13(end, start + size2);
        break;
      case "takeRight":
        start = nativeMax16(start, end - size2);
        break;
    }
  }
  return { "start": start, "end": end };
}
var getView_default = getView;

// node_modules/lodash-es/_lazyValue.js
var LAZY_FILTER_FLAG = 1;
var LAZY_MAP_FLAG = 2;
var nativeMin14 = Math.min;
function lazyValue() {
  var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray_default(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView_default(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin14(length, this.__takeCount__);
  if (!isArr || !isRight && arrLength == length && takeCount == length) {
    return baseWrapperValue_default(array, this.__actions__);
  }
  var result2 = [];
  outer:
    while (length-- && resIndex < takeCount) {
      index += dir;
      var iterIndex = -1, value = array[index];
      while (++iterIndex < iterLength) {
        var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed2 = iteratee2(value);
        if (type == LAZY_MAP_FLAG) {
          value = computed2;
        } else if (!computed2) {
          if (type == LAZY_FILTER_FLAG) {
            continue outer;
          } else {
            break outer;
          }
        }
      }
      result2[resIndex++] = value;
    }
  return result2;
}
var lazyValue_default = lazyValue;

// node_modules/lodash-es/lodash.default.js
var VERSION = "4.17.21";
var WRAP_BIND_KEY_FLAG7 = 2;
var LAZY_FILTER_FLAG2 = 1;
var LAZY_WHILE_FLAG = 3;
var MAX_ARRAY_LENGTH7 = 4294967295;
var arrayProto6 = Array.prototype;
var objectProto29 = Object.prototype;
var hasOwnProperty25 = objectProto29.hasOwnProperty;
var symIterator2 = Symbol_default ? Symbol_default.iterator : void 0;
var nativeMax17 = Math.max;
var nativeMin15 = Math.min;
var mixin2 = /* @__PURE__ */ function(func) {
  return function(object, source, options) {
    if (options == null) {
      var isObj = isObject_default(source), props = isObj && keys_default(source), methodNames = props && props.length && baseFunctions_default(source, props);
      if (!(methodNames ? methodNames.length : isObj)) {
        options = source;
        source = object;
        object = this;
      }
    }
    return func(object, source, options);
  };
}(mixin_default);
wrapperLodash_default.after = function_default_default.after;
wrapperLodash_default.ary = function_default_default.ary;
wrapperLodash_default.assign = object_default_default.assign;
wrapperLodash_default.assignIn = object_default_default.assignIn;
wrapperLodash_default.assignInWith = object_default_default.assignInWith;
wrapperLodash_default.assignWith = object_default_default.assignWith;
wrapperLodash_default.at = object_default_default.at;
wrapperLodash_default.before = function_default_default.before;
wrapperLodash_default.bind = function_default_default.bind;
wrapperLodash_default.bindAll = util_default_default.bindAll;
wrapperLodash_default.bindKey = function_default_default.bindKey;
wrapperLodash_default.castArray = lang_default_default.castArray;
wrapperLodash_default.chain = seq_default_default.chain;
wrapperLodash_default.chunk = array_default_default.chunk;
wrapperLodash_default.compact = array_default_default.compact;
wrapperLodash_default.concat = array_default_default.concat;
wrapperLodash_default.cond = util_default_default.cond;
wrapperLodash_default.conforms = util_default_default.conforms;
wrapperLodash_default.constant = util_default_default.constant;
wrapperLodash_default.countBy = collection_default_default.countBy;
wrapperLodash_default.create = object_default_default.create;
wrapperLodash_default.curry = function_default_default.curry;
wrapperLodash_default.curryRight = function_default_default.curryRight;
wrapperLodash_default.debounce = function_default_default.debounce;
wrapperLodash_default.defaults = object_default_default.defaults;
wrapperLodash_default.defaultsDeep = object_default_default.defaultsDeep;
wrapperLodash_default.defer = function_default_default.defer;
wrapperLodash_default.delay = function_default_default.delay;
wrapperLodash_default.difference = array_default_default.difference;
wrapperLodash_default.differenceBy = array_default_default.differenceBy;
wrapperLodash_default.differenceWith = array_default_default.differenceWith;
wrapperLodash_default.drop = array_default_default.drop;
wrapperLodash_default.dropRight = array_default_default.dropRight;
wrapperLodash_default.dropRightWhile = array_default_default.dropRightWhile;
wrapperLodash_default.dropWhile = array_default_default.dropWhile;
wrapperLodash_default.fill = array_default_default.fill;
wrapperLodash_default.filter = collection_default_default.filter;
wrapperLodash_default.flatMap = collection_default_default.flatMap;
wrapperLodash_default.flatMapDeep = collection_default_default.flatMapDeep;
wrapperLodash_default.flatMapDepth = collection_default_default.flatMapDepth;
wrapperLodash_default.flatten = array_default_default.flatten;
wrapperLodash_default.flattenDeep = array_default_default.flattenDeep;
wrapperLodash_default.flattenDepth = array_default_default.flattenDepth;
wrapperLodash_default.flip = function_default_default.flip;
wrapperLodash_default.flow = util_default_default.flow;
wrapperLodash_default.flowRight = util_default_default.flowRight;
wrapperLodash_default.fromPairs = array_default_default.fromPairs;
wrapperLodash_default.functions = object_default_default.functions;
wrapperLodash_default.functionsIn = object_default_default.functionsIn;
wrapperLodash_default.groupBy = collection_default_default.groupBy;
wrapperLodash_default.initial = array_default_default.initial;
wrapperLodash_default.intersection = array_default_default.intersection;
wrapperLodash_default.intersectionBy = array_default_default.intersectionBy;
wrapperLodash_default.intersectionWith = array_default_default.intersectionWith;
wrapperLodash_default.invert = object_default_default.invert;
wrapperLodash_default.invertBy = object_default_default.invertBy;
wrapperLodash_default.invokeMap = collection_default_default.invokeMap;
wrapperLodash_default.iteratee = util_default_default.iteratee;
wrapperLodash_default.keyBy = collection_default_default.keyBy;
wrapperLodash_default.keys = keys_default;
wrapperLodash_default.keysIn = object_default_default.keysIn;
wrapperLodash_default.map = collection_default_default.map;
wrapperLodash_default.mapKeys = object_default_default.mapKeys;
wrapperLodash_default.mapValues = object_default_default.mapValues;
wrapperLodash_default.matches = util_default_default.matches;
wrapperLodash_default.matchesProperty = util_default_default.matchesProperty;
wrapperLodash_default.memoize = function_default_default.memoize;
wrapperLodash_default.merge = object_default_default.merge;
wrapperLodash_default.mergeWith = object_default_default.mergeWith;
wrapperLodash_default.method = util_default_default.method;
wrapperLodash_default.methodOf = util_default_default.methodOf;
wrapperLodash_default.mixin = mixin2;
wrapperLodash_default.negate = negate_default;
wrapperLodash_default.nthArg = util_default_default.nthArg;
wrapperLodash_default.omit = object_default_default.omit;
wrapperLodash_default.omitBy = object_default_default.omitBy;
wrapperLodash_default.once = function_default_default.once;
wrapperLodash_default.orderBy = collection_default_default.orderBy;
wrapperLodash_default.over = util_default_default.over;
wrapperLodash_default.overArgs = function_default_default.overArgs;
wrapperLodash_default.overEvery = util_default_default.overEvery;
wrapperLodash_default.overSome = util_default_default.overSome;
wrapperLodash_default.partial = function_default_default.partial;
wrapperLodash_default.partialRight = function_default_default.partialRight;
wrapperLodash_default.partition = collection_default_default.partition;
wrapperLodash_default.pick = object_default_default.pick;
wrapperLodash_default.pickBy = object_default_default.pickBy;
wrapperLodash_default.property = util_default_default.property;
wrapperLodash_default.propertyOf = util_default_default.propertyOf;
wrapperLodash_default.pull = array_default_default.pull;
wrapperLodash_default.pullAll = array_default_default.pullAll;
wrapperLodash_default.pullAllBy = array_default_default.pullAllBy;
wrapperLodash_default.pullAllWith = array_default_default.pullAllWith;
wrapperLodash_default.pullAt = array_default_default.pullAt;
wrapperLodash_default.range = util_default_default.range;
wrapperLodash_default.rangeRight = util_default_default.rangeRight;
wrapperLodash_default.rearg = function_default_default.rearg;
wrapperLodash_default.reject = collection_default_default.reject;
wrapperLodash_default.remove = array_default_default.remove;
wrapperLodash_default.rest = function_default_default.rest;
wrapperLodash_default.reverse = array_default_default.reverse;
wrapperLodash_default.sampleSize = collection_default_default.sampleSize;
wrapperLodash_default.set = object_default_default.set;
wrapperLodash_default.setWith = object_default_default.setWith;
wrapperLodash_default.shuffle = collection_default_default.shuffle;
wrapperLodash_default.slice = array_default_default.slice;
wrapperLodash_default.sortBy = collection_default_default.sortBy;
wrapperLodash_default.sortedUniq = array_default_default.sortedUniq;
wrapperLodash_default.sortedUniqBy = array_default_default.sortedUniqBy;
wrapperLodash_default.split = string_default_default.split;
wrapperLodash_default.spread = function_default_default.spread;
wrapperLodash_default.tail = array_default_default.tail;
wrapperLodash_default.take = array_default_default.take;
wrapperLodash_default.takeRight = array_default_default.takeRight;
wrapperLodash_default.takeRightWhile = array_default_default.takeRightWhile;
wrapperLodash_default.takeWhile = array_default_default.takeWhile;
wrapperLodash_default.tap = seq_default_default.tap;
wrapperLodash_default.throttle = function_default_default.throttle;
wrapperLodash_default.thru = thru_default;
wrapperLodash_default.toArray = lang_default_default.toArray;
wrapperLodash_default.toPairs = object_default_default.toPairs;
wrapperLodash_default.toPairsIn = object_default_default.toPairsIn;
wrapperLodash_default.toPath = util_default_default.toPath;
wrapperLodash_default.toPlainObject = lang_default_default.toPlainObject;
wrapperLodash_default.transform = object_default_default.transform;
wrapperLodash_default.unary = function_default_default.unary;
wrapperLodash_default.union = array_default_default.union;
wrapperLodash_default.unionBy = array_default_default.unionBy;
wrapperLodash_default.unionWith = array_default_default.unionWith;
wrapperLodash_default.uniq = array_default_default.uniq;
wrapperLodash_default.uniqBy = array_default_default.uniqBy;
wrapperLodash_default.uniqWith = array_default_default.uniqWith;
wrapperLodash_default.unset = object_default_default.unset;
wrapperLodash_default.unzip = array_default_default.unzip;
wrapperLodash_default.unzipWith = array_default_default.unzipWith;
wrapperLodash_default.update = object_default_default.update;
wrapperLodash_default.updateWith = object_default_default.updateWith;
wrapperLodash_default.values = object_default_default.values;
wrapperLodash_default.valuesIn = object_default_default.valuesIn;
wrapperLodash_default.without = array_default_default.without;
wrapperLodash_default.words = string_default_default.words;
wrapperLodash_default.wrap = function_default_default.wrap;
wrapperLodash_default.xor = array_default_default.xor;
wrapperLodash_default.xorBy = array_default_default.xorBy;
wrapperLodash_default.xorWith = array_default_default.xorWith;
wrapperLodash_default.zip = array_default_default.zip;
wrapperLodash_default.zipObject = array_default_default.zipObject;
wrapperLodash_default.zipObjectDeep = array_default_default.zipObjectDeep;
wrapperLodash_default.zipWith = array_default_default.zipWith;
wrapperLodash_default.entries = object_default_default.toPairs;
wrapperLodash_default.entriesIn = object_default_default.toPairsIn;
wrapperLodash_default.extend = object_default_default.assignIn;
wrapperLodash_default.extendWith = object_default_default.assignInWith;
mixin2(wrapperLodash_default, wrapperLodash_default);
wrapperLodash_default.add = math_default_default.add;
wrapperLodash_default.attempt = util_default_default.attempt;
wrapperLodash_default.camelCase = string_default_default.camelCase;
wrapperLodash_default.capitalize = string_default_default.capitalize;
wrapperLodash_default.ceil = math_default_default.ceil;
wrapperLodash_default.clamp = number_default_default.clamp;
wrapperLodash_default.clone = lang_default_default.clone;
wrapperLodash_default.cloneDeep = lang_default_default.cloneDeep;
wrapperLodash_default.cloneDeepWith = lang_default_default.cloneDeepWith;
wrapperLodash_default.cloneWith = lang_default_default.cloneWith;
wrapperLodash_default.conformsTo = lang_default_default.conformsTo;
wrapperLodash_default.deburr = string_default_default.deburr;
wrapperLodash_default.defaultTo = util_default_default.defaultTo;
wrapperLodash_default.divide = math_default_default.divide;
wrapperLodash_default.endsWith = string_default_default.endsWith;
wrapperLodash_default.eq = lang_default_default.eq;
wrapperLodash_default.escape = string_default_default.escape;
wrapperLodash_default.escapeRegExp = string_default_default.escapeRegExp;
wrapperLodash_default.every = collection_default_default.every;
wrapperLodash_default.find = collection_default_default.find;
wrapperLodash_default.findIndex = array_default_default.findIndex;
wrapperLodash_default.findKey = object_default_default.findKey;
wrapperLodash_default.findLast = collection_default_default.findLast;
wrapperLodash_default.findLastIndex = array_default_default.findLastIndex;
wrapperLodash_default.findLastKey = object_default_default.findLastKey;
wrapperLodash_default.floor = math_default_default.floor;
wrapperLodash_default.forEach = collection_default_default.forEach;
wrapperLodash_default.forEachRight = collection_default_default.forEachRight;
wrapperLodash_default.forIn = object_default_default.forIn;
wrapperLodash_default.forInRight = object_default_default.forInRight;
wrapperLodash_default.forOwn = object_default_default.forOwn;
wrapperLodash_default.forOwnRight = object_default_default.forOwnRight;
wrapperLodash_default.get = object_default_default.get;
wrapperLodash_default.gt = lang_default_default.gt;
wrapperLodash_default.gte = lang_default_default.gte;
wrapperLodash_default.has = object_default_default.has;
wrapperLodash_default.hasIn = object_default_default.hasIn;
wrapperLodash_default.head = array_default_default.head;
wrapperLodash_default.identity = identity_default;
wrapperLodash_default.includes = collection_default_default.includes;
wrapperLodash_default.indexOf = array_default_default.indexOf;
wrapperLodash_default.inRange = number_default_default.inRange;
wrapperLodash_default.invoke = object_default_default.invoke;
wrapperLodash_default.isArguments = lang_default_default.isArguments;
wrapperLodash_default.isArray = isArray_default;
wrapperLodash_default.isArrayBuffer = lang_default_default.isArrayBuffer;
wrapperLodash_default.isArrayLike = lang_default_default.isArrayLike;
wrapperLodash_default.isArrayLikeObject = lang_default_default.isArrayLikeObject;
wrapperLodash_default.isBoolean = lang_default_default.isBoolean;
wrapperLodash_default.isBuffer = lang_default_default.isBuffer;
wrapperLodash_default.isDate = lang_default_default.isDate;
wrapperLodash_default.isElement = lang_default_default.isElement;
wrapperLodash_default.isEmpty = lang_default_default.isEmpty;
wrapperLodash_default.isEqual = lang_default_default.isEqual;
wrapperLodash_default.isEqualWith = lang_default_default.isEqualWith;
wrapperLodash_default.isError = lang_default_default.isError;
wrapperLodash_default.isFinite = lang_default_default.isFinite;
wrapperLodash_default.isFunction = lang_default_default.isFunction;
wrapperLodash_default.isInteger = lang_default_default.isInteger;
wrapperLodash_default.isLength = lang_default_default.isLength;
wrapperLodash_default.isMap = lang_default_default.isMap;
wrapperLodash_default.isMatch = lang_default_default.isMatch;
wrapperLodash_default.isMatchWith = lang_default_default.isMatchWith;
wrapperLodash_default.isNaN = lang_default_default.isNaN;
wrapperLodash_default.isNative = lang_default_default.isNative;
wrapperLodash_default.isNil = lang_default_default.isNil;
wrapperLodash_default.isNull = lang_default_default.isNull;
wrapperLodash_default.isNumber = lang_default_default.isNumber;
wrapperLodash_default.isObject = isObject_default;
wrapperLodash_default.isObjectLike = lang_default_default.isObjectLike;
wrapperLodash_default.isPlainObject = lang_default_default.isPlainObject;
wrapperLodash_default.isRegExp = lang_default_default.isRegExp;
wrapperLodash_default.isSafeInteger = lang_default_default.isSafeInteger;
wrapperLodash_default.isSet = lang_default_default.isSet;
wrapperLodash_default.isString = lang_default_default.isString;
wrapperLodash_default.isSymbol = lang_default_default.isSymbol;
wrapperLodash_default.isTypedArray = lang_default_default.isTypedArray;
wrapperLodash_default.isUndefined = lang_default_default.isUndefined;
wrapperLodash_default.isWeakMap = lang_default_default.isWeakMap;
wrapperLodash_default.isWeakSet = lang_default_default.isWeakSet;
wrapperLodash_default.join = array_default_default.join;
wrapperLodash_default.kebabCase = string_default_default.kebabCase;
wrapperLodash_default.last = last_default;
wrapperLodash_default.lastIndexOf = array_default_default.lastIndexOf;
wrapperLodash_default.lowerCase = string_default_default.lowerCase;
wrapperLodash_default.lowerFirst = string_default_default.lowerFirst;
wrapperLodash_default.lt = lang_default_default.lt;
wrapperLodash_default.lte = lang_default_default.lte;
wrapperLodash_default.max = math_default_default.max;
wrapperLodash_default.maxBy = math_default_default.maxBy;
wrapperLodash_default.mean = math_default_default.mean;
wrapperLodash_default.meanBy = math_default_default.meanBy;
wrapperLodash_default.min = math_default_default.min;
wrapperLodash_default.minBy = math_default_default.minBy;
wrapperLodash_default.stubArray = util_default_default.stubArray;
wrapperLodash_default.stubFalse = util_default_default.stubFalse;
wrapperLodash_default.stubObject = util_default_default.stubObject;
wrapperLodash_default.stubString = util_default_default.stubString;
wrapperLodash_default.stubTrue = util_default_default.stubTrue;
wrapperLodash_default.multiply = math_default_default.multiply;
wrapperLodash_default.nth = array_default_default.nth;
wrapperLodash_default.noop = util_default_default.noop;
wrapperLodash_default.now = date_default_default.now;
wrapperLodash_default.pad = string_default_default.pad;
wrapperLodash_default.padEnd = string_default_default.padEnd;
wrapperLodash_default.padStart = string_default_default.padStart;
wrapperLodash_default.parseInt = string_default_default.parseInt;
wrapperLodash_default.random = number_default_default.random;
wrapperLodash_default.reduce = collection_default_default.reduce;
wrapperLodash_default.reduceRight = collection_default_default.reduceRight;
wrapperLodash_default.repeat = string_default_default.repeat;
wrapperLodash_default.replace = string_default_default.replace;
wrapperLodash_default.result = object_default_default.result;
wrapperLodash_default.round = math_default_default.round;
wrapperLodash_default.sample = collection_default_default.sample;
wrapperLodash_default.size = collection_default_default.size;
wrapperLodash_default.snakeCase = string_default_default.snakeCase;
wrapperLodash_default.some = collection_default_default.some;
wrapperLodash_default.sortedIndex = array_default_default.sortedIndex;
wrapperLodash_default.sortedIndexBy = array_default_default.sortedIndexBy;
wrapperLodash_default.sortedIndexOf = array_default_default.sortedIndexOf;
wrapperLodash_default.sortedLastIndex = array_default_default.sortedLastIndex;
wrapperLodash_default.sortedLastIndexBy = array_default_default.sortedLastIndexBy;
wrapperLodash_default.sortedLastIndexOf = array_default_default.sortedLastIndexOf;
wrapperLodash_default.startCase = string_default_default.startCase;
wrapperLodash_default.startsWith = string_default_default.startsWith;
wrapperLodash_default.subtract = math_default_default.subtract;
wrapperLodash_default.sum = math_default_default.sum;
wrapperLodash_default.sumBy = math_default_default.sumBy;
wrapperLodash_default.template = string_default_default.template;
wrapperLodash_default.times = util_default_default.times;
wrapperLodash_default.toFinite = lang_default_default.toFinite;
wrapperLodash_default.toInteger = toInteger_default;
wrapperLodash_default.toLength = lang_default_default.toLength;
wrapperLodash_default.toLower = string_default_default.toLower;
wrapperLodash_default.toNumber = lang_default_default.toNumber;
wrapperLodash_default.toSafeInteger = lang_default_default.toSafeInteger;
wrapperLodash_default.toString = lang_default_default.toString;
wrapperLodash_default.toUpper = string_default_default.toUpper;
wrapperLodash_default.trim = string_default_default.trim;
wrapperLodash_default.trimEnd = string_default_default.trimEnd;
wrapperLodash_default.trimStart = string_default_default.trimStart;
wrapperLodash_default.truncate = string_default_default.truncate;
wrapperLodash_default.unescape = string_default_default.unescape;
wrapperLodash_default.uniqueId = util_default_default.uniqueId;
wrapperLodash_default.upperCase = string_default_default.upperCase;
wrapperLodash_default.upperFirst = string_default_default.upperFirst;
wrapperLodash_default.each = collection_default_default.forEach;
wrapperLodash_default.eachRight = collection_default_default.forEachRight;
wrapperLodash_default.first = array_default_default.head;
mixin2(wrapperLodash_default, function() {
  var source = {};
  baseForOwn_default(wrapperLodash_default, function(func, methodName) {
    if (!hasOwnProperty25.call(wrapperLodash_default.prototype, methodName)) {
      source[methodName] = func;
    }
  });
  return source;
}(), { "chain": false });
wrapperLodash_default.VERSION = VERSION;
(wrapperLodash_default.templateSettings = string_default_default.templateSettings).imports._ = wrapperLodash_default;
arrayEach_default(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
  wrapperLodash_default[methodName].placeholder = wrapperLodash_default;
});
arrayEach_default(["drop", "take"], function(methodName, index) {
  LazyWrapper_default.prototype[methodName] = function(n) {
    n = n === void 0 ? 1 : nativeMax17(toInteger_default(n), 0);
    var result2 = this.__filtered__ && !index ? new LazyWrapper_default(this) : this.clone();
    if (result2.__filtered__) {
      result2.__takeCount__ = nativeMin15(n, result2.__takeCount__);
    } else {
      result2.__views__.push({
        "size": nativeMin15(n, MAX_ARRAY_LENGTH7),
        "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
      });
    }
    return result2;
  };
  LazyWrapper_default.prototype[methodName + "Right"] = function(n) {
    return this.reverse()[methodName](n).reverse();
  };
});
arrayEach_default(["filter", "map", "takeWhile"], function(methodName, index) {
  var type = index + 1, isFilter = type == LAZY_FILTER_FLAG2 || type == LAZY_WHILE_FLAG;
  LazyWrapper_default.prototype[methodName] = function(iteratee2) {
    var result2 = this.clone();
    result2.__iteratees__.push({
      "iteratee": baseIteratee_default(iteratee2, 3),
      "type": type
    });
    result2.__filtered__ = result2.__filtered__ || isFilter;
    return result2;
  };
});
arrayEach_default(["head", "last"], function(methodName, index) {
  var takeName = "take" + (index ? "Right" : "");
  LazyWrapper_default.prototype[methodName] = function() {
    return this[takeName](1).value()[0];
  };
});
arrayEach_default(["initial", "tail"], function(methodName, index) {
  var dropName = "drop" + (index ? "" : "Right");
  LazyWrapper_default.prototype[methodName] = function() {
    return this.__filtered__ ? new LazyWrapper_default(this) : this[dropName](1);
  };
});
LazyWrapper_default.prototype.compact = function() {
  return this.filter(identity_default);
};
LazyWrapper_default.prototype.find = function(predicate) {
  return this.filter(predicate).head();
};
LazyWrapper_default.prototype.findLast = function(predicate) {
  return this.reverse().find(predicate);
};
LazyWrapper_default.prototype.invokeMap = baseRest_default(function(path, args) {
  if (typeof path == "function") {
    return new LazyWrapper_default(this);
  }
  return this.map(function(value) {
    return baseInvoke_default(value, path, args);
  });
});
LazyWrapper_default.prototype.reject = function(predicate) {
  return this.filter(negate_default(baseIteratee_default(predicate)));
};
LazyWrapper_default.prototype.slice = function(start, end) {
  start = toInteger_default(start);
  var result2 = this;
  if (result2.__filtered__ && (start > 0 || end < 0)) {
    return new LazyWrapper_default(result2);
  }
  if (start < 0) {
    result2 = result2.takeRight(-start);
  } else if (start) {
    result2 = result2.drop(start);
  }
  if (end !== void 0) {
    end = toInteger_default(end);
    result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
  }
  return result2;
};
LazyWrapper_default.prototype.takeRightWhile = function(predicate) {
  return this.reverse().takeWhile(predicate).reverse();
};
LazyWrapper_default.prototype.toArray = function() {
  return this.take(MAX_ARRAY_LENGTH7);
};
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = wrapperLodash_default[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
  if (!lodashFunc) {
    return;
  }
  wrapperLodash_default.prototype[methodName] = function() {
    var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper_default, iteratee2 = args[0], useLazy = isLazy || isArray_default(value);
    var interceptor = function(value2) {
      var result3 = lodashFunc.apply(wrapperLodash_default, arrayPush_default([value2], args));
      return isTaker && chainAll ? result3[0] : result3;
    };
    if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
      isLazy = useLazy = false;
    }
    var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
    if (!retUnwrapped && useLazy) {
      value = onlyLazy ? value : new LazyWrapper_default(this);
      var result2 = func.apply(value, args);
      result2.__actions__.push({ "func": thru_default, "args": [interceptor], "thisArg": void 0 });
      return new LodashWrapper_default(result2, chainAll);
    }
    if (isUnwrapped && onlyLazy) {
      return func.apply(this, args);
    }
    result2 = this.thru(interceptor);
    return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
  };
});
arrayEach_default(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
  var func = arrayProto6[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
  wrapperLodash_default.prototype[methodName] = function() {
    var args = arguments;
    if (retUnwrapped && !this.__chain__) {
      var value = this.value();
      return func.apply(isArray_default(value) ? value : [], args);
    }
    return this[chainName](function(value2) {
      return func.apply(isArray_default(value2) ? value2 : [], args);
    });
  };
});
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var lodashFunc = wrapperLodash_default[methodName];
  if (lodashFunc) {
    var key = lodashFunc.name + "";
    if (!hasOwnProperty25.call(realNames_default, key)) {
      realNames_default[key] = [];
    }
    realNames_default[key].push({ "name": methodName, "func": lodashFunc });
  }
});
realNames_default[createHybrid_default(void 0, WRAP_BIND_KEY_FLAG7).name] = [{
  "name": "wrapper",
  "func": void 0
}];
LazyWrapper_default.prototype.clone = lazyClone_default;
LazyWrapper_default.prototype.reverse = lazyReverse_default;
LazyWrapper_default.prototype.value = lazyValue_default;
wrapperLodash_default.prototype.at = seq_default_default.at;
wrapperLodash_default.prototype.chain = seq_default_default.wrapperChain;
wrapperLodash_default.prototype.commit = seq_default_default.commit;
wrapperLodash_default.prototype.next = seq_default_default.next;
wrapperLodash_default.prototype.plant = seq_default_default.plant;
wrapperLodash_default.prototype.reverse = seq_default_default.reverse;
wrapperLodash_default.prototype.toJSON = wrapperLodash_default.prototype.valueOf = wrapperLodash_default.prototype.value = seq_default_default.value;
wrapperLodash_default.prototype.first = wrapperLodash_default.prototype.head;
if (symIterator2) {
  wrapperLodash_default.prototype[symIterator2] = seq_default_default.toIterator;
}

// node_modules/v-network-graph/lib/index.js
var Lo = Object.defineProperty;
var Ao = Object.defineProperties;
var Zo = Object.getOwnPropertyDescriptors;
var an = Object.getOwnPropertySymbols;
var Do = Object.prototype.hasOwnProperty;
var No = Object.prototype.propertyIsEnumerable;
var ae = Math.pow;
var ln = (e, t, n) => t in e ? Lo(e, t, { enumerable: true, configurable: true, writable: true, value: n }) : e[t] = n;
var se = (e, t) => {
  for (var n in t || (t = {}))
    Do.call(t, n) && ln(e, n, t[n]);
  if (an)
    for (var n of an(t))
      No.call(t, n) && ln(e, n, t[n]);
  return e;
};
var qe = (e, t) => Ao(e, Zo(t));
var Ee = (e, t, n) => new Promise((o, i) => {
  var s = (l) => {
    try {
      a(n.next(l));
    } catch (u) {
      i(u);
    }
  }, r = (l) => {
    try {
      a(n.throw(l));
    } catch (u) {
      i(u);
    }
  }, a = (l) => l.done ? o(l.value) : Promise.resolve(l.value).then(s, r);
  a((n = n.apply(e, t)).next());
});
var Uo = [
  "paths",
  "node-labels",
  "nodes",
  "focusring",
  "edge-labels",
  "edges",
  "base",
  "grid",
  "background",
  "root"
];
function Ie(e) {
  return isReactive(e) ? e : reactive(e);
}
function q(e, t = "Parameter") {
  if (e == null)
    throw new Error(`${t} is null`);
  return e;
}
var In = Symbol("containers");
function Xo(e) {
  provide(In, e);
}
function Vt() {
  const e = q(inject(In), "containers");
  return {
    container: e.container,
    svg: e.svg,
    viewport: e.viewport,
    svgPanZoom: e.svgPanZoom
  };
}
var $ = class {
  static value(t, n) {
    return t instanceof Function ? t(n) : t;
  }
  static values(t, n) {
    return Object.values(t).filter((o) => o instanceof Function).length === 0 ? t : Object.fromEntries(
      Object.entries(t).map(([o, i]) => [o, i instanceof Function ? i(n) : i])
    );
  }
};
var N = ((e) => (e.CENTER = "center", e.NORTH = "north", e.NORTH_EAST = "north-east", e.EAST = "east", e.SOUTH_EAST = "south-east", e.SOUTH = "south", e.SOUTH_WEST = "south-west", e.WEST = "west", e.NORTH_WEST = "north-west", e))(N || {});
function Ct(e) {
  const t = {};
  return Object.assign(t, e(t));
}
function Qr(e) {
  return e;
}
function Jr(e) {
  return e;
}
function dn(e, t, n) {
  const o = $.values(t.normal, e);
  return o.type == "circle" ? {
    width: o.radius * 2 * n,
    height: o.radius * 2 * n
  } : {
    width: o.width * n,
    height: o.height * n
  };
}
function qo(e, t, n, o) {
  const s = Math.abs(e.x - n.x) < t.width / 2 + o.width / 2, a = Math.abs(e.y - n.y) < t.height / 2 + o.height / 2;
  return s && a;
}
function ot(e, t) {
  let n = 0;
  return t === 1 || e === void 0 || e === "none" ? n = e != null ? e : 0 : typeof e == "string" ? n = e.split(/\s+/).map((o) => parseInt(o) * t).filter((o) => !isNaN(o)).join(" ") : n = e * t, n && n !== "0" ? n : void 0;
}
function gt2(e) {
  let t = 0;
  if (e === void 0 || e === "none")
    t = 0;
  else if (typeof e == "string") {
    const n = e.split(/\s+/).map((o) => parseInt(o)).filter((o) => !isNaN(o));
    n.length % 2 === 0 ? t = n.reduce((o, i) => o + i, 0) : t = n.reduce((o, i) => o + i, 0) * 2;
  } else
    t = e * 2;
  return t;
}
var fn = 20;
var $n = class {
  activate(t) {
    const { nodePositions: n, nodes: o, configs: i, emitter: s, scale: r, svgPanZoom: a } = t, l = (d) => {
      for (const [h, v] of Object.entries(d)) {
        const E = this.getOrCreateNodePosition(n, h);
        this.setNodePosition(E, v);
      }
    }, u = (d) => {
      const h = d.filter((x) => !(x in n.value)), v = a.getViewArea(), E = r.value;
      for (const x of h) {
        const w = o.value[x], g = dn(w, i.node, E), y = se({}, v.center);
        for (; ; ) {
          let m = false;
          for (const [f, p] of Object.entries(n.value)) {
            if (x === f) continue;
            const S = o.value[f];
            if (!S) continue;
            const O = dn(S, i.node, E);
            if (m = qo(y, g, p, O), m)
              break;
          }
          if (m)
            y.x += g.width + fn * E, y.x + g.width / 2 > v.box.right && (y.x = v.center.x, y.y += g.height + fn * E);
          else
            break;
        }
        const k = this.getOrCreateNodePosition(n, x);
        this.setNodePosition(k, y);
      }
    };
    u(Object.keys(o.value));
    const c = watch(
      () => isEqual_default(new Set(Object.keys(o.value)), new Set(Object.keys(n.value))),
      (d) => {
        d || u(Object.keys(o.value));
      }
    );
    s.on("node:dragstart", l), s.on("node:pointermove", l), s.on("node:dragend", l), this.onDeactivate = () => {
      c(), s.off("node:dragstart", l), s.off("node:pointermove", l), s.off("node:dragend", l);
    };
  }
  deactivate() {
    this.onDeactivate && this.onDeactivate();
  }
  setNodePosition(t, n) {
    t.value.x = round_default(n.x, 3), t.value.y = round_default(n.y, 3);
  }
  getOrCreateNodePosition(t, n) {
    const o = toRef(t.value, n);
    return o.value || (o.value = { x: 0, y: 0 }), o;
  }
};
function Ln() {
  return {
    view: {
      scalingObjects: false,
      panEnabled: true,
      zoomEnabled: true,
      minZoomLevel: 0.1,
      maxZoomLevel: 64,
      doubleClickZoomEnabled: true,
      mouseWheelZoomEnabled: true,
      boxSelectionEnabled: false,
      autoPanAndZoomOnLoad: "center-content",
      fitContentMargin: "8%",
      autoPanOnResize: true,
      layoutHandler: new $n(),
      onSvgPanZoomInitialized: void 0,
      grid: {
        visible: false,
        interval: 10,
        thickIncrements: 5,
        line: {
          color: "#e0e0e0",
          width: 1,
          dasharray: 1
        },
        thick: {
          color: "#cccccc",
          width: 1,
          dasharray: 0
        }
      },
      selection: {
        box: {
          color: "#0000ff20",
          strokeWidth: 1,
          strokeColor: "#aaaaff",
          strokeDasharray: 0
        },
        detector: (e) => {
          const t = /Mac OS/.test(navigator.userAgent) ? e.metaKey : e.ctrlKey;
          return e.type === "keydown" ? t : !t;
        }
      },
      builtInLayerOrder: [],
      onBeforeInitialDisplay: void 0
    },
    node: Ct((e) => ({
      normal: {
        type: "circle",
        radius: 16,
        // for rect -->
        width: 32,
        height: 32,
        borderRadius: 4,
        // <-- for rect
        color: "#4466cc",
        strokeWidth: 0,
        strokeColor: "#000000",
        strokeDasharray: 0
      },
      hover: {
        type: (t) => $.value(e.normal.type, t),
        radius: (t) => {
          var n;
          return ((n = $.value(e.normal.radius, t)) != null ? n : 0) + 2;
        },
        width: (t) => {
          var n;
          return ((n = $.value(e.normal.width, t)) != null ? n : 0) + 2;
        },
        height: (t) => {
          var n;
          return ((n = $.value(e.normal.height, t)) != null ? n : 0) + 2;
        },
        borderRadius: (t) => {
          var n;
          return (n = $.value(e.normal.borderRadius, t)) != null ? n : 0;
        },
        strokeWidth: (t) => $.value(e.normal.strokeWidth, t),
        strokeColor: (t) => $.value(e.normal.strokeColor, t),
        strokeDasharray: (t) => $.value(e.normal.strokeDasharray, t),
        color: "#3355bb"
      },
      selected: void 0,
      draggable: true,
      selectable: false,
      label: {
        visible: true,
        fontFamily: void 0,
        fontSize: 11,
        lineHeight: 1.1,
        color: "#000000",
        background: void 0,
        // background: {
        //   visible: true,
        //   color: "#ffffff",
        //   padding: {
        //     vertical: 1,
        //     horizontal: 4,
        //   },
        //   borderRadius: 2
        // },
        margin: 4,
        direction: N.SOUTH,
        directionAutoAdjustment: false,
        text: "name",
        handleNodeEvents: true
      },
      focusring: {
        visible: true,
        width: 4,
        padding: 3,
        color: "#eebb00"
      },
      zOrder: {
        enabled: false,
        zIndex: 0,
        bringToFrontOnHover: true,
        bringToFrontOnSelected: true
      },
      transition: void 0
    })),
    edge: Ct((e) => ({
      normal: {
        width: 2,
        color: "#4466cc",
        dasharray: 0,
        linecap: "butt",
        animate: false,
        animationSpeed: 50
      },
      hover: {
        width: (t) => $.value(e.normal.width, t) + 1,
        color: "#3355bb",
        dasharray: (t) => $.value(e.normal.dasharray, t),
        linecap: (t) => $.value(e.normal.linecap, t),
        animate: (t) => $.value(e.normal.animate, t),
        animationSpeed: (t) => $.value(e.normal.animationSpeed, t)
      },
      selected: {
        width: (t) => $.value(e.normal.width, t) + 1,
        color: "#dd8800",
        dasharray: (t) => {
          const n = $.value(e.normal.width, t);
          return `${n * 1.5} ${n * 2}`;
        },
        linecap: (t) => $.value(e.normal.linecap, t),
        animate: (t) => $.value(e.normal.animate, t),
        animationSpeed: (t) => $.value(e.normal.animationSpeed, t)
      },
      selectable: false,
      gap: 3,
      type: "straight",
      marker: {
        source: {
          type: "none",
          width: 5,
          height: 5,
          margin: -1,
          offset: 0,
          units: "strokeWidth",
          color: null
        },
        target: {
          type: "none",
          width: 5,
          height: 5,
          margin: -1,
          offset: 0,
          units: "strokeWidth",
          color: null
        }
      },
      margin: null,
      summarize: (t, n) => n.edge.type == "curve" ? false : null,
      summarized: {
        label: {
          fontSize: 10,
          lineHeight: 1,
          color: "#4466cc"
        },
        shape: {
          type: "rect",
          // for circle -->
          radius: 6,
          // <-- for circle
          width: 12,
          height: 12,
          borderRadius: 3,
          color: "#ffffff",
          strokeWidth: 1,
          strokeColor: "#4466cc",
          strokeDasharray: void 0
        },
        stroke: {
          width: 5,
          color: "#4466cc",
          dasharray: void 0,
          linecap: void 0,
          animate: false,
          animationSpeed: 50
        }
      },
      selfLoop: {
        radius: 12,
        isClockwise: true,
        offset: 10,
        angle: 270
      },
      keepOrder: "clock",
      label: {
        fontFamily: void 0,
        fontSize: 11,
        lineHeight: 1.1,
        color: "#000000",
        background: void 0,
        // background: {
        //   visible: true,
        //   color: "#ffffff",
        //   padding: {
        //     vertical: 1,
        //     horizontal: 4,
        //   },
        //   borderRadius: 2
        // },
        margin: 4,
        padding: 4
      },
      zOrder: {
        enabled: false,
        zIndex: 0,
        bringToFrontOnHover: true,
        bringToFrontOnSelected: true
      }
    })),
    path: Ct((e) => ({
      visible: false,
      clickable: false,
      hoverable: false,
      curveInNode: false,
      end: "centerOfNode",
      margin: 0,
      // @Deprecated
      path: reactive({
        width: 6,
        color: (t) => {
          const n = [
            "#d5000088",
            "#c5116288",
            "#aa00ff88",
            "#6200ea88",
            "#304ffe88",
            "#2962ff88",
            "#0091ea88",
            "#00b8d488",
            "#00bfa588",
            "#00c85388",
            "#64dd1788",
            "#aeea0088",
            "#ffd60088",
            "#ffab0088",
            "#ff6d0088",
            "#dd2c0088"
          ], o = t.edges.map(
            (i) => i.split("").reduce((s, r) => (s = (s << 5) - s + r.charCodeAt(0), s & s), 0)
          ).reduce((i, s) => i + s, 0);
          return n[Math.abs(o) % n.length];
        },
        dasharray: void 0,
        linecap: "round",
        linejoin: "round",
        animate: false,
        animationSpeed: 50
      }),
      normal: {
        width: (t) => $.value(e.path.width, t),
        color: (t) => $.value(e.path.color, t),
        dasharray: (t) => $.value(e.path.dasharray, t),
        linecap: (t) => $.value(e.path.linecap, t),
        linejoin: (t) => $.value(e.path.linejoin, t),
        animate: (t) => $.value(e.path.animate, t),
        animationSpeed: (t) => $.value(e.path.animationSpeed, t)
      },
      hover: {
        width: (t) => $.value(e.normal.width, t) + 2,
        color: (t) => $.value(e.normal.color, t),
        dasharray: (t) => $.value(e.normal.dasharray, t),
        linecap: (t) => $.value(e.normal.linecap, t),
        linejoin: (t) => $.value(e.normal.linejoin, t),
        animate: (t) => $.value(e.normal.animate, t),
        animationSpeed: (t) => $.value(e.normal.animationSpeed, t)
      },
      selected: {
        width: (t) => $.value(e.normal.width, t) + 2,
        color: (t) => $.value(e.normal.color, t),
        dasharray: "6 12",
        linecap: (t) => $.value(e.normal.linecap, t),
        linejoin: (t) => $.value(e.normal.linejoin, t),
        animate: (t) => $.value(e.normal.animate, t),
        animationSpeed: (t) => $.value(e.normal.animationSpeed, t)
      },
      selectable: false,
      zOrder: {
        enabled: false,
        zIndex: 0,
        bringToFrontOnHover: true,
        bringToFrontOnSelected: true
      },
      transition: void 0
    }))
  };
}
function ea(e) {
  const t = Ln();
  return e && merge_default(t, e), t;
}
var An = Symbol("style");
function Go(e, t) {
  return isPlainObject_default(e) ? merge_default(e, t) : t;
}
function Ko(e) {
  const t = reactive(Ln()), n = Object.keys(t);
  for (const o of n)
    watch(() => e.value[o], () => {
      mergeWith_default(t[o], e.value[o] || {}, Go);
    }, { immediate: true, deep: true });
  return provide(An, t), t;
}
function pt(e) {
  return q(inject(An), `Configs(${e})`)[e];
}
function Yo() {
  return pt("view");
}
function mt() {
  return pt("node");
}
function bt() {
  return pt("edge");
}
function Zn() {
  return pt("path");
}
var Qo = 1;
function Jo() {
  return Qo++;
}
function he(e) {
  return Object.entries(e);
}
function lt2(e, t) {
  const n = new Set(Object.keys(e));
  he(t).forEach(([o, i]) => {
    isEqual_default(e[o], i) || (e[o] = i), n.delete(o);
  }), n.forEach((o) => delete e[o]);
}
function ei(e) {
  return e instanceof Promise || e && typeof e.then == "function";
}
function ti(e, t, n) {
  const o = Ie({
    edgeLayoutPoints: {},
    edgeGroups: {},
    summarizedEdges: {}
  });
  return watchEffect(() => {
    const { edgeLayoutPoints: i, edgeGroups: s } = oi(
      n,
      e.value,
      t.value
    );
    lt2(o.edgeLayoutPoints, i), lt2(o.edgeGroups, s);
  }), watchEffect(() => {
    const i = {};
    for (const [s, { edges: r, groupWidth: a }] of Object.entries(o.edgeGroups)) {
      let l = false;
      if (a == 0)
        l = false;
      else if (n.edge.summarize instanceof Function) {
        const u = n.edge.summarize(r, n);
        u === null ? l = hn(e.value, r, n, a) : l = u;
      } else n.edge.summarize ? l = hn(e.value, r, n, a) : l = false;
      o.edgeGroups[s].summarize = l, l && Object.keys(r).forEach((u) => i[u] = true);
    }
    lt2(o.summarizedEdges, i);
  }), o;
}
function ni(e, t, n, o, i, s) {
  return e ? t ? vn(e.edge, n, o, i, 0, 0, s) : vn(
    e.edge,
    n,
    o,
    i,
    e.groupWidth,
    e.pointInGroup,
    s
  ) : { p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } };
}
function oi(e, t, n) {
  const o = {}, i = {}, s = {};
  for (const [a, l] of Object.entries(n)) {
    if (!(l.source in t && l.target in t))
      continue;
    const u = [l.source, l.target].sort().join("<=>"), c = s[u] || {};
    c[a] = l, s[u] = c;
  }
  const r = e.edge.gap instanceof Function ? e.edge.gap : (a, l) => e.edge.gap;
  for (const [a, l] of Object.entries(s)) {
    const u = Object.keys(l).length;
    if (u == 0) continue;
    const c = r(l, e), [d, h] = Object.entries(l)[0];
    if (u === 1)
      o[d] = { edge: h, pointInGroup: 0, groupWidth: 0 }, i[a] = { edges: l, groupWidth: 0, summarize: false };
    else {
      let v = 0;
      const E = Object.entries(l).map(([g, y]) => {
        let k = $.value(e.edge.normal.width, y);
        return isNaN(+k) && (console.warn(
          "[v-network-graph] Edge width is invalid value. id=[%s] value=[%s]",
          g,
          k
        ), k = 1), k / 2;
      }), x = Object.entries(l).map(([g, y], k) => (k > 0 && (v += E[k - 1] + c + E[k]), [g, y, v])), w = v;
      x.forEach(([g, y, k]) => {
        o[g] = { edge: y, pointInGroup: k, groupWidth: w };
      }), i[a] = { edges: l, groupWidth: w, summarize: false };
    }
  }
  return { edgeLayoutPoints: o, edgeGroups: i };
}
function hn(e, t, n, o) {
  if (Object.entries(t).length === 1) return false;
  const s = Math.min(
    ...Object.values(t).flatMap((r) => [e[r.source], e[r.target]]).filter((r) => r).map((r) => {
      const a = $.values(n.node.normal, r);
      return a.type === "circle" ? a.radius * 2 : Math.min(a.width, a.height);
    })
  );
  return o > s;
}
function vn(e, t, n, o, i, s, r) {
  var d, h, v, E, x, w, g, y;
  let a, l, u, c;
  return e.source < e.target ? [a, l, u, c] = gn(
    (d = t == null ? void 0 : t.x) != null ? d : 0,
    (h = t == null ? void 0 : t.y) != null ? h : 0,
    (v = n == null ? void 0 : n.x) != null ? v : 0,
    (E = n == null ? void 0 : n.y) != null ? E : 0,
    o,
    i,
    s,
    r
  ) : [u, c, a, l] = gn(
    (x = n == null ? void 0 : n.x) != null ? x : 0,
    (w = n == null ? void 0 : n.y) != null ? w : 0,
    (g = t == null ? void 0 : t.x) != null ? g : 0,
    (y = t == null ? void 0 : t.y) != null ? y : 0,
    o,
    i,
    s,
    r
  ), { p1: { x: a, y: l }, p2: { x: u, y: c } };
}
function gn(e, t, n, o, i, s, r, a) {
  const l = n - e, u = o - t;
  let c = (s / 2 - r) * i;
  if (c !== 0 && a !== "clock") {
    const d = Math.atan2(o - t, n - e);
    if (a === "vertical") {
      const h = Math.PI / 2;
      (d < -h || d >= h) && (c *= -1);
    } else a === "horizontal" && d < 0 && (c *= -1);
  }
  if (l === 0) {
    const d = u < 0 ? -1 : 1;
    return [e + c * d, t, n + c * d, o];
  } else if (u === 0) {
    const d = l < 0 ? 1 : -1;
    return [e, t + c * d, n, o + c * d];
  } else {
    const h = -1 / (u / l);
    u < 0 && (c = -c);
    const v = c / Math.sqrt(1 + Math.pow(h, 2));
    return [e + v, t + v * h, n + v, o + v * h];
  }
}
function Dn(e, t, n) {
  return n || (n = { x: 0, y: 0 }), n.x = e.x + t.x, n.y = e.y + t.y, n;
}
function Wt(e, t, n) {
  return n || (n = { x: 0, y: 0 }), n.x = e.x - t.x, n.y = e.y - t.y, n;
}
function Nn(e, t, n) {
  return n || (n = { x: 0, y: 0 }), n.x = e.x * t.x, n.y = e.y * t.y, n;
}
function jn(e, t, n) {
  return n || (n = { x: 0, y: 0 }), n.x = e.x * t, n.y = e.y * t, n;
}
function Ht(e, t, n) {
  return n || (n = { x: 0, y: 0 }), n.x = e.x / t.x, n.y = e.y / t.y, n;
}
function Bn(e, t) {
  return e.x * t.x + e.y * t.y;
}
function Rn(e, t) {
  return e.x * t.y - e.y * t.x;
}
function _t(e) {
  return e.x * e.x + e.y * e.y;
}
function Ft(e) {
  return Math.sqrt(_t(e));
}
function Ut(e, t) {
  const n = e.x - t.x, o = e.y - t.y;
  return n * n + o * o;
}
function Vn(e, t) {
  return Math.sqrt(Ut(e, t));
}
function Wn(e, t) {
  t || (t = { x: 0, y: 0 });
  const n = Ft(e);
  return n === 0 ? (t.x = 1, t.y = 0) : Ht(e, { x: n, y: n }, t), t;
}
function ut(e, t, n) {
  n || (n = { x: 0, y: 0 });
  const o = e.x * Math.cos(t) - e.y * Math.sin(t), i = e.x * Math.sin(t) + e.y * Math.cos(t);
  return n.x = o, n.y = i, n;
}
var ii = 180 / Math.PI;
function si(e) {
  return e * ii;
}
function Xt(e) {
  return Math.atan2(e.y, e.x);
}
function qt(e) {
  return si(Xt(e));
}
var ri = Object.freeze(Object.defineProperty({
  __proto__: null,
  add: Dn,
  angle: Xt,
  angleDegree: qt,
  cross: Rn,
  distance: Vn,
  distanceSquared: Ut,
  divide: Ht,
  dot: Bn,
  length: Ft,
  lengthSquared: _t,
  multiply: Nn,
  multiplyScalar: jn,
  normalize: Wn,
  rotate: ut,
  subtract: Wt
}, Symbol.toStringTag, { value: "Module" }));
var V = class _V {
  static fromArray(t) {
    return new _V(t[0] || 0, t[1] || 0);
  }
  static fromObject(t) {
    return new _V(t.x, t.y);
  }
  constructor(t, n) {
    this.x = t, this.y = n;
  }
  // instance methods
  add(t) {
    return Dn(this, t, this);
  }
  subtract(t) {
    return Wt(this, t, this);
  }
  multiply(t) {
    return Nn(this, t, this);
  }
  multiplyScalar(t) {
    return jn(this, t, this);
  }
  divide(t) {
    return Ht(this, t, this);
  }
  dot(t) {
    return Bn(this, t);
  }
  cross(t) {
    return Rn(this, t);
  }
  lengthSquared() {
    return _t(this);
  }
  length() {
    return Ft(this);
  }
  distanceSquared(t) {
    return Ut(this, t);
  }
  distance(t) {
    return Vn(this, t);
  }
  normalize() {
    return Wn(this, this);
  }
  angle() {
    return Xt(this);
  }
  angleDegree() {
    return qt(this);
  }
  rotate(t) {
    return ut(this, t, this);
  }
  isEqualTo(t) {
    return this.x === t.x && this.y === t.y;
  }
  clone() {
    return new _V(this.x, this.y);
  }
  toObject() {
    return { x: this.x, y: this.y };
  }
  toArray() {
    return [this.x, this.y];
  }
};
var ee = se({
  Vector2D: V
}, ri);
var Q = class _Q {
  constructor(t, n, o) {
    this.source = t, this.target = n, this.v = o;
  }
  static fromLinePosition(t) {
    const n = V.fromObject(t.p1), o = V.fromObject(t.p2);
    return new _Q(n, o, _e(n, o));
  }
  static fromPositions(t, n) {
    const o = V.fromObject(t), i = V.fromObject(n);
    return new _Q(o, i, _e(o, i));
  }
  static fromVectors(t, n) {
    return new _Q(t, n, _e(t, n));
  }
};
function _e(e, t) {
  return t.clone().subtract(e);
}
function ai(e) {
  return [V.fromObject(e.p1), V.fromObject(e.p2)];
}
function li(e) {
  return new V((e.p1.x + e.p2.x) / 2, (e.p1.y + e.p2.y) / 2);
}
function dt(e, t) {
  return { p1: e, p2: t };
}
function $t(e, t, n) {
  const o = Q.fromLinePosition(e);
  return ci(o, t, n);
}
function ci(e, t, n) {
  const o = e.v.clone().normalize(), i = e.source.clone().add(o.clone().multiplyScalar(t)), s = e.target.clone().subtract(o.clone().multiplyScalar(n));
  let r = i.toObject(), a = s.toObject();
  const l = _e(i, s);
  if (e.v.angle() * l.angle() < 0) {
    const u = new V((r.x + a.x) / 2, (r.y + a.y) / 2), c = u.clone().add(o.multiplyScalar(0.5));
    r = u.toObject(), a = c.toObject();
  }
  return { p1: r, p2: a };
}
function ui(e) {
  return { p1: e.p2, p2: e.p1 };
}
function Ke(e) {
  const t = e.v.clone().normalize().rotate(Math.PI / 2);
  return Q.fromVectors(e.target, e.target.clone().add(t));
}
function Gt(e, t) {
  const n = t.v.clone().normalize(), o = t.source, i = ee.subtract(e, o), s = n.dot(i);
  return o.clone().add(n.multiplyScalar(s));
}
function yt(e, t, n, o) {
  if (!(ee.lengthSquared(ee.subtract(t, n)) - o * o <= Math.pow(1, -10))) return null;
  const r = Q.fromVectors(e, t), a = Gt(n, r), l = ee.length(ee.subtract(a, n));
  if (o < l) return null;
  if (o === l) return a;
  const u = Math.sqrt(ae(o, 2) - ae(l, 2)), c = r.v.normalize().multiplyScalar(u);
  return a.subtract(c);
}
function di(e, t, n, o, i) {
  if (!(ee.lengthSquared(ee.subtract(t, n)) - o * o <= Math.pow(1, -10))) return null;
  const a = Q.fromVectors(e, t), l = Gt(n, a), u = ee.length(ee.subtract(l, n));
  if (o < u) return null;
  if (o === u) return l;
  const c = Math.sqrt(ae(o, 2) - ae(u, 2)), d = a.v.normalize().multiplyScalar(c), h = l.clone().add(d), v = l.clone().subtract(d), E = i.distance(h), x = i.distance(v);
  return Math.abs(E - x) < 2 ? v : E < x ? h : v;
}
function Be(e, t) {
  const n = ee.subtract(t.source, e.source), o = e.v, i = t.v, s = ee.cross(n, o) / ee.cross(o, i);
  return t.source.clone().add(i.clone().multiplyScalar(s));
}
function et(e, t, n, o, i) {
  const s = e, a = n.clone().subtract(s), l = a.length(), u = t + o;
  if (u < l) return null;
  const c = Math.abs(t - o);
  if (l < c) return null;
  if (l === u) {
    const p = a.clone().normalize(), S = e.clone().add(p.multiplyScalar(t));
    return i ? S : [S, S];
  }
  if (l === c) {
    const p = a.clone().normalize(), S = t > o, O = e.clone().add(p.multiplyScalar(S ? t : -t));
    return i ? O : [O, O];
  }
  const d = t, h = o, v = (ae(l, 2) + ae(d, 2) - ae(h, 2)) / (2 * l * d), E = d * v, x = Math.sqrt(ae(d, 2) - ae(E, 2)), w = a.clone().normalize(), g = new V(-w.y, w.x), y = w.clone().multiplyScalar(E), k = g.clone().multiplyScalar(x), m = e.clone().add(y).add(k), f = e.clone().add(y).subtract(k);
  if (i) {
    const p = m.distance(i), S = f.distance(i);
    return p < S ? m : f;
  } else
    return [m, f];
}
function pn(e, t, n, o) {
  const i = Q.fromPositions(e, t), s = (n.width + n.strokeWidth) / 2 * o, r = (n.height + n.strokeWidth) / 2 * o, a = n.borderRadius > 0 ? (n.borderRadius + n.strokeWidth / 2) * o : 0, l = (i.v.angle() - Math.PI / 2) % Math.PI, u = Math.PI / 2 - l % Math.PI, c = r * Math.abs(Math.tan(l)), d = s * Math.abs(Math.tan(u)), h = c <= s - a, v = d <= r - a;
  if (h || v || a === 0)
    return Math.sqrt(h ? ae(r, 2) + ae(c, 2) : ae(s, 2) + ae(d, 2));
  {
    const E = t.x - s + a, x = t.y - r + a, w = t.x + s - a, g = t.y + r - a, y = [
      new V(E, x),
      new V(w, x),
      new V(w, g),
      new V(E, g)
    ], k = Math.floor((i.v.angleDegree() + 360) % 360 / 90), m = y[k], f = yt(
      i.source,
      Gt(m, i),
      m,
      a
    );
    return f ? _e(f, i.target).length() : _e(m, i.target).length() + a;
  }
}
function Hn(e, t, n, o, i) {
  const s = Q.fromLinePosition(e), r = s.v.clone().normalize(), a = o === 0 ? s.source : s.source.clone().add(r.clone().multiplyScalar(o * i)), l = o === 0 ? s.target : s.target.clone().subtract(r.clone().multiplyScalar(o * i)), u = (t.width / 2 + n) * i, c = new V(-r.y, r.x).multiplyScalar(u);
  let d = ee.subtract(a, c), h = ee.add(a, c), v = ee.subtract(l, c), E = ee.add(l, c);
  const x = s.v.angleDegree();
  return (x < -90 || x >= 90) && ([d, h] = [h, d], [v, E] = [E, v]), {
    source: { above: d, below: h },
    target: { above: v, below: E }
  };
}
function fi(e, t, n, o) {
  let i;
  n.type === "circle" ? i = n.radius + n.strokeWidth / 2 : i = pn(
    t,
    e,
    n,
    1
    // scale
  );
  let s;
  return o.type === "circle" ? s = o.radius + o.strokeWidth / 2 : s = pn(
    e,
    t,
    o,
    1
    // scale
  ), [i, s];
}
function Le(e, t, n) {
  const { x: o, y: i } = e, s = o - t.x, r = i - t.y;
  return {
    x: s * Math.cos(n) - r * Math.sin(n) + t.x,
    y: s * Math.sin(n) + r * Math.cos(n) + t.y
  };
}
function Lt(e) {
  return e > 0 ? -(Math.PI * 2 - e) : Math.PI * 2 + e;
}
function At(e, t, n, o) {
  const i = [], s = Q.fromVectors(t, e), r = Q.fromVectors(t, n);
  let a = Fe(s, r);
  o * a < 0 && (a = Lt(a));
  const l = V.fromObject(Le(e, t, -a / 2)), u = Q.fromVectors(t, l), c = Ke(u), d = Fe(s, u);
  let h = Ke(s);
  if (Math.abs(d) < Math.PI / 2) {
    const E = Be(h, c);
    i.push(E);
  } else {
    const E = V.fromObject(Le(l, t, d / 2)), x = Ke(
      Q.fromVectors(t, V.fromObject(E))
    ), w = Be(h, x), g = Be(x, c);
    i.push(w, E, g);
  }
  i.push(l);
  const v = Fe(r, u);
  if (h = Ke(r), Math.abs(v) < Math.PI / 2) {
    const E = Be(h, c);
    i.push(E);
  } else {
    const E = V.fromObject(Le(l, t, v / 2)), x = Ke(
      Q.fromVectors(t, V.fromObject(E))
    ), w = Be(c, x), g = Be(x, h);
    i.push(w, E, g);
  }
  return i;
}
function Fe(e, t) {
  return Math.atan2(
    e.v.y * t.v.x - e.v.x * t.v.y,
    e.v.x * t.v.x + e.v.y * t.v.y
  );
}
function hi(e, t, n) {
  const o = e.x, i = e.y, s = t.x, r = t.y, a = n.x, l = n.y, u = o - s, c = i - r, d = a - s, h = l - r;
  if (u === 0 && c === 0 || d === 0 && h === 0)
    return [e, 0];
  const v = (h * (u * (o + s) + c * (i + r)) - c * (d * (a + s) + h * (l + r))) / (2 * u * h - 2 * c * d), E = (-d * (u * (o + s) + c * (i + r)) + u * (d * (a + s) + h * (l + r))) / (2 * u * h - 2 * c * d), x = Math.sqrt(Math.pow(o - v, 2) + Math.pow(i - E, 2));
  return [new V(v, E), x];
}
function He(e) {
  return e.type == "circle" ? e.radius : Math.min(e.width, e.height) / 2;
}
function vi(e) {
  const t = Object.values(e);
  if (t.length === 0)
    return {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    };
  const n = {
    top: t[0].y,
    bottom: t[0].y,
    left: t[0].x,
    right: t[0].x
  };
  return t.forEach((o) => {
    n.top = Math.min(o.y, n.top), n.bottom = Math.max(o.y, n.bottom), n.left = Math.min(o.x, n.left), n.right = Math.max(o.x, n.right);
  }), n;
}
function st(...e) {
  return e.find((t) => !!t);
}
var gi = Number.EPSILON * 100;
function pi(e, t, n, o, i, s, r, a) {
  var x, w;
  const l = e.edges, u = e.directions, c = l.map((g, y) => bi(g, u[y], o[g.edgeId])), d = [];
  let h = false, v = false;
  {
    const g = c[0];
    let y = He(t[g.source].shape) * i;
    const k = a + (r === "edgeOfNode" ? y : 0), m = k <= 0 ? g.line.source : bn(g, k, n, true);
    d.push(m), y = He(t[g.target].shape) * i, a > 0 && ee.distance(g.line.source, g.line.target) <= k + y && (h = true);
  }
  const E = l.length;
  for (let g = 1; g < E; g++) {
    const y = c[g - 1], k = c[g], m = k.source, f = V.fromObject((x = n[m]) != null ? x : { x: 0, y: 0 }), p = mi(y, k, f), S = He(t[m].shape) * i, O = Math.max(S * (2 / 3), S - 4 * i), I = Zt(y), z = Zt(k), T = rt(y, f, O, I), A = rt(k, f, O, !z), R = rt(y, f, S, I), Y = rt(k, f, S, !z);
    let B;
    if (p) {
      const F = ee.distance(p, f);
      if (F < O)
        B = [
          st(T, R, y.line.target),
          p,
          st(A, Y, k.line.source)
        ];
      else if (F <= S) {
        let ye, ie;
        R && T ? ye = ee.distance(p, T) < ee.distance(p, R) ? T : R : ye = R || y.line.target, Y && A ? ie = ee.distance(p, A) < ee.distance(p, Y) ? A : Y : ie = Y || k.line.source, B = [ye, p, ie];
      } else
        T && A ? B = [T, f, A] : R && Y ? B = [R, f, Y] : B = [
          st(T, R, y.line.target),
          f,
          st(A, Y, k.line.source)
        ];
    } else
      T && A ? B = [T, f, A] : R && Y ? B = [R, f, Y] : B = [y.line.target, f, k.line.source];
    if (y.curve) {
      const F = d[d.length - 1];
      if (F) {
        const ye = F instanceof Array ? F[F.length - 1] : F;
        let ie;
        B instanceof Array ? ie = s ? B[0] : B[1] : ie = B;
        const ke = At(
          ye,
          y.curve.circle.center,
          ie,
          y.curve.theta
        );
        B instanceof Array && s ? d.push([...ke, ...B]) : d.push([...ke, ie]);
      }
    } else if (y.loop) {
      const [F, ye, ie] = wn(f, y, S);
      d.push(F), d.push(ie), B instanceof Array && s ? d.push([ye, B[1], B[2]]) : d.push(B[2]);
    } else
      s || !(B instanceof Array) ? d.push(B) : k.curve ? d.push(B[1]) : k.loop ? d.push(B[0]) : d.push(B[0], B[2]);
  }
  {
    const g = c[c.length - 1];
    let y = He(t[g.target].shape) * i;
    const k = a + (r === "edgeOfNode" ? y : 0), m = k <= 0 ? g.line.target : bn(g, k, n, false);
    if (y = He(t[g.source].shape) * i, g.loop) {
      const f = V.fromObject((w = n[g.target]) != null ? w : { x: 0, y: 0 }), [p, S, O] = wn(f, g, y);
      d.push(p), d.push(O);
    } else if (g.curve) {
      const f = d[d.length - 1], p = f instanceof Array ? f[f.length - 1] : f, S = At(
        p,
        g.curve.circle.center,
        m,
        g.curve.theta
      );
      d.push([...S, m]);
    } else
      d.push(m);
    a > 0 && ee.distance(g.line.source, g.line.target) <= k + y && (v = true);
  }
  return h && (d.shift(), d[0] instanceof Array && d.unshift(d[0][0])), v && d.pop(), d;
}
function mn(e) {
  const t = e.length;
  if (t === 0) return [];
  if (t <= 1) return [true];
  const n = [];
  let o = null, i = true;
  for (let s = 0; s < t; s++) {
    const r = e[s].edge.source, a = e[s].edge.target;
    if (s === 0)
      if (t > 2) {
        const l = _n(e, 0);
        l === null ? i = true : i = l === a;
      } else
        i = [e[1].edge.source, e[1].edge.target].includes(a);
    else r === a ? i = true : i = o === r;
    n.push(i), o = i ? a : r;
  }
  return n;
}
function _n(e, t) {
  const n = e[t], o = e[t + 1], i = [n.edge.source, n.edge.target].sort(), s = [o.edge.source, o.edge.target].sort();
  if (i[0] === i[1])
    return i[0];
  if (s[0] === s[1])
    return s[0];
  if (n.edgeId === o.edgeId || i[0] === s[0] && i[1] === s[1]) {
    if (t >= e.length - 2)
      return null;
    {
      const r = _n(e, t + 1);
      return r === null ? null : r === i[1] ? i[0] : i[1];
    }
  } else
    return s.includes(i[1]) ? i[1] : i[0];
}
function bn(e, t, n, o) {
  const i = o ? e.source : e.target, s = e.curve;
  if (s) {
    let r = t / s.circle.radius;
    return s.theta > 0 && (r *= -1), o || (r *= -1), V.fromObject(
      Le(
        o ? e.line.source : e.line.target,
        s.circle.center,
        r
      )
    );
  } else {
    let r, a;
    if (o ? (r = e.line.target, a = e.line.source) : (r = e.line.source, a = e.line.target), n[i]) {
      const l = yt(
        r,
        a,
        V.fromObject(n[i]),
        t
      );
      return l === null ? r : l;
    } else
      return r;
  }
}
function mi(e, t, n) {
  let o = null;
  if (e.loop || t.loop)
    o = null;
  else if (e.curve)
    if (t.curve) {
      if (e.line.target.isEqualTo(t.line.source))
        return e.line.target.clone();
      o = et(
        e.curve.circle.center,
        e.curve.circle.radius,
        t.curve.circle.center,
        t.curve.circle.radius,
        e.curve.center
      );
    } else
      o = di(
        t.line.target,
        t.line.source,
        e.curve.circle.center,
        e.curve.circle.radius,
        n
      );
  else if (t.curve)
    o = yt(
      e.line.source,
      e.line.target,
      t.curve.circle.center,
      t.curve.circle.radius
    );
  else {
    const i = yn(e.line), s = yn(t.line);
    !isFinite(i) && !isFinite(s) || Math.abs(i - s) < gi ? o = null : o = Be(e.line, t.line);
  }
  return o;
}
function rt(e, t, n, o) {
  if (e.loop) {
    const i = et(
      t,
      n,
      e.loop.center,
      e.loop.radius[0]
    );
    return i ? o ? i[0] : i[1] : null;
  } else return e.curve ? et(
    t,
    n,
    e.curve.circle.center,
    e.curve.circle.radius,
    V.fromObject(e.curve.center)
  ) : yt(
    o ? e.line.source : e.line.target,
    o ? e.line.target : e.line.source,
    t,
    n
  );
}
function bi(e, t, n) {
  let o = n.origin, i = e.edge.source, s = e.edge.target, r = n.curve;
  const a = n.loop;
  a ? o = n.position : t || (o = ui(o), i = e.edge.target, s = e.edge.source, r && (r = qe(se({}, r), { theta: -r.theta })));
  const l = Q.fromLinePosition(o);
  return {
    edgeId: e.edgeId,
    source: i,
    target: s,
    line: l,
    direction: t,
    curve: r,
    loop: a
  };
}
function yn(e) {
  return (e.target.y - e.source.y) / (e.target.x - e.source.x);
}
function wn(e, t, n) {
  const { radius: o, center: i } = q(t.loop, "Loop of edge parameter"), [s, r] = o, a = et(e, n, i, o[0]);
  let [l, u] = a ? a.reverse() : [t.line.source, t.line.target];
  const c = Zt(t);
  c || ([l, u] = [u, l]);
  const d = l, h = u, v = V.fromObject(d).subtract(i).angleDegree();
  let w = (V.fromObject(h).subtract(i).angleDegree() + 360 - v) % 360 >= 180;
  return w = c ? w : !w, [d, h, `A ${s} ${r} 0 ${w ? 1 : 0} ${c ? 1 : 0} ${h.x} ${h.y}`];
}
function Zt(e) {
  return e.loop ? e.direction ? e.loop.isClockwise : !e.loop.isClockwise : true;
}
function Ot(e, t, n, o, i, s, r) {
  const a = reactive({});
  watch(
    () => new Set(Object.keys(e.value)),
    (u, c) => {
      c || (c = /* @__PURE__ */ new Set([]));
      for (const d of u)
        c.has(d) || yi(e, a, d, false, t, i);
      for (const d of c)
        u.has(d) || (n.delete(d), o.delete(d), s == null || s(d, a[d]), delete a[d]);
    },
    { immediate: true }
  ), watch(
    () => [...n],
    (u, c) => {
      const d = c ? u.filter((v) => !c.includes(v)) : u, h = c ? c.filter((v) => !u.includes(v)) : [];
      d.forEach((v) => {
        const E = a[v];
        E && !E.selected && (E.selected = true);
      }), h.forEach((v) => {
        const E = a[v];
        E && E.selected && (E.selected = false);
      });
    },
    { immediate: true }
    // for specified from the beginning
  ), watch(
    () => [...o],
    (u, c) => {
      const d = u.filter((v) => !c.includes(v)), h = c.filter((v) => !u.includes(v));
      d.forEach((v) => {
        const E = a[v];
        E && !E.hovered && (E.hovered = true);
      }), h.forEach((v) => {
        const E = a[v];
        E && E.hovered && (E.hovered = false);
      });
    }
  );
  const l = computed(() => {
    const u = r ? r() : Object.values(a);
    return t.zOrder.enabled ? wi(u, t.zOrder, o, n) : u;
  });
  return { states: a, zOrderedList: l };
}
function yi(e, t, n, o, i, s) {
  const r = {
    id: n,
    selected: o,
    hovered: false,
    selectable: computed(() => e.value[n] ? $.value(i.selectable, e.value[n]) : unref(r.selectable)),
    zIndex: computed(() => e.value[n] ? $.value(i.zOrder.zIndex, e.value[n]) : unref(r.zIndex))
  };
  t[n] = r, s(
    e,
    n,
    t[n]
    /* get reactive object */
  );
}
function wi(e, t, n, o) {
  return t.bringToFrontOnHover && t.bringToFrontOnSelected ? e.sort((i, s) => {
    const r = n.has(i.id), a = n.has(s.id);
    if (r != a)
      return r ? 1 : -1;
    const l = o.has(i.id), u = o.has(s.id);
    return l != u ? l ? 1 : -1 : i.zIndex - s.zIndex;
  }) : t.bringToFrontOnHover ? e.sort((i, s) => {
    const r = n.has(i.id), a = n.has(s.id);
    return r != a ? r ? 1 : -1 : i.zIndex - s.zIndex;
  }) : t.bringToFrontOnSelected ? e.sort((i, s) => {
    const r = o.has(i.id), a = o.has(s.id);
    return r != a ? r ? 1 : -1 : i.zIndex - s.zIndex;
  }) : e.sort((i, s) => i.zIndex - s.zIndex);
}
function Ei(e) {
  return typeof btoa === void 0 ? Buffer.from(e).toString("base64").replaceAll("=", "") : btoa(e).replaceAll("=", "");
}
function xi() {
  return { markers: reactive({}), referenceCount: {} };
}
function ki(e) {
  const { markers: t, referenceCount: n } = e;
  function o(a, l) {
    var c;
    const u = (c = n[a]) != null ? c : 0;
    n[a] = u + 1, u || (t[a] = l);
  }
  function i(a) {
    var u;
    const l = (u = n[a]) != null ? u : 0;
    l && (l - 1 === 0 ? (delete t[a], delete n[a]) : n[a] = l - 1);
  }
  function s(a) {
    a && i(a);
  }
  function r(a, l, u, c, d) {
    if (a.type === "none") {
      s(u);
      return;
    }
    if (a.type === "custom")
      return s(u), a.customId;
    const h = Pi(a, l, c), v = Si(h, d);
    return v === u || (s(u), o(v, h)), v;
  }
  return {
    makeMarker: r,
    clearMarker: s
  };
}
function Pi(e, t, n) {
  var o;
  return qe(se({}, e), {
    color: (o = e.color) != null ? o : n,
    isSource: t
  });
}
function Si(e, t) {
  const n = Ei(e.color), o = e.isSource ? "L" : "R", i = e.units === "strokeWidth" ? "rel" : "abs";
  return `marker_${t}_${e.type}_${e.width}_${e.height}_${e.margin}_${e.offset}_${n}_${o}_${i}`;
}
function zt(e, t, n) {
  return {
    objects: e,
    selected: t,
    hovered: n
  };
}
var Fn = Symbol("states");
var Mi = {
  type: "none",
  width: 0,
  height: 0,
  margin: 0,
  offset: 0,
  units: "strokeWidth",
  color: null
};
function Ci(e, t, n, o, i, s, r, a) {
  const l = reactive({}), u = Ie({});
  watchEffect(() => {
    const m = Object.fromEntries(
      Object.keys(e.objects.value).map((f) => [f, {}])
    );
    Object.entries(t.objects.value).forEach(([f, p]) => {
      m != null && m[p.source] || (m[p.source] = {}), m != null && m[p.target] || (m[p.target] = {}), m[p.source][f] = p.target, m[p.target][f] = p.source;
    }), lt2(u, m);
  });
  const {
    states: c,
    zOrderedList: d
    //
  } = Ot(
    e.objects,
    o.node,
    e.selected,
    e.hovered,
    (m, f, p) => {
      Ti(
        m,
        f,
        p,
        o.node,
        u,
        i,
        s
      );
    },
    (m, f) => {
      const p = i.nodes;
      delete p[m];
    }
  ), h = Jo(), v = ti(e.objects, t.objects, o), E = ref([]), {
    states: x,
    zOrderedList: w
    //
  } = Ot(
    t.objects,
    o.edge,
    t.selected,
    t.hovered,
    (m, f, p) => {
      $i(
        m,
        f,
        p,
        o.edge,
        r,
        c,
        v,
        i,
        a,
        h
      );
    },
    (m, f) => {
      var p;
      (p = f.stopWatchHandle) == null || p.call(f);
    },
    () => E.value
  );
  watchEffect(() => {
    E.value = Li(v.edgeGroups, x);
  }), watch(
    v.edgeGroups,
    (m) => Di(l, v, o),
    { immediate: true }
  );
  const {
    states: g,
    zOrderedList: y
    //
  } = Ot(
    n.objects,
    o.path,
    n.selected,
    n.hovered,
    (m, f, p) => {
      const S = p;
      S.clickable = computed(() => m.value[f] ? $.value(o.path.clickable, m.value[f]) : false), S.hoverable = computed(() => m.value[f] ? $.value(o.path.hoverable, m.value[f]) : false), S.path = m.value[f], S.edges = xn(S.path, t), S.directions = mn(S.edges), S.stopWatchHandle = watch(
        () => m.value[f].edges,
        () => {
          S.path = m.value[f], S.edges = xn(S.path, t), S.directions = mn(S.edges);
        }
      );
    },
    (m, f) => {
      var p;
      (p = f.stopWatchHandle) == null || p.call(f);
    }
  ), k = {
    nodeStates: c,
    edgeStates: x,
    edgeGroupStates: v,
    summarizedEdgeStates: l,
    pathStates: g,
    layouts: i,
    nodeZOrderedList: d,
    edgeZOrderedList: w,
    pathZOrderedList: y
  };
  return provide(Fn, k), k;
}
function Oi(e) {
  return e.summarized;
}
function Se() {
  return q(inject(Fn), "states");
}
function zi(e, t, n, o) {
  return n && o.hover ? $.values(o.hover, e) : Un(e, t, o);
}
function Un(e, t, n) {
  return t && n.selected ? $.values(n.selected, e) : $.values(n.normal, e);
}
function Ti(e, t, n, o, i, s, r) {
  var a, l;
  !s.nodes[t] && ((a = r.nodes) != null && a[t]) && (s.nodes[t] = se({}, (l = r.nodes) == null ? void 0 : l[t])), n.shape = computed(() => e.value[t] ? zi(e.value[t], n.selected, n.hovered, o) : unref(n.shape)), n.staticShape = computed(() => e.value[t] ? Un(e.value[t], n.selected, o) : unref(n.staticShape)), n.label = computed(() => e.value[t] ? $.values(o.label, e.value[t]) : unref(n.label)), n.labelText = computed(() => {
    var u, c;
    return o.label.text instanceof Function ? unref(n.label).text : e.value[t] ? (c = (u = e.value[t]) == null ? void 0 : u[unref(n.label).text]) != null ? c : "" : unref(n.labelText);
  }), n.draggable = computed(() => e.value[t] ? $.value(o.draggable, e.value[t]) : unref(n.draggable)), n.oppositeNodeIds = toRef(i, t), n.oppositeNodes = computed(() => Object.entries(n.oppositeNodeIds).reduce(
    (u, c) => {
      const [d, h] = c, v = s.nodes[h];
      return v && (u[d] = { nodeId: h, pos: se({}, v) }), u;
    },
    {}
  ));
}
function Ii(e, t, n, o) {
  return t ? $.values(o.selected, e) : n && o.hover ? $.values(o.hover, e) : $.values(o.normal, e);
}
function En(e) {
  return e.type === "none" ? Mi : e;
}
function $i(e, t, n, o, i, s, r, a, l, u) {
  const { makeMarker: c, clearMarker: d } = ki(i);
  Object.assign(n, {
    origin: { p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } },
    labelPosition: { p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } },
    position: { p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } }
  }), n.label = computed(() => e.value[t] ? $.values(o.label, e.value[t]) : unref(n.label));
  const h = computed(() => {
    const g = e.value[t], y = Ii(g, n.selected, n.hovered, o);
    isNaN(+y.width) && (console.warn(
      "[v-network-graph] Edge width is invalid value. id=[%s] value=[%s]",
      t,
      y.width
    ), y.width = 1), (y.color === void 0 || y.color === null) && (console.warn(
      "[v-network-graph] Edge color is invalid value. id=[%s] value=[%s]",
      t,
      y.color
    ), y.color = "#000000");
    let k = $.value(o.normal.width, g);
    isNaN(+k) && (k = 1);
    const m = En($.values(o.marker.source, [g, y])), f = En($.values(o.marker.target, [g, y]));
    return { stroke: y, normalWidth: k, source: m, target: f };
  });
  n.line = h;
  const v = toRef(
    r.edgeLayoutPoints,
    t
  ), E = toRef(r.summarizedEdges, t), x = watchEffect(() => {
    var B, F, ye, ie, ke, Ne, Xe;
    const g = e.value[t];
    if (!g) return;
    const y = (B = s[g.source]) == null ? void 0 : B.staticShape, k = (F = s[g.target]) == null ? void 0 : F.staticShape;
    if (!y || !k)
      return;
    const m = (ye = a.nodes[g == null ? void 0 : g.source]) != null ? ye : { x: 0, y: 0 }, f = (ie = a.nodes[g == null ? void 0 : g.target]) != null ? ie : { x: 0, y: 0 }, p = ni(
      v.value,
      (ke = E.value) != null ? ke : false,
      m,
      f,
      l.value,
      o.keepOrder
    ), [S, O] = fi(m, f, y, k), I = l.value;
    n.labelPosition = $t(
      p,
      S * I,
      O * I
    );
    let z = 0, T = 0;
    const A = h.value;
    if (A.source.type !== "none") {
      const le = A.source;
      z = le.margin + le.width, le.units === "strokeWidth" && (z *= A.normalWidth);
    }
    if (A.target.type !== "none") {
      const le = A.target;
      T = le.margin + le.width, le.units === "strokeWidth" && (T *= A.normalWidth);
    }
    o.margin && (z += o.margin, T += o.margin);
    const R = !!o.margin || A.source.type !== "none" || A.target.type !== "none";
    if (g.source === g.target) {
      n.origin = dt(m, f);
      const le = $.values(o.selfLoop, g), [Ve, ge] = Zi(
        m,
        y,
        le,
        R,
        z,
        T,
        (Xe = (Ne = v.value) == null ? void 0 : Ne.pointInGroup) != null ? Xe : 0,
        I
      );
      n.position = Ve, n.loop = ge, n.curve = void 0;
      return;
    } else
      n.loop = void 0;
    if (R && (z += S, T += O), o.type === "straight" || E.value)
      n.origin = p, n.curve = void 0, z === 0 && T === 0 ? n.position = n.origin : n.position = $t(n.origin, z * I, T * I);
    else {
      n.origin = dt(m, f);
      const le = v.value ? v.value.groupWidth / 2 - v.value.pointInGroup : 0, [Ve, ge] = Ai(
        n.origin,
        p,
        le,
        z * I,
        T * I
      );
      n.position = Ve, n.curve = ge;
    }
  }), w = watchEffect(() => {
    e.value[t] && (n.sourceMarkerId = c(
      h.value.source,
      true,
      n.sourceMarkerId,
      h.value.stroke.color,
      u
    ), n.targetMarkerId = c(
      h.value.target,
      false,
      n.targetMarkerId,
      h.value.stroke.color,
      u
    ));
  });
  n.stopWatchHandle = () => {
    x(), w(), d(n.sourceMarkerId), d(n.targetMarkerId);
  };
}
function Li(e, t) {
  return Object.entries(e).map(([n, o]) => {
    var i;
    return o.summarize ? {
      id: (i = Object.keys(o.edges)[0]) != null ? i : n,
      summarized: true,
      key: n,
      group: o,
      zIndex: Object.keys(o.edges).map((s) => {
        var r, a;
        return (a = (r = t[s]) == null ? void 0 : r.zIndex) != null ? a : 0;
      }).reduce((s, r) => Math.max(s, r))
    } : Object.entries(o.edges).map(
      ([s, r]) => {
        var a, l;
        return {
          id: s,
          summarized: false,
          key: s,
          edge: r,
          zIndex: (l = (a = t[s]) == null ? void 0 : a.zIndex) != null ? l : 0
        };
      }
    );
  }).flat();
}
function Ai(e, t, n, o, i) {
  const s = Q.fromLinePosition(e), r = Q.fromLinePosition(t), a = li(t), [l, u] = hi(
    s.source,
    s.target,
    a
  );
  let c, d;
  if (u === 0)
    return [e, d];
  if (n === 0)
    return o === 0 && i === 0 ? c = e : c = $t(e, o, i), [c, d];
  const h = Q.fromVectors(l, a), v = Fe(
    Q.fromVectors(l, s.source),
    h
  );
  if (o === 0 && i === 0)
    c = e;
  else {
    let g = o / u, y = i / u;
    v > 0 && (g *= -1, y *= -1), c = dt(
      Le(s.source, l, g),
      Le(s.target, l, -y)
    );
    let k = Fe(
      Q.fromVectors(l, s.source),
      Q.fromVectors(l, s.target)
    ), m = Fe(
      Q.fromPositions(l, c.p1),
      Q.fromPositions(l, c.p2)
    );
    if (v * k < 0 && (k = Lt(k), v * m < 0 && (m = Lt(m))), k * m < 0) {
      const f = a.clone().add(r.v.normalize().multiplyScalar(0.5));
      return c = dt(a, f), [c, d];
    }
  }
  const [E, x] = ai(c), w = At(E, l, x, v).map((g) => g.toObject());
  return d = {
    center: a,
    theta: v,
    circle: { center: l, radius: u },
    control: w
  }, [c, d];
}
function Zi(e, t, n, o, i, s, r, a) {
  const l = a, u = (n.radius + r / 2) * l, c = n.offset * l + u, d = (n.angle - 90) * (Math.PI / 180), h = V.fromObject({
    x: e.x + c * Math.cos(d),
    y: e.y + c * Math.sin(d)
  }), v = n.isClockwise;
  let E, x;
  if (o) {
    const m = et(
      h,
      u,
      V.fromObject(e),
      He(t) * l
    );
    if (m) {
      [E, x] = m;
      let f = 1;
      if (v || ([E, x] = [x, E], f = -1), i !== 0 || s !== 0) {
        const p = i * l / u * f, S = s * l / u * f;
        E = Le(E, h, p), x = Le(x, h, -S);
      }
    }
  }
  if (E === void 0 || x === void 0) {
    const m = V.fromObject(e).subtract(h).normalize().multiplyScalar(u);
    let f = 1 * (Math.PI / 180);
    v || (f *= -1), E = h.clone().add(ut(m, f)), x = h.clone().add(ut(m, -f));
  }
  const w = V.fromObject(E).subtract(h).angleDegree(), k = (V.fromObject(x).subtract(h).angleDegree() + 360 - w) % 360 >= 180;
  return [
    { p1: E, p2: x },
    {
      center: h,
      radius: [u, u],
      isLargeArc: v ? k : !k,
      isClockwise: v
    }
  ];
}
function Di(e, t, n) {
  const o = t.edgeGroups;
  Object.entries(o).filter(([i, s]) => s.summarize && !(i in e)).forEach(([i, s]) => {
    const r = { stroke: void 0 };
    r.stroke = computed(
      () => $.values(n.edge.summarized.stroke, s.edges)
    ), e[i] = r;
  }), Object.keys(e).forEach((i) => {
    var s;
    (s = t.edgeGroups[i]) != null && s.summarize || delete e[i];
  });
}
function xn(e, t) {
  return e.edges.map((n) => ({ edgeId: n, edge: t.objects.value[n] })).filter((n) => n.edge);
}
var Qe = class {
  static valueOf(t) {
    return Array.from(t.values());
  }
};
var Ni = 3;
var ji = 6;
var Xn = 500;
function ct(e) {
  return e === "touch" ? ji : Ni;
}
function Kt(e, t, n, o) {
  let i = e.get(t);
  if (i)
    i.id !== n && (i = void 0);
  else {
    const a = Array.from(e.entries()).find(([l, u]) => u.id === n);
    if (a) {
      const [l, u] = a;
      e.delete(l), i = u;
    }
  }
  let s, r;
  return [i, s, r] = qn(i, o, n), e.set(t, i), [s, r];
}
function qn(e, t, n) {
  const o = Date.now();
  e && o - e.lastTime <= Xn ? (e.count++, e.lastTime = o) : e = { count: 1, lastTime: o, id: n };
  const i = {
    view: window,
    screenX: t.screenX,
    screenY: t.screenY,
    clientX: t.clientX,
    clientY: t.clientY,
    ctrlKey: t.ctrlKey,
    shiftKey: t.shiftKey,
    altKey: t.altKey,
    metaKey: t.metaKey,
    button: t.button,
    buttons: t.buttons,
    detail: e.count
  };
  let s, r;
  return t instanceof PointerEvent ? (Object.assign(i, {
    pointerId: t.pointerId,
    width: t.width,
    height: t.height,
    pressure: t.pressure,
    tangentialPressure: t.tangentialPressure,
    tiltX: t.tiltX,
    tiltY: t.tiltY,
    twist: t.twist,
    pointerType: t.pointerType,
    isPrimary: t.isPrimary
  }), s = new PointerEvent("click", i), e.count === 2 && (r = new PointerEvent("dblclick", i))) : (s = new MouseEvent("click", i), e.count === 2 && (r = new MouseEvent("dblclick", i))), [e, s, r];
}
function Yt(e) {
  const t = Date.now();
  Array.from(e.entries()).filter(([n, o]) => t - o.lastTime > Xn).map(([n, o]) => e.delete(n));
}
function Bi(e, t, n, o, i, s, r) {
  const a = {
    pointers: /* @__PURE__ */ new Map(),
    follow: {
      followedPointerId: -1,
      nodeBasePositions: {}
    },
    hoveredNodesPre: /* @__PURE__ */ new Set(),
    clicks: /* @__PURE__ */ new Map()
  }, l = {
    pointermove: v,
    pointerup: x,
    pointercancel: E
  };
  function u(m) {
    const f = a.follow.followedPointerId === m.pointerId, p = i.has(m.nodeId), S = !(m.pointerId in a.pointers);
    if (f && S || f && !p) {
      const O = Qe.valueOf(a.pointers).find((I) => i.has(I.nodeId));
      if (!O) {
        a.follow = { followedPointerId: -1, nodeBasePositions: {} };
        return;
      }
      m = O, a.follow.followedPointerId = m.pointerId;
    } else {
      const O = a.pointers.get(a.follow.followedPointerId);
      if (!O) {
        a.follow = { followedPointerId: -1, nodeBasePositions: {} };
        return;
      }
      m = O;
    }
    if (f || p) {
      const O = Qe.valueOf(a.pointers).map((I) => I.nodeId);
      a.follow.nodeBasePositions = Object.fromEntries(
        Array.from(i).filter((I) => !O.includes(I)).filter((I) => {
          var z;
          return (z = e[I]) == null ? void 0 : z.draggable;
        }).map((I) => [I, Tt(t.nodes, I)])
      ), m.dragBasePosition = se({}, m.latestPosition), m.nodeBasePosition = Tt(t.nodes, m.nodeId);
    }
  }
  watch(i, (m) => {
    const f = a.pointers.get(a.follow.followedPointerId);
    f && u(f), m.size > 0 && n.selectionMode.value !== "node" ? n.selectionMode.value = "node" : m.size === 0 && n.selectionMode.value === "node" && (n.selectionMode.value = "container");
  }), watch(n.selectionMode, (m) => {
    m !== "node" && i.clear();
  });
  function c(m, f) {
    const p = m.dragBasePosition.x - f.pageX, S = m.dragBasePosition.y - f.pageY, O = a.follow.followedPointerId == m.pointerId ? se({
      [m.nodeId]: m.nodeBasePosition
    }, a.follow.nodeBasePositions) : { [m.nodeId]: m.nodeBasePosition }, I = s.value;
    return Object.fromEntries(
      Object.entries(O).map(([z, T]) => [
        z,
        {
          x: T.x - p / I,
          y: T.y - S / I
        }
      ])
    );
  }
  function d(m, f) {
    var S, O;
    if (f.isTrusted || f.shiftKey && !["container", "node"].includes(n.selectionMode.value))
      return;
    n.selectionMode.value = "node";
    const p = (O = (S = e[m]) == null ? void 0 : S.selectable) != null ? O : false;
    if (p) {
      const I = Qe.valueOf(a.pointers).filter((z) => i.has(z.nodeId)).length > 0;
      f.shiftKey || I ? i.has(m) ? i.delete(m) : typeof p == "number" && i.size >= p || i.add(m) : i.has(m) || (i.clear(), i.add(m));
    }
    r.emit("node:click", { node: m, event: f });
  }
  function h(m, f) {
    f.isTrusted || r.emit("node:dblclick", { node: m, event: f });
  }
  function v(m) {
    var O;
    m.stopPropagation();
    const f = a.pointers.get(m.pointerId);
    if (!f)
      return;
    f.latestPosition = { x: m.pageX, y: m.pageY }, f.moveCounter++;
    const p = ct(m.pointerType);
    if (f.moveCounter <= p || !((O = e[f.nodeId]) != null && O.draggable))
      return;
    if (f.moveCounter === p + 1) {
      const I = c(f, {
        pointerId: f.pointerId,
        pageX: f.dragBasePosition.x,
        pageY: f.dragBasePosition.y
      });
      r.emit("node:dragstart", I);
    }
    const S = c(f, m);
    r.emit("node:pointermove", S);
  }
  function E(m) {
    m.stopPropagation();
    let f = a.pointers.get(m.pointerId);
    if (f) {
      for (f of a.pointers.values()) {
        const p = f.nodeId, S = ct(m.pointerType);
        if (f.moveCounter > S) {
          const I = c(f, {
            pointerId: f.pointerId,
            pageX: f.latestPosition.x,
            pageY: f.latestPosition.y
          });
          r.emit("node:dragend", I);
        }
        r.emit("node:pointerup", { node: p, event: m });
      }
      a.pointers.clear(), a.follow = { followedPointerId: -1, nodeBasePositions: {} }, he(l).forEach(([p, S]) => {
        document.removeEventListener(p, S);
      }), n.viewMode.value = "default";
    }
  }
  function x(m) {
    var I, z, T;
    m.stopPropagation();
    const f = a.pointers.get(m.pointerId);
    if (!f)
      return;
    a.pointers.delete(m.pointerId);
    const p = f.nodeId, S = ct(m.pointerType), O = f.moveCounter > S;
    if (O) {
      if ((I = e[f.nodeId]) != null && I.draggable) {
        const A = c(f, m);
        r.emit("node:dragend", A), r.emit("node:pointerup", { node: p, event: m });
      }
    } else
      r.emit("node:pointerup", { node: p, event: m });
    if (!O) {
      const [A, R] = Kt(
        a.clicks,
        f.pointerId,
        p,
        m
      );
      (z = f.eventTarget) == null || z.dispatchEvent(A), R && ((T = f.eventTarget) == null || T.dispatchEvent(R));
    }
    a.pointers.size === 0 ? (a.follow = { followedPointerId: -1, nodeBasePositions: {} }, he(l).forEach(([A, R]) => {
      document.removeEventListener(A, R);
    }), Yt(a.clicks), n.viewMode.value = "default") : u(f), o.clear(), a.hoveredNodesPre.forEach(o.add, o);
  }
  function w(m, f) {
    if (f.button == 2 || (f.stopPropagation(), !["default", "node"].includes(n.viewMode.value)))
      return;
    a.pointers.size == 0 && (n.viewMode.value = "node", he(l).forEach(([S, O]) => {
      document.addEventListener(S, O);
    }));
    const p = {
      pointerId: f.pointerId,
      nodeId: m,
      moveCounter: 0,
      nodeBasePosition: Tt(t.nodes, m),
      dragBasePosition: { x: f.pageX, y: f.pageY },
      latestPosition: { x: f.pageX, y: f.pageY },
      eventTarget: f.currentTarget
    };
    a.pointers.set(f.pointerId, p), i.has(m) && (a.follow.followedPointerId < 0 ? (a.follow.followedPointerId = f.pointerId, u(p)) : delete a.follow.nodeBasePositions[p.nodeId]), r.emit("node:pointerdown", { node: m, event: f });
  }
  function g(m, f) {
    a.hoveredNodesPre.add(m), !(a.pointers.size > 0) && (o.add(m), r.emit("node:pointerover", { node: m, event: f }));
  }
  function y(m, f) {
    a.hoveredNodesPre.delete(m), !(a.pointers.size > 0) && (o.delete(m), r.emit("node:pointerout", { node: m, event: f }));
  }
  function k(m, f) {
    f.stopPropagation(), r.emit("node:contextmenu", { node: m, event: f });
  }
  return {
    handleNodePointerDownEvent: w,
    handleNodePointerOverEvent: g,
    handleNodePointerOutEvent: y,
    handleNodeClickEvent: d,
    handleNodeDoubleClickEvent: h,
    handleNodeContextMenu: k
  };
}
function Tt(e, t) {
  var o;
  const n = (o = e[t]) != null ? o : { x: 0, y: 0 };
  return se({}, n);
}
function Ri(e, t, n, o, i) {
  const s = {
    pointers: /* @__PURE__ */ new Map(),
    // <PointerId, ...>
    pointerPeekCount: 0,
    clicks: /* @__PURE__ */ new Map()
  }, r = {
    pointerup: l,
    pointercancel: u
  };
  watch(o, (f) => {
    f.size > 0 && t.selectionMode.value !== "edge" ? t.selectionMode.value = "edge" : f.size === 0 && t.selectionMode.value === "edge" && (t.selectionMode.value = "container");
  }), watch(t.selectionMode, (f) => {
    f !== "edge" && o.clear();
  });
  function a(f, p) {
    if (p.button == 2 || (p.stopPropagation(), !["default", "edge"].includes(t.viewMode.value)))
      return;
    s.pointers.size == 0 && (t.viewMode.value = "edge", he(r).forEach(([O, I]) => {
      document.addEventListener(O, I);
    }), s.pointerPeekCount = 0), s.pointerPeekCount++;
    const S = {
      pointerId: p.pointerId,
      id: f,
      eventTarget: p.currentTarget
    };
    s.pointers.set(p.pointerId, S), i.emit("edge:pointerdown", we(f, p));
  }
  function l(f) {
    var z, T;
    f.stopPropagation();
    const p = s.pointers.get(f.pointerId);
    if (!p)
      return;
    s.pointers.delete(f.pointerId);
    const S = p.id;
    i.emit("edge:pointerup", we(S, f));
    const [O, I] = Kt(
      s.clicks,
      p.pointerId,
      S instanceof Array ? S.join(",") : S,
      f
    );
    (z = p.eventTarget) == null || z.dispatchEvent(O), I && ((T = p.eventTarget) == null || T.dispatchEvent(I)), s.pointers.size === 0 && (s.pointerPeekCount = 0, he(r).forEach(([A, R]) => {
      document.removeEventListener(A, R);
    }), Yt(s.clicks), t.viewMode.value = "default");
  }
  function u(f) {
    if (f.stopPropagation(), !!s.pointers.get(f.pointerId)) {
      for (const S of s.pointers.values()) {
        const O = S.id;
        i.emit("edge:pointerup", we(O, f));
      }
      s.pointers.clear(), s.pointerPeekCount = 0, he(r).forEach(([S, O]) => {
        document.removeEventListener(S, O);
      }), i.emit("view:mode", "default");
    }
  }
  function c(f, p) {
    var I;
    if (p.isTrusted || p.shiftKey && !["container", "edge"].includes(t.selectionMode.value))
      return;
    t.selectionMode.value = "edge";
    const S = f instanceof Array ? f : [f], O = Qe.valueOf(s.pointers).filter((z) => (z.id instanceof Array ? z.id : [z.id]).every((A) => o.has(A))).length > 0;
    if (f instanceof Array)
      S.find((T) => {
        var A;
        return (A = e[T]) == null ? void 0 : A.selectable;
      }) && (p.shiftKey || O ? S.some((T) => o.has(T)) ? S.forEach((T) => o.delete(T)) : S.forEach((T) => {
        var R;
        const A = (R = e[T]) == null ? void 0 : R.selectable;
        typeof A == "number" && o.size >= A || o.add(T);
      }) : (o.clear(), S.forEach((T) => o.add(T))));
    else {
      const z = (I = e[f]) == null ? void 0 : I.selectable;
      z && (p.shiftKey || O ? o.has(f) ? o.delete(f) : typeof z == "number" && o.size >= z || o.add(f) : o.has(f) || (o.clear(), o.add(f)));
    }
    i.emit("edge:click", we(f, p));
  }
  function d(f, p) {
    p.isTrusted || i.emit("edge:dblclick", we(f, p));
  }
  function h(f, p) {
    n.add(f), i.emit("edge:pointerover", we(f, p));
  }
  function v(f, p) {
    n.delete(f), i.emit("edge:pointerout", we(f, p));
  }
  function E(f, p) {
    p.stopPropagation(), i.emit("edge:contextmenu", we(f, p));
  }
  function x(f, p) {
    if (p.button == 2 || (p.stopPropagation(), !["default", "edge"].includes(t.viewMode.value)))
      return;
    s.pointers.size == 0 && (t.viewMode.value = "edge", he(r).forEach(([O, I]) => {
      document.addEventListener(O, I);
    }), s.pointerPeekCount = 0), s.pointerPeekCount++;
    const S = {
      pointerId: p.pointerId,
      id: f,
      eventTarget: p.currentTarget
    };
    s.pointers.set(p.pointerId, S), i.emit("edge:pointerdown", we(f, p));
  }
  function w(f, p) {
    f.forEach((S) => n.add(S)), i.emit("edge:pointerover", we(f, p));
  }
  function g(f, p) {
    f.forEach((S) => n.delete(S)), i.emit("edge:pointerout", we(f, p));
  }
  function y(f, p) {
    c(f, p);
  }
  function k(f, p) {
    d(f, p);
  }
  function m(f, p) {
    p.stopPropagation(), i.emit("edge:contextmenu", we(f, p));
  }
  return {
    handleEdgePointerDownEvent: a,
    handleEdgePointerOverEvent: h,
    handleEdgePointerOutEvent: v,
    handleEdgeClickEvent: c,
    handleEdgeDoubleClickEvent: d,
    handleEdgeContextMenu: E,
    handleEdgesPointerDownEvent: x,
    handleEdgesPointerOverEvent: w,
    handleEdgesPointerOutEvent: g,
    handleEdgesClickEvent: y,
    handleEdgesDoubleClickEvent: k,
    handleEdgesContextMenu: m
  };
}
function we(e, t) {
  return e instanceof Array ? {
    edges: e,
    event: t,
    summarized: true
  } : {
    edge: e,
    edges: [e],
    event: t,
    summarized: false
  };
}
function Vi(e, t, n, o) {
  const i = {
    moveCounter: 0,
    pointerCounter: 0,
    clickState: void 0
  }, s = {
    pointermove: a,
    pointerup: l,
    pointercancel: l
  };
  function r(v) {
    i.moveCounter = 0, i.pointerCounter === 0 && he(s).forEach(([E, x]) => {
      document.addEventListener(E, x, { passive: true });
    }), i.pointerCounter++;
  }
  function a(v) {
    i.moveCounter++;
  }
  function l(v) {
    if (i.pointerCounter--, i.pointerCounter <= 0) {
      i.pointerCounter = 0, he(s).forEach(([x, w]) => {
        document.removeEventListener(x, w);
      });
      const E = ct(v.pointerType);
      if (i.moveCounter <= E) {
        if (v.shiftKey && t.selectionMode.value !== "container")
          return;
        t.selectionMode.value = "container";
        const [x, w, g] = qn(
          i.clickState,
          v,
          "view"
        );
        i.clickState = x, e.value.dispatchEvent(w), g && e.value.dispatchEvent(g);
      }
    }
  }
  function u(v) {
    v.isTrusted || (v.stopPropagation(), o.emit("view:click", { event: v }));
  }
  function c(v) {
    v.isTrusted || (v.stopPropagation(), o.emit("view:dblclick", { event: v }));
  }
  function d(v) {
    o.emit("view:contextmenu", { event: v }), i.pointerCounter > 0 && (i.pointerCounter = 0, he(s).forEach(([E, x]) => {
      var w;
      (w = e.value) == null || w.removeEventListener(E, x);
    }));
  }
  const h = (v) => {
    v.preventDefault();
  };
  onMounted(() => {
    const v = e.value;
    v && (v.addEventListener("pointerdown", r, { passive: true }), v.addEventListener("click", u, { passive: false }), v.addEventListener("dblclick", c, { passive: false }), v.addEventListener("contextmenu", d, { passive: false }), n.value && v.addEventListener("wheel", h, { passive: false }));
  }), onUnmounted(() => {
    const v = e.value;
    v && (v.removeEventListener("pointerdown", r), v.removeEventListener("click", u), v.removeEventListener("dblclick", c), v.removeEventListener("contextmenu", d), n.value && v.removeEventListener("wheel", h));
  }), watch(n, (v, E) => {
    const x = e.value;
    !x || v === E || (v ? x.addEventListener("wheel", h, { passive: false }) : x.removeEventListener("wheel", h));
  });
}
function Wi(e, t, n, o, i, s) {
  const r = {
    pointers: /* @__PURE__ */ new Map(),
    // <PointerId, ...>
    pointerPeekCount: 0,
    clicks: /* @__PURE__ */ new Map()
  };
  function a(g, y) {
    var k, m;
    return i.value ? { path: (m = (k = e[g]) == null ? void 0 : k.path) != null ? m : g, event: y } : { path: g, event: y };
  }
  const l = {
    pointerup: c,
    pointercancel: d
  };
  watch(o, (g) => {
    g.size > 0 && t.selectionMode.value !== "path" ? t.selectionMode.value = "path" : g.size === 0 && t.selectionMode.value === "path" && (t.selectionMode.value = "container");
  }), watch(t.selectionMode, (g) => {
    g !== "path" && o.clear();
  });
  function u(g, y) {
    var m;
    if (!((m = e[g]) != null && m.clickable) || y.button == 2 || (y.stopPropagation(), !["default", "path"].includes(t.viewMode.value)))
      return;
    r.pointers.size == 0 && (t.viewMode.value = "path", he(l).forEach(([f, p]) => {
      document.addEventListener(f, p);
    }), r.pointerPeekCount = 0), r.pointerPeekCount++;
    const k = {
      pointerId: y.pointerId,
      id: g,
      eventTarget: y.currentTarget
    };
    r.pointers.set(y.pointerId, k), s.emit("path:pointerdown", a(g, y));
  }
  function c(g) {
    var p, S;
    const y = r.pointers.get(g.pointerId);
    if (!y)
      return;
    g.stopPropagation(), r.pointers.delete(g.pointerId);
    const k = y.id;
    s.emit("path:pointerup", a(k, g));
    const [m, f] = Kt(
      r.clicks,
      y.pointerId,
      k,
      g
    );
    (p = y.eventTarget) == null || p.dispatchEvent(m), f && ((S = y.eventTarget) == null || S.dispatchEvent(f)), r.pointers.size === 0 && (r.pointerPeekCount = 0, he(l).forEach(([O, I]) => {
      document.removeEventListener(O, I);
    }), Yt(r.clicks), t.viewMode.value = "default");
  }
  function d(g) {
    if (r.pointers.get(g.pointerId)) {
      g.stopPropagation();
      for (const k of r.pointers.values()) {
        const m = k.id;
        s.emit("path:pointerup", a(m, g));
      }
      r.pointers.clear(), r.pointerPeekCount = 0, he(l).forEach(([k, m]) => {
        document.removeEventListener(k, m);
      }), s.emit("view:mode", "default");
    }
  }
  function h(g, y) {
    var k;
    (k = e[g]) != null && k.hoverable && (n.add(g), s.emit("path:pointerover", a(g, y)));
  }
  function v(g, y) {
    var k;
    (k = e[g]) != null && k.hoverable && (n.delete(g), s.emit("path:pointerout", a(g, y)));
  }
  function E(g, y) {
    var m, f, p;
    if (y.isTrusted || !((m = e[g]) != null && m.clickable) || y.shiftKey && !["container", "path"].includes(t.selectionMode.value))
      return;
    t.selectionMode.value = "path";
    const k = (p = (f = e[g]) == null ? void 0 : f.selectable) != null ? p : false;
    if (k) {
      const S = Qe.valueOf(r.pointers).filter((O) => o.has(O.id)).length > 0;
      y.shiftKey || S ? o.has(g) ? o.delete(g) : typeof k == "number" && o.size >= k || o.add(g) : o.has(g) || (o.clear(), o.add(g));
    }
    s.emit("path:click", a(g, y));
  }
  function x(g, y) {
    var k;
    y.isTrusted || (k = e[g]) != null && k.clickable && s.emit("path:dblclick", a(g, y));
  }
  function w(g, y) {
    var k;
    (k = e[g]) != null && k.clickable && (y.stopPropagation(), s.emit("path:contextmenu", a(g, y)));
  }
  return {
    handlePathPointerDownEvent: u,
    handlePathPointerOverEvent: h,
    handlePathPointerOutEvent: v,
    handlePathClickEvent: E,
    handlePathDoubleClickEvent: x,
    handlePathContextMenu: w
  };
}
function Hi(e) {
  return Ee(this, null, function* () {
    const n = yield (yield fetch(e)).blob();
    return new Promise((o, i) => {
      try {
        const s = new FileReader();
        s.onload = function() {
          o(this.result);
        }, s.readAsDataURL(n);
      } catch (s) {
        i(s);
      }
    });
  });
}
function Dt(e, t, n) {
  var s;
  const o = e.createSVGPoint();
  o.x = n.x, o.y = n.y;
  const i = o.matrixTransform((s = t.getCTM()) == null ? void 0 : s.inverse());
  return { x: i.x, y: i.y };
}
function _i(e, t, n) {
  const o = e.createSVGPoint();
  o.x = n.x, o.y = n.y;
  const i = o.matrixTransform(t.getCTM());
  return { x: i.x, y: i.y };
}
function Gn(e, t, n) {
  var u;
  const o = e.cloneNode(true), i = t.getBBox(), s = 1 / n, r = {
    x: Math.floor((i.x - 10) * s),
    y: Math.floor((i.y - 10) * s),
    width: Math.ceil((i.width + 20) * s),
    height: Math.ceil((i.height + 20) * s)
  };
  o.setAttribute("width", r.width.toString()), o.setAttribute("height", r.height.toString());
  const a = o.querySelector(".v-ng-viewport");
  a.setAttribute("transform", `translate(${-r.x} ${-r.y}), scale(${s})`), a.removeAttribute("style"), o.setAttribute("viewBox", `0 0 ${r.width} ${r.height}`), o.removeAttribute("style");
  const l = document.createNodeIterator(o, NodeFilter.SHOW_COMMENT);
  for (; l.nextNode(); ) {
    const c = l.referenceNode;
    (u = c.parentNode) == null || u.removeChild(c);
  }
  return o;
}
function Fi(e) {
  return Ee(this, null, function* () {
    let t = false, n = e.getAttribute("href");
    if (n || (t = true, n = e.getAttribute("xlink:href")), !(!n || n.startsWith("data:")))
      try {
        const o = yield Hi(n);
        e.setAttribute(t ? "xlink:href" : "href", o);
      } catch (o) {
        console.warn("Image download failed.", n);
        return;
      }
  });
}
function Ui(i, s, r) {
  return Ee(this, arguments, function* (e, t, n, o = {}) {
    const a = Gn(e, t, n);
    if (o.embedImages) {
      const u = Array.from(a.querySelectorAll("image")).map((c) => Fi(c));
      yield Promise.all(u);
    }
    return a;
  });
}
function Xi(e, t, n, o, i, s) {
  const r = computed(
    () => !!s.node.selectable && s.view.boxSelectionEnabled
  ), a = computed(() => t.viewMode.value === "box-selection"), l = ref(), u = ref(), c = {
    pointers: /* @__PURE__ */ new Set(),
    // Set of pointers being pressed
    points: /* @__PURE__ */ new Map(),
    // Point indicated by each pointer
    startPoint: null,
    // Point where the drag started
    selectedNodesAtSelectStarted: /* @__PURE__ */ new Set(),
    // Nodes selected at the start of the selection
    selectionType: "append",
    // Selection method for nodes included in the dragged range
    options: {
      // options specified by user at start of selection mode
      stopTrigger: "pointerup",
      selectionType: "append",
      selectionTypeWithShiftKey: "same"
    }
  }, d = debounce_default(
    () => {
      qi(
        q(e.value, "container"),
        q(l.value, "viewport"),
        u,
        n.nodes,
        o,
        i,
        c.selectedNodesAtSelectStarted,
        c.selectionType
      );
    },
    50,
    { maxWait: 100 }
  ), h = new Gi(
    e,
    E,
    x,
    w,
    v,
    g
  );
  function v(p) {
    if (c.options.stopTrigger !== "click" || c.pointers.size > 0) return;
    const S = { x: p.offsetX, y: p.offsetY };
    c.startPoint && V.fromObject(c.startPoint).distance(S) > 10 || f();
  }
  function E(p) {
    p.stopPropagation();
    const S = { x: p.offsetX, y: p.offsetY };
    c.pointers.size === 0 && (c.startPoint = S, h.activate(), c.selectedNodesAtSelectStarted.clear(), i.forEach((O) => c.selectedNodesAtSelectStarted.add(O)), c.options.selectionTypeWithShiftKey === "same" ? c.selectionType = c.options.selectionType : c.selectionType = p.shiftKey ? c.options.selectionTypeWithShiftKey : c.options.selectionType), c.pointers.has(p.pointerId) || c.pointers.add(p.pointerId), c.points.set(p.pointerId, S), y();
  }
  function x(p) {
    if (c.pointers.delete(p.pointerId), c.pointers.size === 1) {
      const S = q(e.value).getBoundingClientRect(), O = { x: p.x - S.x, y: p.y - S.y };
      c.startPoint = O;
    } else c.pointers.size === 0 && (h.deactivate(), c.options.stopTrigger === "pointerup" && f(), c.selectedNodesAtSelectStarted.clear());
    y();
  }
  function w(p) {
    const S = q(e.value).getBoundingClientRect(), O = { x: p.x - S.x, y: p.y - S.y };
    c.points.set(p.pointerId, O), y(), d();
  }
  function g(p) {
    p.key === "Escape" && c.options.stopTrigger !== "manual" && (p.stopPropagation(), f());
  }
  function y() {
    let p, S;
    const O = Array.from(c.pointers);
    if (O.length >= 2) {
      const I = O[0], z = O[O.length - 1];
      p = c.points.get(I), S = c.points.get(z);
    } else if (c.startPoint && O.length === 1) {
      const I = O[0];
      p = c.startPoint, S = c.points.get(I);
    } else
      p = void 0, S = void 0;
    p && S ? (u.value = {
      pos: {
        x: Math.min(p.x, S.x),
        y: Math.min(p.y, S.y)
      },
      size: {
        width: Math.abs(S.x - p.x),
        height: Math.abs(S.y - p.y)
      }
    }, u.value.size.width === 0 && (u.value.size.width = 1), u.value.size.height === 0 && (u.value.size.height = 1)) : u.value && (u.value = void 0);
  }
  const k = new Ki(
    e,
    // key down
    (p) => {
      r.value && s.view.selection.detector(p) && (m({
        stop: "manual",
        type: "append",
        withShiftKey: "invert"
      }), k.activate());
    },
    // key up
    (p) => {
      r.value && s.view.selection.detector(p) && (c.pointers.size === 0 ? f() : c.options.stopTrigger = "pointerup", k.deactivate());
    }
  );
  watch(r, (p) => {
    p ? k.register() : k.unregister();
  }), onMounted(() => {
    var p;
    l.value = (p = e.value) == null ? void 0 : p.querySelector(".v-ng-viewport"), r.value && k.register();
  }), onUnmounted(() => {
    f(), r.value && k.unregister();
  });
  function m(p = {}) {
    var S, O, I;
    c.options = {
      stopTrigger: (S = p.stop) != null ? S : "pointerup",
      selectionType: (O = p.type) != null ? O : "append",
      selectionTypeWithShiftKey: (I = p.withShiftKey) != null ? I : "same"
    }, t.viewMode.value !== "box-selection" && (t.viewMode.value = "box-selection", c.pointers.clear(), h.register());
  }
  function f() {
    t.viewMode.value === "box-selection" && (t.viewMode.value = "default", h.unregister());
  }
  return { isBoxSelectionMode: a, selectionBox: u, startBoxSelection: m, stopBoxSelection: f };
}
function qi(e, t, n, o, i, s, r, a) {
  if (!n.value) return;
  const l = n.value, u = Dt(e, t, l.pos), c = Dt(e, t, {
    x: l.pos.x + l.size.width,
    y: l.pos.y + l.size.height
  }), d = new Set(
    Object.entries(o).filter(([h, v]) => u.x <= v.x && v.x <= c.x && u.y <= v.y && v.y <= c.y).map(([h, v]) => h)
  );
  if (a === "append")
    s.forEach((h) => {
      d.has(h) || s.delete(h);
    }), d.forEach((h) => {
      var E, x;
      const v = (x = (E = i[h]) == null ? void 0 : E.selectable) != null ? x : false;
      (v === true || typeof v == "number" && s.size < v) && s.add(h);
    });
  else {
    const h = new Set(r);
    h.forEach((v) => {
      d.has(v) && h.delete(v);
    }), d.forEach((v) => {
      var E, x;
      if (!r.has(v)) {
        const w = (x = (E = i[v]) == null ? void 0 : E.selectable) != null ? x : false;
        (w === true || typeof w == "number" && h.size < w) && h.add(v);
      }
    }), s.clear(), h.forEach((v) => s.add(v));
  }
}
var Gi = class {
  constructor(t, n, o, i, s, r) {
    this._container = t, this._handlePointerDownEvent = n, this._handlePointerUpEvent = o, this._handlePointerMoveEvent = i, this._handleClickEvent = s, this._handleKeyDownEvent = r, this._ignoreEvent = (a) => a.stopPropagation();
  }
  register() {
    const t = { capture: true, passive: false }, n = q(this._container.value, "container");
    n.addEventListener("pointerdown", this._handlePointerDownEvent, t), n.addEventListener("click", this._handleClickEvent, t), n.addEventListener("pointerenter", this._ignoreEvent, t), n.addEventListener("pointerleave", this._ignoreEvent, t), document.addEventListener("keydown", this._handleKeyDownEvent, t);
  }
  activate() {
    const t = { capture: true, passive: false };
    document.addEventListener("pointermove", this._handlePointerMoveEvent, t), document.addEventListener("pointerup", this._handlePointerUpEvent, t);
  }
  deactivate() {
    const t = { capture: true };
    document.removeEventListener("pointermove", this._handlePointerMoveEvent, t), document.removeEventListener("pointerup", this._handlePointerUpEvent, t);
  }
  unregister() {
    this.deactivate();
    const t = { capture: true };
    if (this._container.value) {
      const n = this._container.value;
      n.removeEventListener("pointerdown", this._handlePointerDownEvent, t), n.removeEventListener("click", this._handleClickEvent, t), n.removeEventListener("pointerenter", this._ignoreEvent, t), n.removeEventListener("pointerleave", this._ignoreEvent, t), document.removeEventListener("keydown", this._handleKeyDownEvent, t);
    }
  }
};
var Ki = class {
  constructor(t, n, o) {
    this._container = t, this._handleKeyDownEvent = n, this._handleKeyUpEvent = o, this._preventDefault = (i) => {
      i.stopPropagation(), i.preventDefault();
    };
  }
  register() {
    document.addEventListener("keydown", this._handleKeyDownEvent, { capture: true, passive: true });
  }
  activate() {
    document.addEventListener("keyup", this._handleKeyUpEvent, { capture: true, passive: true }), q(this._container.value, "container").addEventListener("contextmenu", this._preventDefault, { passive: false });
  }
  deactivate() {
    document.removeEventListener("keyup", this._handleKeyUpEvent, { capture: true }), this._container.value && this._container.value.removeEventListener("contextmenu", this._preventDefault);
  }
  unregister() {
    this.deactivate(), document.removeEventListener("keydown", this._handleKeyDownEvent, { capture: true });
  }
};
var Kn = Symbol("mouseEventHandlers");
function Yi(e, t, n, o, i, s, r, a, l, u, c, d, h, v, E, x) {
  const w = {
    selectionMode: ref("container"),
    viewMode: ref("default")
  };
  r.size > 0 ? w.selectionMode.value = "node" : a.size > 0 ? w.selectionMode.value = "edge" : l.size > 0 && (w.selectionMode.value = "path"), watch(w.viewMode, (y) => {
    x.emit("view:mode", y);
  }), Vi(e, w, v, x);
  const g = se(se(se(se({
    selectedNodes: r,
    hoveredNodes: u,
    selectedEdges: a,
    hoveredEdges: c,
    selectedPaths: l,
    hoveredPaths: d
  }, Bi(
    o,
    t,
    w,
    u,
    r,
    n,
    x
  )), Ri(i, w, c, a, x)), Wi(
    s,
    w,
    d,
    l,
    h,
    x
  )), Xi(
    e,
    w,
    t,
    o,
    r,
    E
  ));
  return provide(Kn, g), g;
}
function it() {
  return q(inject(Kn), "mouseEventHandlers");
}
function Qi(e) {
  return { all: e = e || /* @__PURE__ */ new Map(), on: function(t, n) {
    var o = e.get(t);
    o ? o.push(n) : e.set(t, [n]);
  }, off: function(t, n) {
    var o = e.get(t);
    o && (n ? o.splice(o.indexOf(n) >>> 0, 1) : e.set(t, []));
  }, emit: function(t, n) {
    var o = e.get(t);
    o && o.slice().map(function(i) {
      i(n);
    }), (o = e.get("*")) && o.slice().map(function(i) {
      i(t, n);
    });
  } };
}
var Yn = Symbol("emitter");
function Ji() {
  const e = Qi();
  return provide(Yn, e), e;
}
function es() {
  return q(inject(Yn), "event emitter");
}
var ft = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
function ts(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var wt = {
  /**
   * Get global this object
   *
   * @return {Object}        global this object
   */
  getGlobalThis: function() {
    if (typeof globalThis != "undefined") return globalThis;
    if (typeof self != "undefined") return self;
    if (typeof window != "undefined") return window;
    if (typeof ft != "undefined") return ft;
    if (typeof this != "undefined") return this;
    throw new Error("Unable to locate global `this`");
  },
  /**
   * Extends an object
   *
   * @param  {Object} target object to extend
   * @param  {Object} source object to take properties from
   * @return {Object}        extended object
   */
  extend: function(e, t) {
    e = e || {};
    for (var n in t)
      this.isObject(t[n]) ? e[n] = this.extend(e[n], t[n]) : e[n] = t[n];
    return e;
  },
  /**
   * Checks if an object is a DOM element
   *
   * @param  {Object}  o HTML element or String
   * @return {Boolean}   returns true if object is a DOM element
   */
  isElement: function(e) {
    return e instanceof HTMLElement || e instanceof SVGElement || e instanceof SVGSVGElement || //DOM2
    e && typeof e == "object" && e !== null && e.nodeType === 1 && typeof e.nodeName == "string";
  },
  /**
   * Checks if an object is an Object
   *
   * @param  {Object}  o Object
   * @return {Boolean}   returns true if object is an Object
   */
  isObject: function(e) {
    return Object.prototype.toString.call(e) === "[object Object]";
  },
  /**
   * Checks if variable is Number
   *
   * @param  {Integer|Float}  n
   * @return {Boolean}   returns true if variable is Number
   */
  isNumber: function(e) {
    return !isNaN(parseFloat(e)) && isFinite(e);
  },
  /**
   * Search for an SVG element
   *
   * @param  {Object|String} elementOrSelector DOM Element or selector String
   * @return {Object|Null}                   SVG or null
   */
  getSvg: function(e) {
    var t, n;
    if (this.isElement(e))
      t = e;
    else if (typeof e == "string" || e instanceof String) {
      if (t = document.querySelector(e), !t)
        throw new Error(
          "Provided selector did not find any elements. Selector: " + e
        );
    } else
      throw new Error("Provided selector is not an HTML object nor String");
    if (t.tagName.toLowerCase() === "svg")
      n = t;
    else if (t.tagName.toLowerCase() === "object")
      n = t.contentDocument.documentElement;
    else if (t.tagName.toLowerCase() === "embed")
      n = t.getSVGDocument().documentElement;
    else
      throw t.tagName.toLowerCase() === "img" ? new Error(
        'Cannot script an SVG in an "img" element. Please use an "object" element or an in-line SVG.'
      ) : new Error("Cannot get SVG.");
    return n;
  },
  /**
   * Attach a given context to a function
   * @param  {Function} fn      Function
   * @param  {Object}   context Context
   * @return {Function}           Function with certain context
   */
  proxy: function(e, t) {
    return function() {
      return e.apply(t, arguments);
    };
  },
  /**
   * Returns object type
   * Uses toString that returns [object SVGPoint]
   * And than parses object type from string
   *
   * @param  {Object} o Any object
   * @return {String}   Object type
   */
  getType: function(e) {
    return Object.prototype.toString.apply(e).replace(/^\[object\s/, "").replace(/\]$/, "");
  },
  /**
   * If it is a touch event than add clientX and clientY to event object
   *
   * @param  {Event} evt
   * @param  {SVGSVGElement} svg
   */
  mouseAndTouchNormalize: function(e, t) {
    if (e.clientX === void 0 || e.clientX === null)
      if (e.clientX = 0, e.clientY = 0, e.touches !== void 0 && e.touches.length) {
        if (e.touches[0].clientX !== void 0)
          e.clientX = e.touches[0].clientX, e.clientY = e.touches[0].clientY;
        else if (e.touches[0].pageX !== void 0) {
          var n = t.getBoundingClientRect();
          e.clientX = e.touches[0].pageX - n.left, e.clientY = e.touches[0].pageY - n.top;
        }
      } else e.originalEvent !== void 0 && e.originalEvent.clientX !== void 0 && (e.clientX = e.originalEvent.clientX, e.clientY = e.originalEvent.clientY);
  },
  /**
   * If it is a touch event than add clientX and clientY to event object
   *
   * @param  {Event} evt
   * @param  {SVGSVGElement} svg
   * @param  {Number} touch
   */
  touchNormalize: function(e, t, n) {
    if (e.touches !== void 0 && e.touches.length) {
      if (e.touches[n].clientX !== void 0)
        e.clientX = e.touches[n].clientX, e.clientY = e.touches[n].clientY;
      else if (e.touches[n].pageX !== void 0) {
        var o = t.getBoundingClientRect();
        e.clientX = e.touches[n].pageX - o.left, e.clientY = e.touches[n].pageY - o.top;
      }
    } else
      (e.clientX === void 0 || e.clientX === null) && (e.clientX = 0, e.clientY = 0, e.originalEvent !== void 0 && e.originalEvent.clientX !== void 0 && (e.clientX = e.originalEvent.clientX, e.clientY = e.originalEvent.clientY));
  },
  /**
   * Check if an event is a double click/tap
   * TODO: For touch gestures use a library (hammer.js) that takes in account other events
   * (touchmove and touchend). It should take in account tap duration and traveled distance
   *
   * @param  {Event}  evt
   * @param  {Event}  prevEvt Previous Event
   * @return {Boolean}
   */
  isDblClick: function(e, t) {
    if (e.detail === 2)
      return true;
    if (t != null) {
      var n = e.timeStamp - t.timeStamp, o = Math.sqrt(
        Math.pow(e.clientX - t.clientX, 2) + Math.pow(e.clientY - t.clientY, 2)
      );
      return n < 250 && o < 10;
    }
    return false;
  },
  /**
   * Returns current timestamp as an integer
   *
   * @return {Number}
   */
  now: Date.now || function() {
    return (/* @__PURE__ */ new Date()).getTime();
  },
  // From underscore.
  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  throttle: function(e, t, n) {
    var o = this, i, s, r, a = null, l = 0;
    n || (n = {});
    var u = function() {
      l = n.leading === false ? 0 : o.now(), a = null, r = e.apply(i, s), a || (i = s = null);
    };
    return function() {
      var c = o.now();
      !l && n.leading === false && (l = c);
      var d = t - (c - l);
      return i = this, s = arguments, d <= 0 || d > t ? (clearTimeout(a), a = null, l = c, r = e.apply(i, s), a || (i = s = null)) : !a && n.trailing !== false && (a = setTimeout(u, d)), r;
    };
  },
  /**
   * Create a requestAnimationFrame simulation
   *
   * @param  {Number|String} refreshRate
   * @return {Function}
   */
  createRequestAnimationFrame: function(e) {
    var t = null;
    return e !== "auto" && e < 60 && e > 1 && (t = Math.floor(1e3 / e)), t === null ? window.requestAnimationFrame || kn(33) : kn(t);
  },
  /**
   * Calculate distance of points
   *
   * @param  {SVGPoint} point1
   * @param  {SVGPoint} point2
   * @return {Number}
   */
  calculateDistance: function(e, t) {
    var n = e.x - t.x, o = e.y - t.y;
    return Math.sqrt(n * n + o * o);
  }
};
function kn(e) {
  return function(t) {
    window.setTimeout(t, e);
  };
}
var ns = wt;
var os = function() {
  var e = "", t, n, o, i = [], s = { passive: true }, r = { passive: false };
  ns.getGlobalThis().addEventListener ? (t = "addEventListener", n = "removeEventListener") : (t = "attachEvent", n = "detachEvent", e = "on");
  function a() {
    return o || (o = "onwheel" in document.createElement("div") ? "wheel" : document.onmousewheel !== void 0 ? "mousewheel" : "DOMMouseScroll"), o;
  }
  function l(x, w) {
    var g = function(y) {
      !y && (y = window.event);
      var k = {
        // keep a ref to the original event object
        originalEvent: y,
        target: y.target || y.srcElement,
        type: "wheel",
        deltaMode: y.type == "MozMousePixelScroll" ? 0 : 1,
        deltaX: 0,
        delatZ: 0,
        preventDefault: function() {
          y.preventDefault ? y.preventDefault() : y.returnValue = false;
        }
      };
      return a() == "mousewheel" ? (k.deltaY = -0.025 * y.wheelDelta, y.wheelDeltaX && (k.deltaX = -0.025 * y.wheelDeltaX)) : k.deltaY = y.detail, w(k);
    };
    return i.push({
      element: x,
      fn: g
    }), g;
  }
  function u(x) {
    for (var w = 0; w < i.length; w++)
      if (i[w].element === x)
        return i[w].fn;
    return function() {
    };
  }
  function c(x) {
    for (var w = 0; w < i.length; w++)
      if (i[w].element === x)
        return i.splice(w, 1);
  }
  function d(x, w, g, y) {
    var k;
    a() === "wheel" ? k = g : k = l(x, g), x[t](
      e + w,
      k,
      y ? s : r
    );
  }
  function h(x, w, g, y) {
    var k;
    a() === "wheel" ? k = g : k = u(x), x[n](
      e + w,
      k,
      y ? s : r
    ), c(x);
  }
  function v(x, w, g) {
    d(x, a(), w, g), a() == "DOMMouseScroll" && d(
      x,
      "MozMousePixelScroll",
      w,
      g
    );
  }
  function E(x, w, g) {
    h(x, a(), w, g), a() == "DOMMouseScroll" && h(
      x,
      "MozMousePixelScroll",
      w,
      g
    );
  }
  return {
    on: v,
    off: E
  };
}();
var at2 = wt;
var Qn = "unknown";
typeof document != "undefined" && document.documentMode && (Qn = "ie");
var Qt = {
  svgNS: "http://www.w3.org/2000/svg",
  xmlNS: "http://www.w3.org/XML/1998/namespace",
  xmlnsNS: "http://www.w3.org/2000/xmlns/",
  xlinkNS: "http://www.w3.org/1999/xlink",
  evNS: "http://www.w3.org/2001/xml-events",
  /**
   * Get svg dimensions: width and height
   *
   * @param  {SVGSVGElement} svg
   * @return {Object}     {width: 0, height: 0}
   */
  getBoundingClientRectNormalized: function(e) {
    if (e.clientWidth && e.clientHeight)
      return { width: e.clientWidth, height: e.clientHeight };
    if (e.getBoundingClientRect())
      return e.getBoundingClientRect();
    throw new Error("Cannot get BoundingClientRect for SVG.");
  },
  /**
   * Gets g element with class of "viewport" or creates it if it doesn't exist
   *
   * @param  {SVGSVGElement} svg
   * @return {SVGElement}     g (group) element
   */
  getOrCreateViewport: function(e, t) {
    var n = null;
    if (at2.isElement(t) ? n = t : n = e.querySelector(t), !n) {
      var o = Array.prototype.slice.call(e.childNodes || e.children).filter(function(l) {
        return l.nodeName !== "defs" && l.nodeName !== "#text";
      });
      o.length === 1 && o[0].nodeName === "g" && o[0].getAttribute("transform") === null && (n = o[0]);
    }
    if (!n) {
      var i = "viewport-" + (/* @__PURE__ */ new Date()).toISOString().replace(/\D/g, "");
      n = document.createElementNS(this.svgNS, "g"), n.setAttribute("id", i);
      var s = e.childNodes || e.children;
      if (s && s.length > 0)
        for (var r = s.length; r > 0; r--)
          s[s.length - r].nodeName !== "defs" && n.appendChild(s[s.length - r]);
      e.appendChild(n);
    }
    var a = [];
    return n.getAttribute("class") && (a = n.getAttribute("class").split(" ")), ~a.indexOf("svg-pan-zoom_viewport") || (a.push("svg-pan-zoom_viewport"), n.setAttribute("class", a.join(" "))), n;
  },
  /**
   * Set SVG attributes
   *
   * @param  {SVGSVGElement} svg
   */
  setupSvgAttributes: function(e) {
    if (e.setAttribute("xmlns", this.svgNS), e.setAttributeNS(this.xmlnsNS, "xmlns:xlink", this.xlinkNS), e.setAttributeNS(this.xmlnsNS, "xmlns:ev", this.evNS), e.parentNode !== null) {
      var t = e.getAttribute("style") || "";
      t.toLowerCase().indexOf("overflow") === -1 && e.setAttribute("style", "overflow: hidden; " + t);
    }
  },
  /**
   * How long Internet Explorer takes to finish updating its display (ms).
   */
  internetExplorerRedisplayInterval: 300,
  /**
   * Forces the browser to redisplay all SVG elements that rely on an
   * element defined in a 'defs' section. It works globally, for every
   * available defs element on the page.
   * The throttling is intentionally global.
   *
   * This is only needed for IE. It is as a hack to make markers (and 'use' elements?)
   * visible after pan/zoom when there are multiple SVGs on the page.
   * See bug report: https://connect.microsoft.com/IE/feedback/details/781964/
   * also see svg-pan-zoom issue: https://github.com/ariutta/svg-pan-zoom/issues/62
   */
  refreshDefsGlobal: at2.throttle(
    function() {
      for (var e = document.querySelectorAll("defs"), t = e.length, n = 0; n < t; n++) {
        var o = e[n];
        o.parentNode.insertBefore(o, o);
      }
    },
    ft ? ft.internetExplorerRedisplayInterval : null
  ),
  /**
   * Sets the current transform matrix of an element
   *
   * @param {SVGElement} element
   * @param {SVGMatrix} matrix  CTM
   * @param {SVGElement} defs
   */
  setCTM: function(e, t, n) {
    var o = this, i = "matrix(" + t.a + "," + t.b + "," + t.c + "," + t.d + "," + t.e + "," + t.f + ")";
    e.setAttributeNS(null, "transform", i), "transform" in e.style ? e.style.transform = i : "-ms-transform" in e.style ? e.style["-ms-transform"] = i : "-webkit-transform" in e.style && (e.style["-webkit-transform"] = i), Qn === "ie" && n && (n.parentNode.insertBefore(n, n), window.setTimeout(function() {
      o.refreshDefsGlobal();
    }, o.internetExplorerRedisplayInterval));
  },
  /**
   * Instantiate an SVGPoint object with given event coordinates
   *
   * @param {Event} evt
   * @param  {SVGSVGElement} svg
   * @return {SVGPoint}     point
   */
  getEventPoint: function(e, t) {
    var n = t.createSVGPoint();
    return at2.mouseAndTouchNormalize(e, t), n.x = e.clientX, n.y = e.clientY, n;
  },
  /**
   * Instantiate an SVGPoint object with given touch event coordinates
   *
   * @param {Event} evt
   * @param  {SVGSVGElement} svg
   * @param  {Number} touch
   * @return {SVGPoint}     point
   */
  getTouchPoint: function(e, t, n) {
    var o = t.createSVGPoint();
    return at2.touchNormalize(e, t, n), o.x = e.clientX, o.y = e.clientY, o;
  },
  /**
   * Get SVG center point
   *
   * @param  {SVGSVGElement} svg
   * @return {SVGPoint}
   */
  getSvgCenterPoint: function(e, t, n) {
    return this.createSVGPoint(e, t / 2, n / 2);
  },
  /**
   * Create a SVGPoint with given x and y
   *
   * @param  {SVGSVGElement} svg
   * @param  {Number} x
   * @param  {Number} y
   * @return {SVGPoint}
   */
  createSVGPoint: function(e, t, n) {
    var o = e.createSVGPoint();
    return o.x = t, o.y = n, o;
  }
};
var pe = Qt;
var is = {
  enable: function(e) {
    var t = e.svg.querySelector("defs");
    t || (t = document.createElementNS(pe.svgNS, "defs"), e.svg.appendChild(t));
    var n = t.querySelector("style#svg-pan-zoom-controls-styles");
    if (!n) {
      var o = document.createElementNS(pe.svgNS, "style");
      o.setAttribute("id", "svg-pan-zoom-controls-styles"), o.setAttribute("type", "text/css"), o.textContent = ".svg-pan-zoom-control { cursor: pointer; fill: black; fill-opacity: 0.333; } .svg-pan-zoom-control:hover { fill-opacity: 0.8; } .svg-pan-zoom-control-background { fill: white; fill-opacity: 0.5; } .svg-pan-zoom-control-background { fill-opacity: 0.8; }", t.appendChild(o);
    }
    var i = document.createElementNS(pe.svgNS, "g");
    i.setAttribute("id", "svg-pan-zoom-controls"), i.setAttribute(
      "transform",
      "translate(" + (e.width - 70) + " " + (e.height - 76) + ") scale(0.75)"
    ), i.setAttribute("class", "svg-pan-zoom-control"), i.appendChild(this._createZoomIn(e)), i.appendChild(this._createZoomReset(e)), i.appendChild(this._createZoomOut(e)), e.svg.appendChild(i), e.controlIcons = i;
  },
  _createZoomIn: function(e) {
    var t = document.createElementNS(pe.svgNS, "g");
    t.setAttribute("id", "svg-pan-zoom-zoom-in"), t.setAttribute("transform", "translate(30.5 5) scale(0.015)"), t.setAttribute("class", "svg-pan-zoom-control"), t.addEventListener(
      "click",
      function() {
        e.getPublicInstance().zoomIn();
      },
      false
    ), t.addEventListener(
      "touchstart",
      function() {
        e.getPublicInstance().zoomIn();
      },
      false
    );
    var n = document.createElementNS(pe.svgNS, "rect");
    n.setAttribute("x", "0"), n.setAttribute("y", "0"), n.setAttribute("width", "1500"), n.setAttribute("height", "1400"), n.setAttribute("class", "svg-pan-zoom-control-background"), t.appendChild(n);
    var o = document.createElementNS(pe.svgNS, "path");
    return o.setAttribute(
      "d",
      "M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960 q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z"
    ), o.setAttribute("class", "svg-pan-zoom-control-element"), t.appendChild(o), t;
  },
  _createZoomReset: function(e) {
    var t = document.createElementNS(pe.svgNS, "g");
    t.setAttribute("id", "svg-pan-zoom-reset-pan-zoom"), t.setAttribute("transform", "translate(5 35) scale(0.4)"), t.setAttribute("class", "svg-pan-zoom-control"), t.addEventListener(
      "click",
      function() {
        e.getPublicInstance().reset();
      },
      false
    ), t.addEventListener(
      "touchstart",
      function() {
        e.getPublicInstance().reset();
      },
      false
    );
    var n = document.createElementNS(
      pe.svgNS,
      "rect"
    );
    n.setAttribute("x", "2"), n.setAttribute("y", "2"), n.setAttribute("width", "182"), n.setAttribute("height", "58"), n.setAttribute(
      "class",
      "svg-pan-zoom-control-background"
    ), t.appendChild(n);
    var o = document.createElementNS(
      pe.svgNS,
      "path"
    );
    o.setAttribute(
      "d",
      "M33.051,20.632c-0.742-0.406-1.854-0.609-3.338-0.609h-7.969v9.281h7.769c1.543,0,2.701-0.188,3.473-0.562c1.365-0.656,2.048-1.953,2.048-3.891C35.032,22.757,34.372,21.351,33.051,20.632z"
    ), o.setAttribute(
      "class",
      "svg-pan-zoom-control-element"
    ), t.appendChild(o);
    var i = document.createElementNS(
      pe.svgNS,
      "path"
    );
    return i.setAttribute(
      "d",
      "M170.231,0.5H15.847C7.102,0.5,0.5,5.708,0.5,11.84v38.861C0.5,56.833,7.102,61.5,15.847,61.5h154.384c8.745,0,15.269-4.667,15.269-10.798V11.84C185.5,5.708,178.976,0.5,170.231,0.5z M42.837,48.569h-7.969c-0.219-0.766-0.375-1.383-0.469-1.852c-0.188-0.969-0.289-1.961-0.305-2.977l-0.047-3.211c-0.03-2.203-0.41-3.672-1.142-4.406c-0.732-0.734-2.103-1.102-4.113-1.102h-7.05v13.547h-7.055V14.022h16.524c2.361,0.047,4.178,0.344,5.45,0.891c1.272,0.547,2.351,1.352,3.234,2.414c0.731,0.875,1.31,1.844,1.737,2.906s0.64,2.273,0.64,3.633c0,1.641-0.414,3.254-1.242,4.84s-2.195,2.707-4.102,3.363c1.594,0.641,2.723,1.551,3.387,2.73s0.996,2.98,0.996,5.402v2.32c0,1.578,0.063,2.648,0.19,3.211c0.19,0.891,0.635,1.547,1.333,1.969V48.569z M75.579,48.569h-26.18V14.022h25.336v6.117H56.454v7.336h16.781v6H56.454v8.883h19.125V48.569z M104.497,46.331c-2.44,2.086-5.887,3.129-10.34,3.129c-4.548,0-8.125-1.027-10.731-3.082s-3.909-4.879-3.909-8.473h6.891c0.224,1.578,0.662,2.758,1.316,3.539c1.196,1.422,3.246,2.133,6.15,2.133c1.739,0,3.151-0.188,4.236-0.562c2.058-0.719,3.087-2.055,3.087-4.008c0-1.141-0.504-2.023-1.512-2.648c-1.008-0.609-2.607-1.148-4.796-1.617l-3.74-0.82c-3.676-0.812-6.201-1.695-7.576-2.648c-2.328-1.594-3.492-4.086-3.492-7.477c0-3.094,1.139-5.664,3.417-7.711s5.623-3.07,10.036-3.07c3.685,0,6.829,0.965,9.431,2.895c2.602,1.93,3.966,4.73,4.093,8.402h-6.938c-0.128-2.078-1.057-3.555-2.787-4.43c-1.154-0.578-2.587-0.867-4.301-0.867c-1.907,0-3.428,0.375-4.565,1.125c-1.138,0.75-1.706,1.797-1.706,3.141c0,1.234,0.561,2.156,1.682,2.766c0.721,0.406,2.25,0.883,4.589,1.43l6.063,1.43c2.657,0.625,4.648,1.461,5.975,2.508c2.059,1.625,3.089,3.977,3.089,7.055C108.157,41.624,106.937,44.245,104.497,46.331z M139.61,48.569h-26.18V14.022h25.336v6.117h-18.281v7.336h16.781v6h-16.781v8.883h19.125V48.569z M170.337,20.14h-10.336v28.43h-7.266V20.14h-10.383v-6.117h27.984V20.14z"
    ), i.setAttribute(
      "class",
      "svg-pan-zoom-control-element"
    ), t.appendChild(i), t;
  },
  _createZoomOut: function(e) {
    var t = document.createElementNS(pe.svgNS, "g");
    t.setAttribute("id", "svg-pan-zoom-zoom-out"), t.setAttribute("transform", "translate(30.5 70) scale(0.015)"), t.setAttribute("class", "svg-pan-zoom-control"), t.addEventListener(
      "click",
      function() {
        e.getPublicInstance().zoomOut();
      },
      false
    ), t.addEventListener(
      "touchstart",
      function() {
        e.getPublicInstance().zoomOut();
      },
      false
    );
    var n = document.createElementNS(pe.svgNS, "rect");
    n.setAttribute("x", "0"), n.setAttribute("y", "0"), n.setAttribute("width", "1500"), n.setAttribute("height", "1400"), n.setAttribute("class", "svg-pan-zoom-control-background"), t.appendChild(n);
    var o = document.createElementNS(pe.svgNS, "path");
    return o.setAttribute(
      "d",
      "M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5 t84.5 -203.5z"
    ), o.setAttribute("class", "svg-pan-zoom-control-element"), t.appendChild(o), t;
  },
  disable: function(e) {
    e.controlIcons && (e.controlIcons.parentNode.removeChild(e.controlIcons), e.controlIcons = null);
  }
};
var ss = Qt;
var Ae = wt;
var oe = function(e, t) {
  this.init(e, t);
};
oe.prototype.init = function(e, t) {
  this.viewport = e, this.options = t, this.originalState = { zoom: 1, x: 0, y: 0 }, this.activeState = { zoom: 1, x: 0, y: 0 }, this.updateCTMCached = Ae.proxy(this.updateCTM, this), this.requestAnimationFrame = Ae.createRequestAnimationFrame(
    this.options.refreshRate
  ), this.viewBox = { x: 0, y: 0, width: 0, height: 0 }, this.cacheViewBox();
  var n = this.processCTM();
  this.setCTM(n), this.updateCTM();
};
oe.prototype.cacheViewBox = function() {
  var e = this.options.svg.getAttribute("viewBox");
  if (e) {
    var t = e.split(/[\s\,]/).filter(function(o) {
      return o;
    }).map(parseFloat);
    this.viewBox.x = t[0], this.viewBox.y = t[1], this.viewBox.width = t[2], this.viewBox.height = t[3];
    var n = Math.min(
      this.options.width / this.viewBox.width,
      this.options.height / this.viewBox.height
    );
    this.activeState.zoom = isFinite(n) ? n : 1, this.activeState.x = (this.options.width - this.viewBox.width * n) / 2, this.activeState.y = (this.options.height - this.viewBox.height * n) / 2, this.updateCTMOnNextFrame(), this.options.svg.removeAttribute("viewBox");
  } else
    this.simpleViewBoxCache();
};
oe.prototype.simpleViewBoxCache = function() {
  var e = this.viewport.getBBox();
  this.viewBox.x = e.x, this.viewBox.y = e.y, this.viewBox.width = e.width, this.viewBox.height = e.height;
};
oe.prototype.getViewBox = function() {
  return Ae.extend({}, this.viewBox);
};
oe.prototype.processCTM = function() {
  var e = this.getCTM();
  if (this.options.fit || this.options.contain) {
    var t;
    this.options.fit ? t = Math.min(
      this.options.width / this.viewBox.width,
      this.options.height / this.viewBox.height
    ) : t = Math.max(
      this.options.width / this.viewBox.width,
      this.options.height / this.viewBox.height
    ), t = isFinite(t) ? t : 1, e.a = t, e.d = t, e.e = -this.viewBox.x * t, e.f = -this.viewBox.y * t;
  }
  if (this.options.center) {
    var n = (this.options.width - (this.viewBox.width + this.viewBox.x * 2) * e.a) * 0.5, o = (this.options.height - (this.viewBox.height + this.viewBox.y * 2) * e.a) * 0.5;
    e.e = n, e.f = o;
  }
  return this.originalState.zoom = e.a, this.originalState.x = e.e, this.originalState.y = e.f, e;
};
oe.prototype.getOriginalState = function() {
  return Ae.extend({}, this.originalState);
};
oe.prototype.getState = function() {
  return Ae.extend({}, this.activeState);
};
oe.prototype.getZoom = function() {
  return this.activeState.zoom;
};
oe.prototype.getRelativeZoom = function() {
  return this.activeState.zoom / this.originalState.zoom;
};
oe.prototype.computeRelativeZoom = function(e) {
  return e / this.originalState.zoom;
};
oe.prototype.getPan = function() {
  return { x: this.activeState.x, y: this.activeState.y };
};
oe.prototype.getCTM = function() {
  var e = this.options.svg.createSVGMatrix();
  return e.a = this.activeState.zoom, e.b = 0, e.c = 0, e.d = this.activeState.zoom, e.e = this.activeState.x, e.f = this.activeState.y, e;
};
oe.prototype.setCTM = function(e) {
  var t = this.isZoomDifferent(e), n = this.isPanDifferent(e);
  if (t || n) {
    if (t && (this.options.beforeZoom(
      this.getRelativeZoom(),
      this.computeRelativeZoom(e.a)
    ) === false ? (e.a = e.d = this.activeState.zoom, t = false) : (this.updateCache(e), this.options.onZoom(this.getRelativeZoom()))), n) {
      var o = this.options.beforePan(this.getPan(), {
        x: e.e,
        y: e.f
      }), i = false, s = false;
      o === false ? (e.e = this.getPan().x, e.f = this.getPan().y, i = s = true) : Ae.isObject(o) && (o.x === false ? (e.e = this.getPan().x, i = true) : Ae.isNumber(o.x) && (e.e = o.x), o.y === false ? (e.f = this.getPan().y, s = true) : Ae.isNumber(o.y) && (e.f = o.y)), i && s || !this.isPanDifferent(e) ? n = false : (this.updateCache(e), this.options.onPan(this.getPan()));
    }
    (t || n) && this.updateCTMOnNextFrame();
  }
};
oe.prototype.isZoomDifferent = function(e) {
  return this.activeState.zoom !== e.a;
};
oe.prototype.isPanDifferent = function(e) {
  return this.activeState.x !== e.e || this.activeState.y !== e.f;
};
oe.prototype.updateCache = function(e) {
  this.activeState.zoom = e.a, this.activeState.x = e.e, this.activeState.y = e.f;
};
oe.prototype.pendingUpdate = false;
oe.prototype.updateCTMOnNextFrame = function() {
  this.pendingUpdate || (this.pendingUpdate = true, this.requestAnimationFrame.call(window, this.updateCTMCached));
};
oe.prototype.updateCTM = function() {
  var e = this.getCTM();
  ss.setCTM(this.viewport, e, this.defs), this.pendingUpdate = false, this.options.onUpdatedCTM && this.options.onUpdatedCTM(e);
};
var rs = function(e, t) {
  return new oe(e, t);
};
var Jn = os;
var Nt = is;
var fe = wt;
var re = Qt;
var as = rs;
var X = function(e, t) {
  this.init(e, t);
};
var ls = {
  viewportSelector: ".svg-pan-zoom_viewport",
  // Viewport selector. Can be querySelector string or SVGElement
  panEnabled: true,
  // enable or disable panning (default enabled)
  controlIconsEnabled: false,
  // insert icons to give user an option in addition to mouse events to control pan/zoom (default disabled)
  zoomEnabled: true,
  // enable or disable zooming (default enabled)
  dblClickZoomEnabled: true,
  // enable or disable zooming by double clicking (default enabled)
  mouseWheelZoomEnabled: true,
  // enable or disable zooming by mouse wheel (default enabled)
  preventMouseEventsDefault: true,
  // enable or disable preventDefault for mouse events
  zoomScaleSensitivity: 0.1,
  // Zoom sensitivity
  minZoom: 0.5,
  // Minimum Zoom level
  maxZoom: 10,
  // Maximum Zoom level
  fit: true,
  // enable or disable viewport fit in SVG (default true)
  contain: false,
  // enable or disable viewport contain the svg (default false)
  center: true,
  // enable or disable viewport centering in SVG (default true)
  refreshRate: "auto",
  // Maximum number of frames per second (altering SVG's viewport)
  beforeZoom: null,
  onZoom: null,
  beforePan: null,
  onPan: null,
  customEventsHandler: null,
  eventsListenerElement: null,
  onUpdatedCTM: null
};
var eo = { passive: true };
var to = { passive: false };
X.prototype.init = function(e, t) {
  var n = this;
  this.svg = e, this.defs = e.querySelector("defs"), re.setupSvgAttributes(this.svg), this.options = fe.extend(fe.extend({}, ls), t), this.state = "none";
  var o = re.getBoundingClientRectNormalized(e);
  this.width = o.width, this.height = o.height, this.viewport = as(
    re.getOrCreateViewport(this.svg, this.options.viewportSelector),
    {
      svg: this.svg,
      width: this.width,
      height: this.height,
      fit: this.options.fit,
      contain: this.options.contain,
      center: this.options.center,
      refreshRate: this.options.refreshRate,
      // Put callbacks into functions as they can change through time
      beforeZoom: function(s, r) {
        if (n.viewport && n.options.beforeZoom)
          return n.options.beforeZoom(s, r);
      },
      onZoom: function(s) {
        if (n.viewport && n.options.onZoom)
          return n.options.onZoom(s);
      },
      beforePan: function(s, r) {
        if (n.viewport && n.options.beforePan)
          return n.options.beforePan(s, r);
      },
      onPan: function(s) {
        if (n.viewport && n.options.onPan)
          return n.options.onPan(s);
      },
      onUpdatedCTM: function(s) {
        if (n.viewport && n.options.onUpdatedCTM)
          return n.options.onUpdatedCTM(s);
      }
    }
  );
  var i = this.getPublicInstance();
  i.setBeforeZoom(this.options.beforeZoom), i.setOnZoom(this.options.onZoom), i.setBeforePan(this.options.beforePan), i.setOnPan(this.options.onPan), i.setOnUpdatedCTM(this.options.onUpdatedCTM), this.options.controlIconsEnabled && Nt.enable(this), this.lastMouseWheelEventTime = Date.now(), this.setupHandlers();
};
X.prototype.setupHandlers = function() {
  var e = this, t = null;
  if (this.eventListeners = {
    // Mouse down group
    pointerdown: function(s) {
      if (s.pointerType !== "touch") {
        var r = e.handleMouseDown(s, t);
        return t = s, r;
      }
    },
    touchstart: function(s) {
      var r = e.handleTouchStart(s, t);
      return t = s, r;
    },
    // Mouse up group
    pointerup: function(s) {
      if (s.pointerType !== "touch")
        return e.handleMouseUp(s);
    },
    touchend: function(s) {
      return e.handleTouchEnd(s);
    },
    // Mouse move group
    pointermove: function(s) {
      if (s.pointerType !== "touch")
        return e.handleMouseMove(s);
    },
    touchmove: function(s) {
      return e.handleTouchMove(s);
    },
    // Mouse leave group
    pointerleave: function(s) {
      if (s.pointerType !== "touch")
        return e.handleMouseUp(s);
    },
    pointercancel: function(s) {
      if (s.pointerType !== "touch")
        return e.handleMouseUp(s);
    },
    touchleave: function(s) {
      return e.handleTouchEnd(s);
    },
    touchcancel: function(s) {
      return e.handleTouchEnd(s);
    }
  }, this.options.customEventsHandler != null) {
    this.options.customEventsHandler.init({
      svgElement: this.svg,
      eventsListenerElement: this.options.eventsListenerElement,
      instance: this.getPublicInstance()
    });
    var n = this.options.customEventsHandler.haltEventListeners;
    if (n && n.length)
      for (var o = n.length - 1; o >= 0; o--)
        this.eventListeners.hasOwnProperty(n[o]) && delete this.eventListeners[n[o]];
  }
  for (var i in this.eventListeners)
    (this.options.eventsListenerElement || this.svg).addEventListener(
      i,
      this.eventListeners[i],
      this.options.preventMouseEventsDefault ? to : eo
    );
  this.options.mouseWheelZoomEnabled && (this.options.mouseWheelZoomEnabled = false, this.enableMouseWheelZoom());
};
X.prototype.enableMouseWheelZoom = function() {
  if (!this.options.mouseWheelZoomEnabled) {
    var e = this;
    this.wheelListener = function(n) {
      return e.handleMouseWheel(n);
    };
    var t = !this.options.preventMouseEventsDefault;
    Jn.on(
      this.options.eventsListenerElement || this.svg,
      this.wheelListener,
      t
    ), this.options.mouseWheelZoomEnabled = true;
  }
};
X.prototype.disableMouseWheelZoom = function() {
  if (this.options.mouseWheelZoomEnabled) {
    var e = !this.options.preventMouseEventsDefault;
    Jn.off(
      this.options.eventsListenerElement || this.svg,
      this.wheelListener,
      e
    ), this.options.mouseWheelZoomEnabled = false;
  }
};
X.prototype.handleMouseWheel = function(e) {
  if (!(!this.options.zoomEnabled || this.state !== "none")) {
    this.options.preventMouseEventsDefault && (e.preventDefault ? e.preventDefault() : e.returnValue = false);
    var t = e.deltaY || 1, n = Date.now() - this.lastMouseWheelEventTime, o = 3 + Math.max(0, 30 - n);
    this.lastMouseWheelEventTime = Date.now(), "deltaMode" in e && e.deltaMode === 0 && e.wheelDelta && (t = e.deltaY === 0 ? 0 : Math.abs(e.wheelDelta) / e.deltaY), t = -0.3 < t && t < 0.3 ? t : (t > 0 ? 1 : -1) * Math.log(Math.abs(t) + 10) / o;
    var i = this.svg.getScreenCTM().inverse(), s = re.getEventPoint(e, this.svg).matrixTransform(
      i
    ), r = Math.pow(1 + this.options.zoomScaleSensitivity, -1 * t);
    this.zoomAtPoint(r, s);
  }
};
X.prototype.zoomAtPoint = function(e, t, n) {
  var o = this.viewport.getOriginalState();
  n ? (e = Math.max(
    this.options.minZoom * o.zoom,
    Math.min(this.options.maxZoom * o.zoom, e)
  ), e = e / this.getZoom()) : this.getZoom() * e < this.options.minZoom * o.zoom ? e = this.options.minZoom * o.zoom / this.getZoom() : this.getZoom() * e > this.options.maxZoom * o.zoom && (e = this.options.maxZoom * o.zoom / this.getZoom());
  var i = this.viewport.getCTM(), s = t.matrixTransform(i.inverse()), r = this.svg.createSVGMatrix().translate(s.x, s.y).scale(e).translate(-s.x, -s.y), a = i.multiply(r);
  a.a !== i.a && this.viewport.setCTM(a);
};
X.prototype.zoom = function(e, t) {
  this.zoomAtPoint(
    e,
    re.getSvgCenterPoint(this.svg, this.width, this.height),
    t
  );
};
X.prototype.publicZoom = function(e, t) {
  t && (e = this.computeFromRelativeZoom(e)), this.zoom(e, t);
};
X.prototype.publicZoomAtPoint = function(e, t, n) {
  if (n && (e = this.computeFromRelativeZoom(e)), fe.getType(t) !== "SVGPoint")
    if ("x" in t && "y" in t)
      t = re.createSVGPoint(this.svg, t.x, t.y);
    else
      throw new Error("Given point is invalid");
  this.zoomAtPoint(e, t, n);
};
X.prototype.getZoom = function() {
  return this.viewport.getZoom();
};
X.prototype.getRelativeZoom = function() {
  return this.viewport.getRelativeZoom();
};
X.prototype.computeFromRelativeZoom = function(e) {
  return e * this.viewport.getOriginalState().zoom;
};
X.prototype.resetZoom = function() {
  var e = this.viewport.getOriginalState();
  this.zoom(e.zoom, true);
};
X.prototype.resetPan = function() {
  this.pan(this.viewport.getOriginalState());
};
X.prototype.reset = function() {
  this.resetZoom(), this.resetPan();
};
X.prototype.handleDblClick = function(e) {
  if (this.options.preventMouseEventsDefault && (e.preventDefault ? e.preventDefault() : e.returnValue = false), this.options.controlIconsEnabled) {
    var t = e.target.getAttribute("class") || "";
    if (t.indexOf("svg-pan-zoom-control") > -1)
      return false;
  }
  var n;
  e.shiftKey ? n = 1 / ((1 + this.options.zoomScaleSensitivity) * 2) : n = (1 + this.options.zoomScaleSensitivity) * 2;
  var o = re.getEventPoint(e, this.svg).matrixTransform(
    this.svg.getScreenCTM().inverse()
  );
  this.zoomAtPoint(n, o);
};
X.prototype.handleMouseDown = function(e, t) {
  this.options.preventMouseEventsDefault && (e.preventDefault ? e.preventDefault() : e.returnValue = false), fe.mouseAndTouchNormalize(e, this.svg), this.options.dblClickZoomEnabled && fe.isDblClick(e, t) ? this.handleDblClick(e) : (this.state = "pan", this.firstEventCTM = this.viewport.getCTM(), this.stateOrigin = re.getEventPoint(e, this.svg).matrixTransform(
    this.firstEventCTM.inverse()
  ));
};
X.prototype.handleMouseMove = function(e) {
  if (this.options.preventMouseEventsDefault && (e.preventDefault ? e.preventDefault() : e.returnValue = false), this.state === "pan" && this.options.panEnabled) {
    var t = re.getEventPoint(e, this.svg).matrixTransform(
      this.firstEventCTM.inverse()
    ), n = this.firstEventCTM.translate(
      t.x - this.stateOrigin.x,
      t.y - this.stateOrigin.y
    );
    this.viewport.setCTM(n);
  }
};
X.prototype.handleMouseUp = function(e) {
  this.options.preventMouseEventsDefault && (e.preventDefault ? e.preventDefault() : e.returnValue = false), this.state === "pan" && (this.state = "none");
};
X.prototype.handleTouchStart = function(e, t) {
  if (e.touches.length == 1)
    this.handleMouseDown(e, t);
  else {
    this.options.preventMouseEventsDefault && (e.preventDefault ? e.preventDefault() : e.returnValue = false), this.firstEventCTM = this.viewport.getCTM();
    var n = re.getTouchPoint(e, this.svg, 0), o = re.getTouchPoint(e, this.svg, 1);
    this.firstDistance = fe.calculateDistance(n, o), n.x = (n.x + o.x) / 2, n.y = (n.y + o.y) / 2, this.stateOrigin = n.matrixTransform(this.firstEventCTM.inverse()), this.firstZoomLevel = this.getZoom();
  }
};
X.prototype.handleTouchMove = function(e) {
  if (e.touches.length == 1)
    this.handleMouseMove(e);
  else {
    if (this.options.preventMouseEventsDefault && (e.preventDefault ? e.preventDefault() : e.returnValue = false), !this.options.panEnabled && !this.options.zoomEnabled)
      return;
    var t = re.getTouchPoint(e, this.svg, 0), n = re.getTouchPoint(e, this.svg, 1), o = this.svg.createSVGPoint();
    if (o.x = (t.x + n.x) / 2, o.y = (t.y + n.y) / 2, this.state === "pan" && this.options.panEnabled) {
      var i = o.matrixTransform(this.firstEventCTM.inverse()), s = this.firstEventCTM.translate(
        i.x - this.stateOrigin.x,
        i.y - this.stateOrigin.y
      );
      this.viewport.setCTM(s);
    }
    if (this.options.zoomEnabled) {
      var r = fe.calculateDistance(t, n), a = r / this.firstDistance, l = this.svg.getScreenCTM().inverse(), u = o.matrixTransform(l);
      this.zoomAtPoint(this.firstZoomLevel * a, u, true);
    }
  }
};
X.prototype.handleTouchEnd = function(e) {
  if (e.touches.length == 0)
    this.handleMouseUp(e);
  else if (this.options.preventMouseEventsDefault && (e.preventDefault ? e.preventDefault() : e.returnValue = false), this.firstEventCTM = this.viewport.getCTM(), e.touches.length == 1)
    this.stateOrigin = re.getEventPoint(e, this.svg).matrixTransform(
      this.firstEventCTM.inverse()
    );
  else {
    var t = re.getTouchPoint(e, this.svg, 0), n = re.getTouchPoint(e, this.svg, 1);
    this.firstDistance = fe.calculateDistance(t, n), t.x = (t.x + n.x) / 2, t.y = (t.y + n.y) / 2, this.stateOrigin = t.matrixTransform(this.firstEventCTM.inverse());
  }
};
X.prototype.fit = function() {
  var e = this.viewport.getViewBox(), t = Math.min(
    this.width / e.width,
    this.height / e.height
  );
  this.zoom(t, true);
};
X.prototype.contain = function() {
  var e = this.viewport.getViewBox(), t = Math.max(
    this.width / e.width,
    this.height / e.height
  );
  this.zoom(t, true);
};
X.prototype.center = function() {
  var e = this.viewport.getViewBox(), t = (this.width - (e.width + e.x * 2) * this.getZoom()) * 0.5, n = (this.height - (e.height + e.y * 2) * this.getZoom()) * 0.5;
  this.getPublicInstance().pan({ x: t, y: n });
};
X.prototype.updateBBox = function() {
  this.viewport.simpleViewBoxCache();
};
X.prototype.pan = function(e) {
  var t = this.viewport.getCTM();
  t.e = e.x, t.f = e.y, this.viewport.setCTM(t);
};
X.prototype.panBy = function(e) {
  var t = this.viewport.getCTM();
  t.e += e.x, t.f += e.y, this.viewport.setCTM(t);
};
X.prototype.getPan = function() {
  var e = this.viewport.getState();
  return { x: e.x, y: e.y };
};
X.prototype.resize = function() {
  var e = re.getBoundingClientRectNormalized(
    this.svg
  );
  this.width = e.width, this.height = e.height;
  var t = this.viewport;
  t.options.width = this.width, t.options.height = this.height, t.processCTM(), this.options.controlIconsEnabled && (this.getPublicInstance().disableControlIcons(), this.getPublicInstance().enableControlIcons());
};
X.prototype.destroy = function() {
  var e = this;
  this.beforeZoom = null, this.onZoom = null, this.beforePan = null, this.onPan = null, this.onUpdatedCTM = null, this.options.customEventsHandler != null && this.options.customEventsHandler.destroy({
    svgElement: this.svg,
    eventsListenerElement: this.options.eventsListenerElement,
    instance: this.getPublicInstance()
  });
  for (var t in this.eventListeners)
    (this.options.eventsListenerElement || this.svg).removeEventListener(
      t,
      this.eventListeners[t],
      this.options.preventMouseEventsDefault ? to : eo
    );
  this.disableMouseWheelZoom(), this.getPublicInstance().disableControlIcons(), Te = Te.filter(function(n) {
    return n.svg !== e.svg;
  }), delete this.options, delete this.viewport, delete this.publicInstance, delete this.pi, this.getPublicInstance = function() {
    return null;
  };
};
X.prototype.getPublicInstance = function() {
  var e = this;
  return this.publicInstance || (this.publicInstance = this.pi = {
    // Pan
    enablePan: function() {
      return e.options.panEnabled = true, e.pi;
    },
    disablePan: function() {
      return e.options.panEnabled = false, e.pi;
    },
    isPanEnabled: function() {
      return !!e.options.panEnabled;
    },
    pan: function(t) {
      return e.pan(t), e.pi;
    },
    panBy: function(t) {
      return e.panBy(t), e.pi;
    },
    getPan: function() {
      return e.getPan();
    },
    // Pan event
    setBeforePan: function(t) {
      return e.options.beforePan = t === null ? null : fe.proxy(t, e.publicInstance), e.pi;
    },
    setOnPan: function(t) {
      return e.options.onPan = t === null ? null : fe.proxy(t, e.publicInstance), e.pi;
    },
    // Zoom and Control Icons
    enableZoom: function() {
      return e.options.zoomEnabled = true, e.pi;
    },
    disableZoom: function() {
      return e.options.zoomEnabled = false, e.pi;
    },
    isZoomEnabled: function() {
      return !!e.options.zoomEnabled;
    },
    enableControlIcons: function() {
      return e.options.controlIconsEnabled || (e.options.controlIconsEnabled = true, Nt.enable(e)), e.pi;
    },
    disableControlIcons: function() {
      return e.options.controlIconsEnabled && (e.options.controlIconsEnabled = false, Nt.disable(e)), e.pi;
    },
    isControlIconsEnabled: function() {
      return !!e.options.controlIconsEnabled;
    },
    // Double click zoom
    enableDblClickZoom: function() {
      return e.options.dblClickZoomEnabled = true, e.pi;
    },
    disableDblClickZoom: function() {
      return e.options.dblClickZoomEnabled = false, e.pi;
    },
    isDblClickZoomEnabled: function() {
      return !!e.options.dblClickZoomEnabled;
    },
    // Mouse wheel zoom
    enableMouseWheelZoom: function() {
      return e.enableMouseWheelZoom(), e.pi;
    },
    disableMouseWheelZoom: function() {
      return e.disableMouseWheelZoom(), e.pi;
    },
    isMouseWheelZoomEnabled: function() {
      return !!e.options.mouseWheelZoomEnabled;
    },
    // Zoom scale and bounds
    setZoomScaleSensitivity: function(t) {
      return e.options.zoomScaleSensitivity = t, e.pi;
    },
    setMinZoom: function(t) {
      return e.options.minZoom = t, e.pi;
    },
    setMaxZoom: function(t) {
      return e.options.maxZoom = t, e.pi;
    },
    // Zoom event
    setBeforeZoom: function(t) {
      return e.options.beforeZoom = t === null ? null : fe.proxy(t, e.publicInstance), e.pi;
    },
    setOnZoom: function(t) {
      return e.options.onZoom = t === null ? null : fe.proxy(t, e.publicInstance), e.pi;
    },
    // Zooming
    zoom: function(t) {
      return e.publicZoom(t, true), e.pi;
    },
    zoomBy: function(t) {
      return e.publicZoom(t, false), e.pi;
    },
    zoomAtPoint: function(t, n) {
      return e.publicZoomAtPoint(t, n, true), e.pi;
    },
    zoomAtPointBy: function(t, n) {
      return e.publicZoomAtPoint(t, n, false), e.pi;
    },
    zoomIn: function() {
      return this.zoomBy(1 + e.options.zoomScaleSensitivity), e.pi;
    },
    zoomOut: function() {
      return this.zoomBy(1 / (1 + e.options.zoomScaleSensitivity)), e.pi;
    },
    getZoom: function() {
      return e.getRelativeZoom();
    },
    // CTM update
    setOnUpdatedCTM: function(t) {
      return e.options.onUpdatedCTM = t === null ? null : fe.proxy(t, e.publicInstance), e.pi;
    },
    // Reset
    resetZoom: function() {
      return e.resetZoom(), e.pi;
    },
    resetPan: function() {
      return e.resetPan(), e.pi;
    },
    reset: function() {
      return e.reset(), e.pi;
    },
    // Fit, Contain and Center
    fit: function() {
      return e.fit(), e.pi;
    },
    contain: function() {
      return e.contain(), e.pi;
    },
    center: function() {
      return e.center(), e.pi;
    },
    // Size and Resize
    updateBBox: function() {
      return e.updateBBox(), e.pi;
    },
    resize: function() {
      return e.resize(), e.pi;
    },
    getSizes: function() {
      return {
        width: e.width,
        height: e.height,
        realZoom: e.getZoom(),
        viewBox: e.viewport.getViewBox()
      };
    },
    // Destroy
    destroy: function() {
      return e.destroy(), e.pi;
    }
  }), this.publicInstance;
};
var Te = [];
var cs = function(e, t) {
  var n = fe.getSvg(e);
  if (n === null)
    return null;
  for (var o = Te.length - 1; o >= 0; o--)
    if (Te[o].svg === n)
      return Te[o].instance.getPublicInstance();
  return Te.push({
    svg: n,
    instance: new X(n, t)
  }), Te[Te.length - 1].instance.getPublicInstance();
};
var us = cs;
var ds = ts(us);
var fs = {
  getViewArea() {
    const e = this.getSizes(), t = this.getPan(), n = e.realZoom;
    t.x /= n, t.y /= n;
    const o = {
      width: e.width / n,
      height: e.height / n
    };
    return {
      box: {
        top: -t.y,
        bottom: o.height - t.y,
        left: -t.x,
        right: o.width - t.x
      },
      center: {
        x: o.width / 2 - t.x,
        y: o.height / 2 - t.y
      }
    };
  },
  getViewBox() {
    return this.getViewArea().box;
  },
  setViewBox(e) {
    const t = e.right - e.left, n = e.bottom - e.top, { width: o, height: i } = this.getSizes(), s = t / n, r = o / i, a = s < r ? n * r : t, l = s > r ? t / r : n, u = Math.min(
      o / a,
      i / l
    ), c = this.getRealZoom(), d = this.getZoom(), h = c / d;
    this.zoom(u / h);
    const v = {
      x: (e.left + t / 2) * u,
      y: (e.top + n / 2) * u
    };
    this.pan({
      x: -v.x + a / 2 * u,
      y: -v.y + l / 2 * u
    });
  },
  getRealZoom() {
    return this.getSizes().realZoom;
  },
  applyAbsoluteZoomLevel(e, t, n) {
    const o = Math.max(1e-4, t), i = Math.max(o, n), s = Math.max(Math.min(i, e), o), r = this.getRealZoom(), a = this.getZoom(), l = r / a;
    this.setMinZoom(o / l).setMaxZoom(i / l).zoom(s / l);
  },
  isPanEnabled() {
    return this._isPanEnabled;
  },
  enablePan() {
    return this._isPanEnabled = true, this._internalEnablePan(), this;
  },
  disablePan() {
    return this._isPanEnabled = false, this._internalDisablePan(), this;
  },
  isZoomEnabled() {
    return this._isZoomEnabled;
  },
  enableZoom() {
    return this._isZoomEnabled = true, this._internalEnableZoom(), this;
  },
  disableZoom() {
    return this._isZoomEnabled = false, this._internalDisableZoom(), this;
  },
  setPanEnabled(e) {
    return e ? this.enablePan() : this.disablePan(), this;
  },
  setZoomEnabled(e) {
    return e ? (this.enableZoom(), this.enableDblClickZoom()) : (this.disableZoom(), this.disableDblClickZoom()), this;
  }
};
function hs(e, t) {
  var o, i;
  const n = e;
  return n._isPanEnabled = (o = t.panEnabled) != null ? o : true, n._isZoomEnabled = (i = t == null ? void 0 : t.zoomEnabled) != null ? i : true, n._internalIsPanEnabled = n.isPanEnabled, n._internalEnablePan = n.enablePan, n._internalDisablePan = n.disablePan, n._internalIsZoomEnabled = n.isZoomEnabled, n._internalEnableZoom = n.enableZoom, n._internalDisableZoom = n.disableZoom, Object.assign(e, fs), n;
}
function vs(e, t) {
  var s, r, a, l, u, c;
  const n = (r = (s = t.customEventsHandler) == null ? void 0 : s.init) != null ? r : (d) => {
  }, o = (l = (a = t.customEventsHandler) == null ? void 0 : a.destroy) != null ? l : (d) => {
  }, i = (c = (u = t.customEventsHandler) == null ? void 0 : u.haltEventListeners) != null ? c : [];
  return t.mouseWheelZoomEnabled === void 0 && (t.mouseWheelZoomEnabled = t.zoomEnabled), t.customEventsHandler = {
    init: (d) => {
      hs(d.instance, t), n(d);
    },
    destroy: (d) => o(d),
    haltEventListeners: i
  }, ds(e, t);
}
function gs(e, t) {
  const n = ref();
  let o = 0;
  const i = [], s = [], r = () => {
    o = 1, i.forEach((c) => c()), i.length = 0;
  }, a = () => {
    o = 2, s.forEach((c) => c()), s.length = 0;
  };
  return onMounted(() => {
    var x, w, g, y, k, m;
    const c = q(e.value, "<svg>"), d = (w = (x = t.customEventsHandler) == null ? void 0 : x.init) != null ? w : (f) => {
    }, h = (y = (g = t.customEventsHandler) == null ? void 0 : g.destroy) != null ? y : (f) => {
    }, v = (m = (k = t.customEventsHandler) == null ? void 0 : k.haltEventListeners) != null ? m : [];
    t.customEventsHandler = {
      init: (f) => {
        n.value = f.instance, d(f), r();
      },
      destroy: (f) => {
        a(), h(f);
      },
      haltEventListeners: v
    };
    const E = () => {
      const f = c.getBoundingClientRect();
      f.width !== 0 && f.height !== 0 ? vs(c, t) : setTimeout(E, 200);
    };
    E();
  }), onUnmounted(() => {
    var c;
    (c = n.value) == null || c.destroy(), n.value = void 0;
  }), { svgPanZoom: n, onSvgPanZoomMounted: (c) => {
    o === 0 ? i.push(c) : o === 1 && c();
  }, onSvgPanZoomUnmounted: (c) => {
    o === 0 || o === 1 ? s.push(c) : c();
  } };
}
var no = Symbol("zoomLevel");
function ps(e, t) {
  const n = computed(() => t.scalingObjects ? 1 : 1 / e.value);
  return provide(no, {
    zoomLevel: e,
    scale: n
  }), { scale: n };
}
function be() {
  return q(inject(no), "zoomLevel");
}
function ms(e) {
  return e instanceof Promise || e && typeof e.then == "function";
}
function bs() {
  let e = null;
  const t = ref({
    enabled: false,
    duration: 300,
    timingFunction: "linear"
  });
  function n(o, i = 300, s = "linear") {
    e && (clearTimeout(e), e = null), t.value = {
      enabled: true,
      duration: i,
      timingFunction: s
    }, nextTick(() => Ee(this, null, function* () {
      const r = o();
      ms(r) && (yield r), e && clearTimeout(e), e = window == null ? void 0 : window.setTimeout(() => {
        t.value.enabled = false, e = null;
      }, i);
    }));
  }
  return { transitionWhile: n, transitionOption: t };
}
function ys(e) {
  const t = ref({}), n = ref(false);
  let o = 1;
  const i = /* @__PURE__ */ new Map();
  return watchEffect(() => {
    if (e.value instanceof Array) {
      const s = /* @__PURE__ */ new Set([]);
      if (t.value = Object.fromEntries(
        e.value.map((r) => {
          let a = r.id;
          return a || (n.value || (n.value = true, console.warn(
            "[v-network-graph] Please specify the `id` field for the `Path` object. Currently, this works for compatibility, but in the future, the id field will be required."
          )), a = i.get(r), a || (a = "path-" + o++, i.set(r, a))), s.add(a), [a, r];
        })
      ), n.value)
        for (const [r, a] of Array.from(i.entries()))
          s.has(a) || i.delete(r);
    } else
      t.value = e.value;
  }), { objects: t, isInCompatibilityModeForPath: n };
}
function ws(e, t, n, o) {
  if (o) {
    const s = ref(o(e[t])), r = (a) => {
      isEqual_default(a, s.value) || (s.value = a), isEqual_default(a, e[t]) || n(`update:${t}`, a);
    };
    return watch(() => o(s.value), r), watch(() => e[t], (a) => r(o(a))), s.value !== e[t] && n(`update:${t}`, s.value), s;
  }
  const i = ref(e[t]);
  return watch(
    () => e[t],
    (s) => {
      isEqual_default(s, i.value) || (i.value = s);
    }
  ), watch(i, (s) => {
    isEqual_default(s, e[t]) || n(`update:${t}`, s);
  }), i;
}
function It(e, t, n, o) {
  const i = reactive(/* @__PURE__ */ new Set());
  return watch(
    () => e[t],
    () => {
      const r = e[t].filter((a) => a in n.value);
      isEqual_default(r, Array.from(i)) || (i.clear(), r.forEach(i.add, i));
    },
    { deep: true, immediate: true }
  ), watch(i, () => {
    const s = Array.from(i);
    isEqual_default(e[t], s) || o(`update:${t}`, s);
  }), Ie(i);
}
var oo = Symbol("selection");
function Es(e, t, n) {
  provide(oo, {
    selectedNodes: e,
    selectedEdges: t,
    selectedPaths: n
  });
}
function xs() {
  return q(inject(oo), "Selections");
}
var io = Symbol("layouts");
function ks(e) {
  provide(io, e);
}
function Jt() {
  return q(inject(io), "Layouts");
}
function Ps(e, t) {
  for (let n = 0; n < e.length - 1; n++)
    t(e[n], e[n + 1]);
}
function Ye(e, t) {
  const n = e.indexOf(t);
  n >= 0 && e.splice(n, 1);
}
function Ss(e, t, n) {
  const o = e.indexOf(t);
  o < 0 || e.splice(o + 1, 0, n);
}
function Ms(e, t) {
  const n = [
    "edges",
    "edge-labels",
    "focusring",
    "nodes",
    "node-labels",
    "paths"
  ];
  return computed(() => {
    const o = uniq_default(e.view.builtInLayerOrder).filter((s) => {
      const r = n.includes(s);
      return r || console.warn(`Layer ${s} is not a built-in layer.`), r;
    }).reverse(), i = [...n];
    return Ps(o, (s, r) => {
      Ye(i, r), Ss(i, s, r);
    }), "edge-label" in t || "edges-label" in t || Ye(i, "edge-labels"), e.node.focusring.visible || Ye(i, "focusring"), e.node.label.visible === false && Ye(i, "node-labels"), e.path.visible || Ye(i, "paths"), i;
  });
}
var Pn = () => new Promise((e) => nextTick(e));
function Cs(e, t) {
  const n = Math.max(e.width, e.height, t.width, t.height) / 1e4;
  return Math.abs(e.x - t.x) < n && Math.abs(e.y - t.y) < n && Math.abs(e.width - t.width) < n && Math.abs(e.height - t.height) < n;
}
function Os(e, t) {
  return {
    top: e.top + t.top,
    left: e.left + t.left,
    right: e.right + t.right,
    bottom: e.bottom + t.bottom
  };
}
function zs(e, t) {
  return {
    top: e.top * t,
    left: e.left * t,
    right: e.right * t,
    bottom: e.bottom * t
  };
}
function Ts(e, t) {
  return {
    top: e.top / t,
    left: e.left / t,
    right: e.right / t,
    bottom: e.bottom / t
  };
}
function so(e) {
  return {
    top: e.y,
    left: e.x,
    right: e.x + e.width,
    bottom: e.y + e.height
  };
}
function ro(e) {
  return {
    x: e.left,
    y: e.top,
    width: e.right - e.left,
    height: e.bottom - e.top
  };
}
function Is(e, t) {
  return {
    top: Math.min(e.top, t.top),
    left: Math.min(e.left, t.left),
    right: Math.max(e.right, t.right),
    bottom: Math.max(e.bottom, t.bottom)
  };
}
var $s = new RegExp("^\\d+$");
function Ls(e, t) {
  let n = { top: 0, left: 0, right: 0, bottom: 0 };
  if (typeof e == "string") {
    const o = We(e, t.width), i = We(e, t.height);
    o === void 0 || i === void 0 ? console.warn("Invalid `fitContentMargin` value.", e) : n = { top: i, left: o, right: o, bottom: i };
  } else if (typeof e == "number") {
    const o = e;
    n = { top: o, left: o, right: o, bottom: o };
  } else {
    if (e.top) {
      const o = We(e.top, t.height);
      o === void 0 ? console.warn("Invalid `fitContentMargin` value.", e.top) : n.top = o;
    }
    if (e.left) {
      const o = We(e.left, t.width);
      o === void 0 ? console.warn("Invalid `fitContentMargin` value.", e.left) : n.left = o;
    }
    if (e.right) {
      const o = We(e.right, t.width);
      o === void 0 ? console.warn("Invalid `fitContentMargin` value.", e.right) : n.right = o;
    }
    if (e.bottom) {
      const o = We(e.bottom, t.height);
      o === void 0 ? console.warn("Invalid `fitContentMargin` value.", e.bottom) : n.bottom = o;
    }
  }
  return n;
}
function As(e, t, n, o, i, s) {
  const r = e.getBBox();
  if (s)
    return Ds(r, t, n, i);
  {
    const a = Zs(e);
    return Ns(
      r,
      a,
      t,
      n,
      o,
      i
    );
  }
}
function We(e, t) {
  if (typeof e == "string") {
    if (e.endsWith("%")) {
      const n = parseInt(e.toString());
      if (Number.isFinite(n))
        return t * (n / 100);
    } else if (e.endsWith("px") || $s.test(e)) {
      const n = parseInt(e.toString());
      if (Number.isFinite(n))
        return n;
    }
  } else if (typeof e == "number")
    return e;
}
function Zs(e) {
  return Array.from(e.querySelectorAll(".v-ng-graph-objects")).map(
    (n) => n.getBBox()
  ).reduce(
    (n, o, i) => {
      if (i === 0) return o;
      const s = Math.min(n.x, o.x), r = Math.min(n.y, o.y);
      return {
        x: s,
        y: r,
        width: Math.max(n.x + n.width - s, o.x + o.width - s),
        height: Math.max(n.y + n.height - r, o.y + o.height - r)
      };
    },
    { x: 0, y: 0, width: 0, height: 0 }
  );
}
function Ds(e, t, n, o) {
  if (Object.keys(n).length <= 1)
    return;
  const i = ao(e, t, o);
  if (i > 0) {
    const s = so(e);
    return {
      zoom: i,
      pos: lo(s, i, t, o)
    };
  } else
    return;
}
function Ns(e, t, n, o, i, s) {
  if (Object.keys(o).length <= 1)
    return;
  const r = vi(o), a = {
    top: (r.top - t.y) * i,
    left: (r.left - t.x) * i,
    right: (t.x + t.width - r.right) * i,
    bottom: (t.y + t.height - r.bottom) * i
  };
  let l = ao(e, n, s);
  if (l === 0)
    return;
  const u = ht(n, Os(s, a));
  if (u.width <= 0 || u.height <= 0)
    return;
  const c = so(e), d = ht(n, s), h = Cs(e, t);
  let v = 0, E = 0, x = { top: 0, left: 0, right: 0, bottom: 0 };
  do {
    E = l;
    const w = Ts(a, l), g = {
      top: r.top - w.top,
      left: r.left - w.left,
      right: r.right + w.right,
      bottom: r.bottom + w.bottom
    };
    x = h ? g : Is(c, g);
    const y = ro(x), m = [d.width / y.width, d.height / y.height].filter((f) => f > 0);
    if (m.length === 0)
      return;
    l = Math.min(...m), v++;
  } while (Math.abs(E - l) > 1e-6 && v < 10);
  return {
    zoom: l,
    pos: lo(x, l, n, s)
  };
}
function ao(e, t, n) {
  if (e.width === 0 || e.height === 0) return 0;
  const o = ht(t, n);
  if (o.width <= 0 || o.height <= 0)
    return 0;
  const i = [o.width / e.width, o.height / e.height];
  return Math.min(...i);
}
function lo(e, t, n, o) {
  const i = ht(n, o), s = ro(zs(e, t)), r = (i.width - s.width) / 2, a = (i.height - s.height) / 2, l = s.x - o.left, u = s.y - o.top;
  return {
    x: -l + r,
    y: -u + a
  };
}
function ht(e, t) {
  const n = t.left + t.right, o = t.top + t.bottom;
  return {
    width: e.width - n,
    height: e.height - o
  };
}
var js = ["x", "y", "width", "height", "fill", "stroke", "stroke-width", "stroke-dasharray"];
var Bs = defineComponent({
  __name: "VSelectionBox",
  props: {
    box: null,
    config: null
  },
  setup(e) {
    return (t, n) => (openBlock(), createElementBlock("rect", {
      class: "v-ng-selection-box",
      x: Math.round(e.box.pos.x),
      y: Math.round(e.box.pos.y),
      width: Math.ceil(e.box.size.width),
      height: Math.ceil(e.box.size.height),
      fill: e.config.color,
      stroke: e.config.strokeColor,
      "stroke-width": e.config.strokeWidth,
      "stroke-dasharray": e.config.strokeDasharray
    }, null, 8, js));
  }
});
var Rs = ["points", "fill"];
var Vs = defineComponent({
  __name: "VMarkerHeadArrow",
  props: {
    width: null,
    height: null,
    refX: null,
    color: null,
    isSource: { type: Boolean },
    units: null
  },
  setup(e) {
    const t = e, n = computed(() => {
      const o = t.width, i = t.height;
      return t.isSource ? `${o} ${i}, 0 ${i / 2}, ${o} 0` : `0 0, ${o} ${i / 2}, 0 ${i}`;
    });
    return (o, i) => (openBlock(), createElementBlock("polygon", {
      points: unref(n),
      fill: e.color
    }, null, 8, Rs));
  }
});
var Ws = ["points", "stroke-width", "stroke"];
var Hs = defineComponent({
  __name: "VMarkerHeadAngle",
  props: {
    width: null,
    height: null,
    refX: null,
    color: null,
    isSource: { type: Boolean },
    units: null
  },
  setup(e) {
    const t = e, n = computed(() => t.units === "strokeWidth" ? 1 : Math.min(t.width, t.height) / 5), o = computed(() => {
      const i = n.value / 2, s = t.width, r = t.height;
      return t.isSource ? `${s - i} ${r - i}, ${i} ${r / 2}, ${s - i} ${i}` : `${i} ${i}, ${s - i} ${r / 2}, ${i} ${r - i}`;
    });
    return (i, s) => (openBlock(), createElementBlock("polyline", {
      points: unref(o),
      fill: "none",
      "stroke-width": unref(n),
      stroke: e.color,
      "stroke-linecap": "round",
      "stroke-linejoin": "round"
    }, null, 8, Ws));
  }
});
var _s = ["fill", "cx", "cy", "rx", "ry"];
var Fs = defineComponent({
  __name: "VMarkerHeadCircle",
  props: {
    width: null,
    height: null,
    refX: null,
    color: null,
    isSource: { type: Boolean },
    units: null
  },
  setup(e) {
    return (t, n) => (openBlock(), createElementBlock("ellipse", {
      fill: e.color,
      cx: e.width / 2,
      cy: e.height / 2,
      rx: e.width / 2,
      ry: e.height / 2
    }, null, 8, _s));
  }
});
var Us = ["id", "markerWidth", "markerHeight", "refX", "refY", "markerUnits"];
var Xs = defineComponent({
  __name: "VMarkerHead",
  props: {
    id: null,
    marker: null,
    scale: null
  },
  setup(e) {
    const t = e, n = {
      arrow: Vs,
      angle: Hs,
      circle: Fs
    }, o = computed(
      () => t.marker.width * (t.marker.units === "strokeWidth" ? 1 : t.scale)
    ), i = computed(
      () => t.marker.height * (t.marker.units === "strokeWidth" ? 1 : t.scale)
    ), s = computed(() => {
      const a = t.marker.margin * (t.marker.units === "strokeWidth" ? 1 : t.scale);
      return t.marker.isSource ? o.value + a : -a;
    }), r = computed(() => {
      const a = t.marker.offset * (t.marker.units === "strokeWidth" ? 1 : t.scale);
      return t.marker.isSource ? a : -a;
    });
    return (a, l) => e.marker.type !== "none" && e.marker.type !== "custom" ? (openBlock(), createElementBlock("marker", {
      key: 0,
      id: e.id,
      markerWidth: unref(o),
      markerHeight: unref(i),
      refX: unref(s),
      refY: unref(i) / 2 + unref(r),
      orient: "auto",
      markerUnits: e.marker.units,
      class: "v-ng-marker"
    }, [
      (openBlock(), createBlock(resolveDynamicComponent(n[e.marker.type]), {
        width: unref(o),
        height: unref(i),
        refX: unref(s),
        color: e.marker.color,
        "is-source": e.marker.isSource,
        units: e.marker.units
      }, null, 8, ["width", "height", "refX", "color", "is-source", "units"]))
    ], 8, Us)) : createCommentVNode("", true);
  }
});
var qs = {
  class: "v-ng-background-grid",
  "shape-rendering": "crispEdges"
};
var Gs = ["d"];
var Ks = ["d"];
var Ys = ["d"];
var Qs = ["d"];
var Js = defineComponent({
  __name: "VBackgroundGrid",
  setup(e) {
    const { container: t, svgPanZoom: n } = Vt(), { zoomLevel: o } = be(), i = es(), s = Yo(), r = ref({ x: 0, y: 0 }), a = ref({ width: 500, height: 500 });
    onMounted(() => {
      var E;
      const h = (E = n.value) == null ? void 0 : E.getPan();
      h && (r.value = {
        x: -h.x,
        y: -h.y
      });
      const v = t.value.getBoundingClientRect();
      a.value = {
        width: v.width,
        height: v.height
      };
    }), i.on("view:resize", (h) => {
      a.value = { width: h.width, height: h.height };
    }), i.on("view:pan", (h) => {
      r.value = { x: -h.x, y: -h.y };
    }), i.on("view:zoom", () => {
      var v;
      const h = (v = n.value) == null ? void 0 : v.getPan();
      h && (r.value = { x: -h.x, y: -h.y });
    });
    const l = ref([]), u = ref([]), c = ref([]), d = ref([]);
    return watchEffect(() => {
      const h = [], v = [], E = [], x = [], w = 1 / o.value, g = s.grid.interval, y = r.value.x * w, k = r.value.y * w, m = Math.floor(a.value.width / g + 1) * g, f = Math.floor(a.value.height / g + 1) * g, p = (r.value.x + m) * w, S = (r.value.y + f) * w, O = s.grid.thickIncrements, I = s.grid.line.dasharray, z = s.grid.thick.dasharray;
      let T = {
        stroke: s.grid.thick.color,
        "stroke-width": s.grid.thick.width,
        "stroke-dasharray": z,
        "stroke-dashoffset": z ? y / w : void 0
      }, A = {
        stroke: s.grid.line.color,
        "stroke-width": s.grid.line.width,
        "stroke-dasharray": I,
        "stroke-dashoffset": I ? y / w : void 0
      };
      const R = (r.value.x + m) * w;
      for (let B = k; B <= S; B += g) {
        const F = Math.floor(B / g);
        O && F % O === 0 ? h.push([F, F * g, y, R, T]) : E.push([F, F * g, y, R, A]);
      }
      T = se({}, T), T["stroke-dashoffset"] = z ? k / w : void 0, A = se({}, A), A["stroke-dashoffset"] = I ? k / w : void 0;
      const Y = (r.value.y + f) * w;
      for (let B = y; B <= p; B += g) {
        const F = Math.floor(B / g);
        O && F % O === 0 ? v.push([F, F * g, k, Y, T]) : x.push([F, F * g, k, Y, A]);
      }
      u.value = h, l.value = v, d.value = E, c.value = x;
    }), (h, v) => (openBlock(), createElementBlock("g", qs, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(d.value, ([E, x, w, g, y]) => (openBlock(), createElementBlock("path", mergeProps({
        key: `nv${E}`,
        d: `M ${w} ${x} L ${g} ${x}`
      }, y, { style: { "vector-effect": "non-scaling-stroke" } }), null, 16, Gs))), 128)),
      (openBlock(true), createElementBlock(Fragment, null, renderList(c.value, ([E, x, w, g, y]) => (openBlock(), createElementBlock("path", mergeProps({
        key: `nh${E}`,
        d: `M ${x} ${w} L ${x} ${g}`
      }, y, { style: { "vector-effect": "non-scaling-stroke" } }), null, 16, Ks))), 128)),
      (openBlock(true), createElementBlock(Fragment, null, renderList(u.value, ([E, x, w, g, y]) => (openBlock(), createElementBlock("path", mergeProps({
        key: `tv${E}`,
        d: `M ${w} ${x} L ${g} ${x}`
      }, y, { style: { "vector-effect": "non-scaling-stroke" } }), null, 16, Ys))), 128)),
      (openBlock(true), createElementBlock(Fragment, null, renderList(l.value, ([E, x, w, g, y]) => (openBlock(), createElementBlock("path", mergeProps({
        key: `th${E}`,
        d: `M ${x} ${w} L ${x} ${g}`
      }, y, { style: { "vector-effect": "non-scaling-stroke" } }), null, 16, Qs))), 128))
    ]));
  }
});
var er = defineComponent({
  __name: "VBackgroundViewport",
  setup(e) {
    const { viewport: t } = Vt(), n = ref(), o = (s, r, a) => {
      s.forEach((l) => {
        var u;
        return r.setAttribute(l, (u = a.getAttribute(l)) != null ? u : "");
      });
    }, i = new MutationObserver((s) => {
      if (!n.value) return;
      const r = s.map((a) => {
        var l;
        return (l = a.attributeName) != null ? l : "";
      }).filter(Boolean);
      o(r, n.value, t.value);
    });
    return onMounted(() => {
      const s = ["transform", "style"];
      i.observe(t.value, {
        attributes: true,
        attributeFilter: s
      }), n.value && o(s, n.value, t.value);
    }), onUnmounted(() => {
      i.disconnect();
    }), (s, r) => (openBlock(), createElementBlock("g", {
      ref_key: "background",
      ref: n,
      class: "v-ng-background-viewport"
    }, [
      renderSlot(s.$slots, "default")
    ], 512));
  }
});
var tr = ["d", "stroke-width"];
var nr = defineComponent({
  __name: "VEdgeBackground",
  props: {
    id: null,
    state: null,
    sourcePos: { default: void 0 },
    targetPos: { default: void 0 }
  },
  setup(e) {
    const t = e, { scale: n } = be(), o = bt(), {
      handleEdgePointerDownEvent: i,
      handleEdgePointerOverEvent: s,
      handleEdgePointerOutEvent: r,
      handleEdgeClickEvent: a,
      handleEdgeDoubleClickEvent: l,
      handleEdgeContextMenu: u
    } = it(), c = computed(() => {
      const h = t.state.position;
      if (t.state.loop) {
        const { radius: v, isLargeArc: E, isClockwise: x } = t.state.loop, [w, g] = v, y = E ? 1 : 0, k = x ? 1 : 0;
        return `M ${h.p1.x} ${h.p1.y} A ${w} ${g} 0 ${y} ${k} ${h.p2.x} ${h.p2.y}`;
      } else {
        if (o.type === "straight" || !t.state.curve)
          return `M ${h.p1.x} ${h.p1.y} L ${h.p2.x} ${h.p2.y}`;
        {
          const v = [...t.state.curve.control, { x: h.p2.x, y: h.p2.y }], E = [];
          return E.push(`M ${h.p1.x} ${h.p1.y}`), chunk_default(v, 2).forEach(([x, w]) => E.push(`Q ${x.x} ${x.y} ${w.x} ${w.y}`)), E.join(" ");
        }
      }
    }), d = computed(() => (t.state.line.stroke.width + 10) * n.value);
    return (h, v) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({ "v-ng-line-background": true, selectable: e.state.selectable }),
      d: unref(c),
      stroke: "transparent",
      "stroke-width": unref(d),
      fill: "none",
      onPointerdown: v[0] || (v[0] = withModifiers((E) => unref(i)(e.id, E), ["stop"])),
      onPointerenterPassive: v[1] || (v[1] = (E) => unref(s)(e.id, E)),
      onPointerleavePassive: v[2] || (v[2] = (E) => unref(r)(e.id, E)),
      onClick: v[3] || (v[3] = withModifiers((E) => unref(a)(e.id, E), ["stop"])),
      onDblclick: v[4] || (v[4] = withModifiers((E) => unref(l)(e.id, E), ["stop"])),
      onContextmenu: v[5] || (v[5] = (E) => unref(u)(e.id, E))
    }, null, 42, tr));
  }
});
var or = defineComponent({
  __name: "VEdgeBackgrounds",
  setup(e) {
    const { edgeStates: t, edgeGroupStates: n, layouts: o } = Se();
    return (i, s) => (openBlock(true), createElementBlock(Fragment, null, renderList(unref(n).edgeGroups, ({ summarize: r, edges: a }) => (openBlock(), createElementBlock(Fragment, null, [
      r ? createCommentVNode("", true) : (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(a, (l, u) => (openBlock(), createBlock(nr, {
        key: u,
        id: u,
        state: unref(t)[u],
        "source-pos": unref(o).nodes[l.source],
        "target-pos": unref(o).nodes[l.target]
      }, null, 8, ["id", "state", "source-pos", "target-pos"]))), 128))
    ], 64))), 256));
  }
});
var ir = ["d", "stroke", "stroke-width", "stroke-dasharray", "stroke-linecap"];
var co = defineComponent({
  __name: "VLine",
  props: {
    p1: null,
    p2: null,
    config: null
  },
  setup(e) {
    const t = e, { scale: n } = be(), o = computed(() => t.config.width * n.value), i = computed(() => ot(t.config.dasharray, n.value)), s = computed(() => {
      const r = t.config.animate ? gt2(t.config.dasharray) * t.config.animationSpeed * n.value : false;
      return r ? { "--animation-speed": r } : void 0;
    });
    return (r, a) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({ "v-ng-line": true, animate: e.config.animate }),
      d: `M ${e.p1.x} ${e.p1.y} L ${e.p2.x} ${e.p2.y}`,
      stroke: e.config.color,
      "stroke-width": unref(o),
      "stroke-dasharray": unref(i),
      "stroke-linecap": e.config.linecap,
      style: normalizeStyle(unref(s))
    }, null, 14, ir));
  }
});
var sr = ["d", "stroke", "stroke-width", "stroke-dasharray", "stroke-linecap"];
var rr = defineComponent({
  __name: "VArc",
  props: {
    p1: null,
    p2: null,
    radius: null,
    isLargeArc: { type: Boolean },
    isClockwise: { type: Boolean },
    config: null
  },
  setup(e) {
    const t = e, { scale: n } = be(), o = computed(() => t.config.width * n.value), i = computed(() => ot(t.config.dasharray, n.value)), s = computed(() => {
      const a = t.config.animate ? gt2(t.config.dasharray) * t.config.animationSpeed * n.value : false;
      return a ? { "--animation-speed": a } : void 0;
    }), r = computed(() => {
      const { p1: a, p2: l, radius: u, isLargeArc: c, isClockwise: d } = t, [h, v] = u, E = c ? 1 : 0, x = d ? 1 : 0;
      return `M ${a.x} ${a.y} A ${h} ${v} 0 ${E} ${x} ${l.x} ${l.y}`;
    });
    return (a, l) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({ "v-ng-line": true, animate: e.config.animate }),
      d: unref(r),
      stroke: e.config.color,
      "stroke-width": unref(o),
      "stroke-dasharray": unref(i),
      "stroke-linecap": e.config.linecap,
      style: normalizeStyle(unref(s)),
      fill: "none"
    }, null, 14, sr));
  }
});
var ar = ["d", "stroke", "stroke-width", "stroke-dasharray", "stroke-linecap", "marker-start", "marker-end"];
var lr = defineComponent({
  __name: "VEdgeCurved",
  props: {
    state: null,
    config: null,
    markerStart: { default: void 0 },
    markerEnd: { default: void 0 }
  },
  setup(e) {
    const t = e, { scale: n } = be(), o = computed(() => {
      var c, d;
      const a = t.state.position, l = [...(d = (c = t.state.curve) == null ? void 0 : c.control) != null ? d : [], { x: a.p2.x, y: a.p2.y }], u = [];
      return u.push(`M ${a.p1.x} ${a.p1.y}`), chunk_default(l, 2).forEach(([h, v]) => u.push(`Q ${h.x} ${h.y} ${v.x} ${v.y}`)), u.join(" ");
    }), i = computed(() => t.config.width * n.value), s = computed(() => ot(t.config.dasharray, n.value)), r = computed(() => {
      const a = t.config.animate ? gt2(t.config.dasharray) * t.config.animationSpeed * n.value : false;
      return a ? { "--animation-speed": a } : void 0;
    });
    return (a, l) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({ "v-ng-line": true, animate: e.config.animate }),
      d: unref(o),
      fill: "none",
      stroke: e.config.color,
      "stroke-width": unref(i),
      "stroke-dasharray": unref(s),
      "stroke-linecap": e.config.linecap,
      style: normalizeStyle(unref(r)),
      "marker-start": e.markerStart,
      "marker-end": e.markerEnd
    }, null, 14, ar));
  }
});
var cr = defineComponent({
  __name: "VEdge",
  props: {
    id: null,
    state: null,
    sourcePos: { default: void 0 },
    targetPos: { default: void 0 }
  },
  setup(e) {
    const t = bt();
    return (n, o) => e.state.loop ? (openBlock(), createBlock(rr, mergeProps({ key: 0 }, e.state.position, {
      radius: e.state.loop.radius,
      "is-large-arc": e.state.loop.isLargeArc,
      "is-clockwise": e.state.loop.isClockwise,
      class: [{ selectable: e.state.selectable, hover: e.state.hovered, selected: e.state.selected }, "v-ng-edge"],
      config: e.state.line.stroke,
      "marker-start": e.state.sourceMarkerId ? `url('#${e.state.sourceMarkerId}')` : void 0,
      "marker-end": e.state.targetMarkerId ? `url('#${e.state.targetMarkerId}')` : void 0
    }), null, 16, ["radius", "is-large-arc", "is-clockwise", "class", "config", "marker-start", "marker-end"])) : unref(t).type == "straight" || !e.state.curve ? (openBlock(), createBlock(co, mergeProps({
      key: 1,
      "data-edge-id": e.id
    }, e.state.position, {
      class: [{ selectable: e.state.selectable, hover: e.state.hovered, selected: e.state.selected }, "v-ng-edge"],
      config: e.state.line.stroke,
      "marker-start": e.state.sourceMarkerId ? `url('#${e.state.sourceMarkerId}')` : void 0,
      "marker-end": e.state.targetMarkerId ? `url('#${e.state.targetMarkerId}')` : void 0
    }), null, 16, ["data-edge-id", "class", "config", "marker-start", "marker-end"])) : (openBlock(), createBlock(lr, {
      key: 2,
      "data-edge-id": e.id,
      class: normalizeClass([{ selectable: e.state.selectable, hover: e.state.hovered, selected: e.state.selected }, "v-ng-edge"]),
      state: e.state,
      config: e.state.line.stroke,
      "marker-start": e.state.sourceMarkerId ? `url('#${e.state.sourceMarkerId}')` : void 0,
      "marker-end": e.state.targetMarkerId ? `url('#${e.state.targetMarkerId}')` : void 0
    }, null, 8, ["data-edge-id", "class", "state", "config", "marker-start", "marker-end"]));
  }
});
var ur = ["cx", "cy", "r", "fill", "stroke", "stroke-width", "stroke-dasharray"];
var dr = ["x", "y", "width", "height", "rx", "ry", "fill", "stroke", "stroke-width", "stroke-dasharray"];
var Et = defineComponent({
  __name: "VShape",
  props: {
    baseX: { default: 0 },
    baseY: { default: 0 },
    config: null
  },
  setup(e) {
    const t = e, { scale: n } = be(), o = ref(t.baseX), i = ref(t.baseY), s = ref(0), r = ref("#000000"), a = ref(void 0), l = ref(0), u = ref(0), c = ref(0), d = ref(0);
    return watchEffect(() => {
      var v;
      const h = n.value;
      s.value = t.config.strokeWidth * h, r.value = (v = t.config.strokeColor) != null ? v : "none", a.value = ot(t.config.strokeDasharray, h), t.config.type === "circle" ? (o.value = t.baseX, i.value = t.baseY, l.value = t.config.radius * h) : (u.value = t.config.width * h, c.value = t.config.height * h, d.value = t.config.borderRadius * h, o.value = t.baseX - u.value / 2, i.value = t.baseY - c.value / 2);
    }), (h, v) => e.config.type === "circle" ? (openBlock(), createElementBlock("circle", {
      key: 0,
      class: "v-ng-shape-circle",
      cx: o.value,
      cy: i.value,
      r: l.value,
      fill: e.config.color,
      stroke: r.value,
      "stroke-width": s.value,
      "stroke-dasharray": a.value
    }, null, 8, ur)) : (openBlock(), createElementBlock("rect", {
      key: 1,
      class: "v-ng-shape-rect",
      x: o.value,
      y: i.value,
      width: u.value,
      height: c.value,
      rx: d.value,
      ry: d.value,
      fill: e.config.color,
      stroke: r.value,
      "stroke-width": s.value,
      "stroke-dasharray": a.value
    }, null, 8, dr));
  }
});
var fr = ["rx", "ry", "fill", "transform"];
var hr = ["x", "y", "dominant-baseline", "font-family", "font-size", "fill"];
var vr = ["x", "dy", "dominant-baseline"];
var xt = defineComponent({
  __name: "VLabelText",
  props: {
    text: null,
    x: { default: 0 },
    y: { default: 0 },
    dominantBaseline: { default: "central" },
    config: null
  },
  setup(e) {
    const t = e, n = useAttrs(), { scale: o } = be(), i = computed(() => {
      var w, g;
      return (g = (w = t.text) == null ? void 0 : w.toString().split(/\r?\n/)) != null ? g : "";
    }), s = computed(() => {
      var w;
      return (w = n["font-size"]) != null ? w : t.config.fontSize * o.value;
    }), r = computed(() => s.value * t.config.lineHeight), a = computed(() => {
      const w = t.dominantBaseline;
      return w === "hanging" ? 0 : w === "central" ? -(r.value * (i.value.length - 1)) / 2 : -r.value * (i.value.length - 1);
    }), l = ref(), u = ref(""), c = reactive({ x: 0, y: 0, width: 0, height: 0 }), d = computed(() => {
      var m, f;
      const w = t.config.background;
      if (!w) return c;
      let g, y;
      w.padding instanceof Object ? (g = w.padding.vertical, y = w.padding.horizontal) : (g = (m = w.padding) != null ? m : 0, y = (f = w.padding) != null ? f : 0);
      const k = r.value - s.value;
      return {
        x: c.x - y * o.value,
        y: c.y - g * o.value - k / 2,
        width: c.width + y * 2 * o.value,
        height: c.height + g * 2 * o.value + k
      };
    });
    let h;
    const v = () => {
      t.config.background && t.config.background.visible ? !h && l.value && (h = x(l.value, c, u)) : (h == null || h.disconnect(), h = void 0);
    };
    onMounted(() => v()), watch(
      () => t.config.background && t.config.background.visible,
      (w, g) => {
        w != g && v();
      }
    ), onUnmounted(() => {
      h == null || h.disconnect(), h = void 0;
    });
    function E(w, g, y) {
      var m;
      const k = w.getBBox();
      g.x = k.x, g.y = k.y, g.width = k.width, g.height = k.height, y.value = (m = w.getAttribute("transform")) != null ? m : void 0;
    }
    function x(w, g, y) {
      const k = new MutationObserver(() => {
        E(w, g, y);
      });
      return k.observe(w, {
        attributes: true,
        attributeFilter: ["x", "y", "transform", "font-size"]
      }), E(w, g, y), k;
    }
    return (w, g) => {
      var y, k, m, f, p, S;
      return openBlock(), createElementBlock(Fragment, null, [
        e.config.background && e.config.background.visible ? (openBlock(), createElementBlock("rect", mergeProps({
          key: 0,
          class: "v-ng-text-background"
        }, unref(d), {
          rx: ((k = (y = e.config.background) == null ? void 0 : y.borderRadius) != null ? k : 0) * unref(o),
          ry: ((f = (m = e.config.background) == null ? void 0 : m.borderRadius) != null ? f : 0) * unref(o),
          fill: (S = (p = e.config.background) == null ? void 0 : p.color) != null ? S : "#ffffff",
          transform: u.value
        }), null, 16, fr)) : createCommentVNode("", true),
        createBaseVNode("text", mergeProps({
          ref_key: "element",
          ref: l,
          class: "v-ng-text"
        }, w.$attrs, {
          x: e.x,
          y: e.y,
          "dominant-baseline": e.dominantBaseline,
          "font-family": w.$attrs["font-family"] ? `${w.$attrs["font-family"]}` : e.config.fontFamily,
          "font-size": unref(s),
          fill: w.$attrs.fill ? `${w.$attrs.fill}` : e.config.color
        }), [
          unref(i).length <= 1 ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
            createTextVNode(toDisplayString(e.text), 1)
          ], 64)) : (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(unref(i), (O, I) => (openBlock(), createElementBlock("tspan", {
            key: I,
            x: e.x,
            dy: I == 0 ? unref(a) : unref(r),
            "dominant-baseline": e.dominantBaseline
          }, toDisplayString(O), 9, vr))), 128))
        ], 16, hr)
      ], 64);
    };
  }
});
var gr = defineComponent({
  __name: "VEdgeSummarized",
  props: {
    edges: null,
    layouts: null
  },
  setup(e) {
    const t = e, n = bt(), {
      handleEdgesPointerDownEvent: o,
      handleEdgesPointerOverEvent: i,
      handleEdgesPointerOutEvent: s,
      handleEdgesClickEvent: r,
      handleEdgesDoubleClickEvent: a,
      handleEdgesContextMenu: l
    } = it(), { edgeStates: u } = Se(), c = ref({ p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } }), d = ref({ x: 0, y: 0 });
    watchEffect(() => {
      const k = Object.keys(t.edges).find((m) => m in u);
      k && (c.value = u[k].position, d.value = {
        x: (c.value.p1.x + c.value.p2.x) / 2,
        y: (c.value.p1.y + c.value.p2.y) / 2
      });
    });
    const h = computed(() => Object.keys(t.edges)), v = computed(() => $.values(n.summarized.label, t.edges)), E = computed(() => $.values(n.summarized.shape, t.edges)), x = computed(() => $.values(n.summarized.stroke, t.edges)), w = computed(() => h.value.some((k) => u[k].hovered)), g = computed(() => h.value.some((k) => u[k].selectable)), y = computed(() => h.value.some((k) => u[k].selected));
    return (k, m) => (openBlock(), createElementBlock("g", {
      class: normalizeClass({ "v-ng-line-summarized": true, hovered: unref(w), selectable: unref(g), selected: unref(y) }),
      onPointerdown: m[0] || (m[0] = withModifiers((f) => unref(o)(unref(h), f), ["stop"])),
      onPointerenterPassive: m[1] || (m[1] = (f) => unref(i)(unref(h), f)),
      onPointerleavePassive: m[2] || (m[2] = (f) => unref(s)(unref(h), f)),
      onClick: m[3] || (m[3] = withModifiers((f) => unref(r)(unref(h), f), ["stop"])),
      onDblclick: m[4] || (m[4] = withModifiers((f) => unref(a)(unref(h), f), ["stop"])),
      onContextmenu: m[5] || (m[5] = (f) => unref(l)(unref(h), f))
    }, [
      createVNode(co, mergeProps(c.value, {
        config: unref(x),
        "data-edge-id": unref(h)[0]
      }), null, 16, ["config", "data-edge-id"]),
      createVNode(Et, {
        "base-x": d.value.x,
        "base-y": d.value.y,
        config: unref(E)
      }, null, 8, ["base-x", "base-y", "config"]),
      createVNode(xt, {
        text: Object.keys(e.edges).length.toString(),
        x: d.value.x,
        y: d.value.y,
        config: unref(v),
        "text-anchor": "middle",
        "dominant-baseline": "central"
      }, null, 8, ["text", "x", "y", "config"])
    ], 34));
  }
});
var pr = { class: "v-ng-edge-overlay" };
var Sn = defineComponent({
  __name: "VEdgeOverlay",
  props: {
    edgeId: { default: void 0 },
    edge: { default: void 0 },
    edges: { default: () => ({}) },
    state: null,
    isSummarized: { type: Boolean }
  },
  setup(e) {
    const t = e, { svg: n } = Vt(), { scale: o } = be(), i = bt();
    function s() {
      return t.isSummarized ? $.values(i.summarized.stroke, t.edges) : t.state.line.stroke;
    }
    function r(c) {
      return { source: c.p1, target: c.p2 };
    }
    function a(c) {
      if (c.curve)
        return c.curve.center;
      {
        const d = c.origin.p1, h = c.origin.p2;
        return {
          x: (d.x + h.x) / 2,
          y: (d.y + h.y) / 2
        };
      }
    }
    function l() {
      var h;
      if (!n.value) return 0;
      const c = (h = t.edgeId) != null ? h : Object.keys(t.edges)[0], d = n.value.querySelector(`path[data-edge-id="${c}"]`);
      return d ? d.getTotalLength() : 0;
    }
    function u(c) {
      var E;
      if (!n.value || !isFinite(c)) return t.state.position.p1;
      t.state;
      const d = (E = t.edgeId) != null ? E : Object.keys(t.edges)[0], h = n.value.querySelector(`path[data-edge-id="${d}"]`);
      if (!h) return t.state.position.p1;
      const v = h.getPointAtLength(c);
      return { x: v.x, y: v.y };
    }
    return (c, d) => (openBlock(), createElementBlock("g", pr, [
      e.isSummarized ? renderSlot(c.$slots, "default", {
        key: 0,
        edges: e.edges,
        isSummarized: e.isSummarized,
        stroke: s(),
        position: r(e.state.origin),
        center: a(e.state),
        hovered: e.state.hovered,
        selected: e.state.selected,
        scale: unref(o),
        length: l(),
        pointAtLength: u
      }) : renderSlot(c.$slots, "default", {
        key: 1,
        edgeId: e.edgeId,
        edge: e.edge,
        edges: { [e.edgeId]: e.edge },
        isSummarized: e.isSummarized,
        stroke: s(),
        position: r(e.state.origin),
        center: a(e.state),
        hovered: e.state.hovered,
        selected: e.state.selected,
        scale: unref(o),
        length: l(),
        pointAtLength: u
      })
    ]));
  }
});
var mr = defineComponent({
  __name: "VEdgeGroups",
  props: {
    hasEdgeOverlaySlot: { type: Boolean }
  },
  setup(e) {
    const { edgeStates: t, edgeZOrderedList: n, layouts: o } = Se();
    return (i, s) => (openBlock(true), createElementBlock(Fragment, null, renderList(unref(n), (r) => (openBlock(), createElementBlock(Fragment, null, [
      unref(Oi)(r) ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
        (openBlock(), createBlock(gr, {
          key: r.key,
          edges: r.group.edges,
          layouts: unref(o).nodes
        }, null, 8, ["edges", "layouts"])),
        e.hasEdgeOverlaySlot ? (openBlock(), createBlock(Sn, {
          key: r.key,
          edges: r.group.edges,
          state: unref(t)[Object.keys(r.group.edges)[0]],
          "is-summarized": true
        }, {
          default: withCtx((a) => [
            renderSlot(i.$slots, "default", normalizeProps(guardReactiveProps(a)))
          ]),
          _: 2
        }, 1032, ["edges", "state"])) : createCommentVNode("", true)
      ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
        (openBlock(), createBlock(cr, {
          id: r.key,
          key: r.key,
          state: unref(t)[r.key],
          "source-pos": unref(o).nodes[r.edge.source],
          "target-pos": unref(o).nodes[r.edge.target]
        }, null, 8, ["id", "state", "source-pos", "target-pos"])),
        e.hasEdgeOverlaySlot ? (openBlock(), createBlock(Sn, {
          key: r.key,
          "edge-id": r.key,
          edge: r.edge,
          state: unref(t)[r.key],
          "is-summarized": false
        }, {
          default: withCtx((a) => [
            renderSlot(i.$slots, "default", normalizeProps(guardReactiveProps(a)))
          ]),
          _: 2
        }, 1032, ["edge-id", "edge", "state"])) : createCommentVNode("", true)
      ], 64))
    ], 64))), 256));
  }
});
var br = { class: "v-ng-layer-edges v-ng-graph-objects" };
var yr = defineComponent({
  __name: "VEdgesLayer",
  setup(e) {
    const t = useSlots(), n = computed(() => "edge-overlay" in t);
    return (o, i) => (openBlock(), createElementBlock("g", br, [
      createVNode(or),
      createVNode(mr, { "has-edge-overlay-slot": unref(n) }, createSlots({ _: 2 }, [
        unref(n) ? {
          name: "default",
          fn: withCtx((s) => [
            renderSlot(o.$slots, "edge-overlay", normalizeProps(guardReactiveProps(s)))
          ]),
          key: "0"
        } : void 0
      ]), 1032, ["has-edge-overlay-slot"])
    ]));
  }
});
var wr = defineComponent({
  __name: "VEdgeLabelPlace",
  props: {
    edgeId: null,
    edge: null,
    state: null
  },
  setup(e) {
    const t = e, { scale: n } = be(), o = computed(() => Hn(
      t.state.labelPosition,
      t.state.line.stroke,
      t.state.label.margin,
      t.state.label.padding,
      n.value
    ));
    return (i, s) => e.state.loop ? createCommentVNode("", true) : renderSlot(i.$slots, "default", {
      key: 0,
      edgeId: e.edgeId,
      edge: e.edge,
      config: e.state.label,
      area: unref(o),
      hovered: e.state.hovered,
      selected: e.state.selected,
      scale: unref(n)
    });
  }
});
var Er = defineComponent({
  __name: "VEdgeLabelsPlace",
  props: {
    edges: null,
    state: null,
    summarizeState: null
  },
  setup(e) {
    const t = e, { scale: n } = be(), o = computed(() => {
      var i, s;
      return Hn(
        t.state.labelPosition,
        (s = (i = t.summarizeState) == null ? void 0 : i.stroke) != null ? s : t.state.line.stroke,
        t.state.label.margin,
        t.state.label.padding,
        n.value
      );
    });
    return (i, s) => e.state.loop ? createCommentVNode("", true) : renderSlot(i.$slots, "default", {
      key: 0,
      edges: e.edges,
      config: e.state.label,
      area: unref(o),
      hovered: e.state.hovered,
      selected: e.state.selected,
      scale: unref(n)
    });
  }
});
var xr = { class: "v-ng-edge-labels" };
var kr = defineComponent({
  __name: "VEdgeLabels",
  props: {
    enableEdgeLabel: { type: Boolean, default: false },
    enableEdgesLabel: { type: Boolean, default: false }
  },
  setup(e) {
    const { edgeStates: t, edgeGroupStates: n, summarizedEdgeStates: o } = Se(), i = computed(() => {
      const r = {}, a = {};
      return Object.entries(n.edgeGroups).forEach(([l, u]) => {
        Object.keys(u.edges).length > 0 && (u.summarize ? a[l] = u : r[l] = u);
      }), { individual: r, summarized: a };
    });
    function s(r) {
      return Object.keys(r.edges)[0];
    }
    return (r, a) => (openBlock(), createElementBlock("g", xr, [
      e.enableEdgeLabel ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(unref(i).individual, (l, u) => (openBlock(), createElementBlock(Fragment, { key: u }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(l.edges, (c, d) => (openBlock(), createBlock(wr, {
          key: d,
          "edge-id": d,
          edge: c,
          state: unref(t)[d]
        }, {
          default: withCtx((h) => [
            renderSlot(r.$slots, "edge-label", normalizeProps(guardReactiveProps(h)))
          ]),
          _: 2
        }, 1032, ["edge-id", "edge", "state"]))), 128))
      ], 64))), 128)) : createCommentVNode("", true),
      e.enableEdgesLabel ? (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(unref(i).summarized, (l, u) => (openBlock(), createBlock(Er, {
        key: u,
        edges: l.edges,
        state: unref(t)[s(l)],
        "summarize-state": unref(o)[s(l)]
      }, {
        default: withCtx((c) => [
          renderSlot(r.$slots, "edges-label", normalizeProps(guardReactiveProps(c)))
        ]),
        _: 2
      }, 1032, ["edges", "state", "summarize-state"]))), 128)) : createCommentVNode("", true)
    ]));
  }
});
var Pr = defineComponent({
  __name: "VEdgeLabelsLayer",
  props: {
    enableEdgeLabel: { type: Boolean, default: false },
    enableEdgesLabel: { type: Boolean, default: false }
  },
  setup(e) {
    return (t, n) => (openBlock(), createBlock(kr, {
      "enable-edge-label": e.enableEdgeLabel,
      "enable-edges-label": e.enableEdgesLabel,
      class: "v-ng-layer-edge-labels v-ng-graph-objects"
    }, createSlots({ _: 2 }, [
      e.enableEdgeLabel ? {
        name: "edge-label",
        fn: withCtx((o) => [
          renderSlot(t.$slots, "edge-label", normalizeProps(guardReactiveProps(o)))
        ]),
        key: "0"
      } : void 0,
      e.enableEdgesLabel ? {
        name: "edges-label",
        fn: withCtx((o) => [
          renderSlot(t.$slots, "edges-label", normalizeProps(guardReactiveProps(o)))
        ]),
        key: "1"
      } : void 0
    ]), 1032, ["enable-edge-label", "enable-edges-label"]));
  }
});
var Sr = defineComponent({
  __name: "VNodeFocusRing",
  props: {
    id: null,
    state: null,
    pos: { default: void 0 }
  },
  setup(e) {
    const t = e, n = computed(() => {
      var r;
      return ((r = t.pos) == null ? void 0 : r.x) || 0;
    }), o = computed(() => {
      var r;
      return ((r = t.pos) == null ? void 0 : r.y) || 0;
    }), i = mt(), s = reactive({});
    return watchEffect(() => {
      var a, l, u;
      const r = t.state.shape;
      if (r.type === "circle") {
        const c = {
          type: "circle",
          radius: r.radius + ((a = r.strokeWidth) != null ? a : 0) / 2 + i.focusring.padding + i.focusring.width / 2,
          color: "none",
          strokeWidth: i.focusring.width,
          strokeColor: i.focusring.color,
          strokeDasharray: i.focusring.dasharray
        };
        Object.assign(s, c);
      } else {
        const c = {
          type: "rect",
          width: r.width + ((l = r.strokeWidth) != null ? l : 0) + i.focusring.padding * 2 + i.focusring.width,
          height: r.height + ((u = r.strokeWidth) != null ? u : 0) + i.focusring.padding * 2 + i.focusring.width,
          borderRadius: r.borderRadius > 0 ? r.borderRadius + i.focusring.padding : 0,
          color: "none",
          strokeWidth: i.focusring.width,
          strokeColor: i.focusring.color,
          strokeDasharray: i.focusring.dasharray
        };
        Object.assign(s, c);
      }
    }), (r, a) => (openBlock(), createBlock(Et, {
      class: "v-ng-node-focusring",
      "base-x": unref(n),
      "base-y": unref(o),
      config: s
    }, null, 8, ["base-x", "base-y", "config"]));
  }
});
var Mr = { class: "v-ng-layer-nodes-selections" };
var Cr = defineComponent({
  __name: "VFocusringLayer",
  setup(e) {
    const { nodeStates: t } = Se(), { selectedNodes: n } = xs(), o = Jt();
    return (i, s) => (openBlock(), createElementBlock("g", Mr, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(unref(n), (r) => (openBlock(), createBlock(Sr, {
        id: r,
        key: r,
        state: unref(t)[r],
        pos: unref(o).nodes[r]
      }, null, 8, ["id", "state", "pos"]))), 128))
    ]));
  }
});
var Or = ["transform"];
var Mn = defineComponent({
  __name: "VNode",
  props: {
    id: null,
    state: null,
    pos: { default: void 0 }
  },
  setup(e) {
    const t = e, n = computed(() => {
      var d;
      return ((d = t.pos) == null ? void 0 : d.x) || 0;
    }), o = computed(() => {
      var d;
      return ((d = t.pos) == null ? void 0 : d.y) || 0;
    }), { scale: i } = be(), {
      handleNodePointerDownEvent: s,
      handleNodePointerOverEvent: r,
      handleNodePointerOutEvent: a,
      handleNodeClickEvent: l,
      handleNodeDoubleClickEvent: u,
      handleNodeContextMenu: c
    } = it();
    return (d, h) => (openBlock(), createElementBlock("g", {
      class: normalizeClass({ "v-ng-node": true, hover: e.state.hovered, selected: e.state.selected }),
      transform: `translate(${unref(n)} ${unref(o)})`,
      onPointerdown: h[0] || (h[0] = withModifiers((v) => unref(s)(e.id, v), ["stop"])),
      onPointerenterPassive: h[1] || (h[1] = (v) => unref(r)(e.id, v)),
      onPointerleavePassive: h[2] || (h[2] = (v) => unref(a)(e.id, v)),
      onClick: h[3] || (h[3] = withModifiers((v) => unref(l)(e.id, v), ["stop"])),
      onDblclick: h[4] || (h[4] = withModifiers((v) => unref(u)(e.id, v), ["stop"])),
      onContextmenu: h[5] || (h[5] = (v) => unref(c)(e.id, v))
    }, [
      renderSlot(d.$slots, "override-node", {
        nodeId: e.id,
        scale: unref(i),
        config: e.state.shape,
        class: normalizeClass({ draggable: e.state.draggable, selectable: e.state.selectable })
      }, () => [
        createVNode(Et, {
          config: e.state.shape,
          class: normalizeClass({
            "v-ng-node-default": true,
            draggable: e.state.draggable,
            selectable: e.state.selectable
          })
        }, null, 8, ["config", "class"])
      ])
    ], 42, Or));
  }
});
var zr = defineComponent({
  __name: "VNodesLayer",
  setup(e) {
    const t = useSlots(), n = computed(() => "override-node" in t), { nodeZOrderedList: o } = Se(), i = mt(), s = Jt();
    return (r, a) => unref(n) ? (openBlock(), createBlock(TransitionGroup, {
      key: 0,
      name: unref(i).transition,
      css: !!unref(i).transition,
      tag: "g",
      class: "v-ng-layer-nodes v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(o), (l) => (openBlock(), createBlock(Mn, {
          id: l.id,
          key: l.id,
          state: l,
          pos: unref(s).nodes[l.id]
        }, {
          "override-node": withCtx((u) => [
            renderSlot(r.$slots, "override-node", normalizeProps(guardReactiveProps(u)))
          ]),
          _: 2
        }, 1032, ["id", "state", "pos"]))), 128))
      ]),
      _: 3
    }, 8, ["name", "css"])) : (openBlock(), createBlock(TransitionGroup, {
      key: 1,
      name: unref(i).transition,
      css: !!unref(i).transition,
      tag: "g",
      class: "v-ng-layer-nodes v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(o), (l) => (openBlock(), createBlock(Mn, {
          id: l.id,
          key: l.id,
          state: l,
          pos: unref(s).nodes[l.id]
        }, null, 8, ["id", "state", "pos"]))), 128))
      ]),
      _: 1
    }, 8, ["name", "css"]));
  }
});
var uo = {
  [N.NORTH]: 0,
  [N.NORTH_EAST]: 1,
  [N.EAST]: 2,
  [N.SOUTH_EAST]: 3,
  [N.SOUTH]: 4,
  [N.SOUTH_WEST]: 5,
  [N.WEST]: 6,
  [N.NORTH_WEST]: 7,
  [N.CENTER]: -1
};
var Tr = [
  /* N */
  (e, t) => ze(e, 0, t ? 90 : 60),
  /* NE */
  (e, t) => ze(e, 45, t ? 90 : 45),
  /* E */
  (e, t) => ze(e, 90, t ? 60 : 30),
  /* SE */
  (e, t) => ze(e, 135, t ? 90 : 45),
  /* S */
  (e, t) => ze(e, 180, t ? 90 : 60),
  /* SW */
  (e, t) => ze(e, 225, t ? 90 : 45),
  /* W */
  (e, t) => ze(e, 270, t ? 60 : 30),
  /* NW */
  (e, t) => ze(e, 315, t ? 90 : 45)
];
function Ir(e, t, n, o, i) {
  if (i === N.CENTER)
    return N.CENTER;
  const s = [];
  Object.entries(n).forEach(([u, c]) => {
    let d = false;
    if (c.nodeId === e) {
      const v = o(u);
      v && (d = true, c = qe(se({}, c), {
        pos: { x: v.x, y: v.y }
      }));
    }
    const h = (qt(Wt(c.pos, t)) + 360 + 90) % 360;
    s.push([h, d]);
  });
  const r = $r(i), l = [
    r,
    (r + 4) % 8,
    // priority is given to diagonals
    (r + 2) % 8,
    (r - 2 + 8) % 8,
    (r + 1) % 8,
    (r - 1 + 8) % 8,
    (r + 3) % 8,
    (r - 3 + 8) % 8
  ].find((u) => s.every((c) => !Tr[u](...c)));
  return l === void 0 ? i : Lr(l, i);
}
function ze(e, t, n) {
  e %= 360;
  const o = (t - n + 360) % 360, i = (t + n) % 360;
  return o <= i ? o < e && e < i : o < e || e < i;
}
function $r(e) {
  var t;
  return (t = uo[e]) != null ? t : 0;
}
function Lr(e, t) {
  var n, o;
  return (o = (n = Object.entries(uo)[e]) == null ? void 0 : n[0]) != null ? o : t;
}
var Ar = ["transform"];
var Cn = defineComponent({
  __name: "VNodeLabel",
  props: {
    id: null,
    state: null,
    pos: { default: void 0 }
  },
  setup(e) {
    const t = e, n = mt(), { edgeStates: o } = Se(), { scale: i } = be(), {
      handleNodePointerDownEvent: s,
      handleNodePointerOverEvent: r,
      handleNodePointerOutEvent: a,
      handleNodeClickEvent: l,
      handleNodeDoubleClickEvent: u,
      handleNodeContextMenu: c
    } = it(), d = computed(() => {
      var z;
      return ((z = t.pos) == null ? void 0 : z.x) || 0;
    }), h = computed(() => {
      var z;
      return ((z = t.pos) == null ? void 0 : z.y) || 0;
    }), v = computed(() => t.state.label.direction === N.CENTER ? 0 : t.state.label.margin * i.value), E = ref(0), x = ref(0), w = ref(0), g = ref(0), y = computed(() => {
      var R;
      const z = t.state.label.direction, T = t.state.label.directionAutoAdjustment;
      if (T === false)
        return z;
      const A = { x: d.value, y: h.value };
      return T === true ? Ir(
        t.state.id,
        A,
        t.state.oppositeNodes,
        (Y) => {
          var B, F;
          return (F = (B = o[Y]) == null ? void 0 : B.loop) == null ? void 0 : F.center;
        },
        z
      ) : (R = T({
        nodeId: t.state.id,
        pos: A,
        oppositeNodes: t.state.oppositeNodes
      })) != null ? R : z;
    }), k = computed(() => {
      switch (y.value) {
        case N.CENTER:
        case N.NORTH:
        case N.SOUTH:
          return "middle";
        case N.EAST:
        case N.NORTH_EAST:
        case N.SOUTH_EAST:
          return "start";
        case N.WEST:
        case N.NORTH_WEST:
        case N.SOUTH_WEST:
        default:
          return "end";
      }
    }), m = computed(() => {
      switch (y.value) {
        case N.NORTH:
        case N.NORTH_EAST:
        case N.NORTH_WEST:
          return "text-top";
        case N.SOUTH:
        case N.SOUTH_EAST:
        case N.SOUTH_WEST:
          return "hanging";
        case N.CENTER:
        case N.EAST:
        case N.WEST:
        default:
          return "central";
      }
    }), f = computed(() => {
      switch (y.value) {
        case N.CENTER:
        case N.NORTH:
        case N.SOUTH:
          return 0;
        case N.EAST:
          return x.value;
        case N.WEST:
          return -x.value;
        case N.NORTH_EAST:
        case N.SOUTH_EAST:
          return g.value;
        case N.NORTH_WEST:
        case N.SOUTH_WEST:
        default:
          return -g.value;
      }
    }), p = computed(() => {
      switch (y.value) {
        case N.NORTH:
          return -E.value;
        case N.SOUTH:
          return E.value;
        case N.CENTER:
        case N.EAST:
        case N.WEST:
          return 0;
        case N.NORTH_EAST:
        case N.NORTH_WEST:
          return -w.value;
        case N.SOUTH_EAST:
        case N.SOUTH_WEST:
        default:
          return w.value;
      }
    });
    watchEffect(() => {
      const z = i.value, T = t.state.shape;
      if (T.type == "circle") {
        const A = T.radius * z, R = A + v.value, Y = Math.sqrt(ae(R, 2) / 2);
        E.value = A + v.value, x.value = A + v.value, w.value = Y, g.value = Y;
      } else {
        const A = T.borderRadius * z, R = T.width * z, Y = T.height * z, B = A + v.value, F = Math.sqrt(ae(B, 2) / 2);
        E.value = Y / 2 + v.value, x.value = R / 2 + v.value, w.value = Y / 2 - A + F, g.value = R / 2 - A + F;
      }
    });
    const S = computed(() => (z) => n.label.handleNodeEvents ? {
      pointerdown: (T) => {
        T.stopPropagation(), s(z, T);
      },
      pointerenter: (T) => r(z, T),
      pointerleave: (T) => a(z, T),
      click: (T) => {
        T.stopPropagation(), l(z, T);
      },
      dblclick: (T) => {
        T.stopPropagation(), u(z, T);
      },
      contextmenu: (T) => {
        c(z, T);
      }
    } : {}), O = computed(() => {
      const z = n.label.handleNodeEvents;
      return {
        "v-ng-node-label": true,
        hover: z && t.state.hovered,
        selected: z && t.state.selected
      };
    }), I = computed(() => {
      const z = n.label.handleNodeEvents;
      return {
        draggable: z && t.state.draggable,
        selectable: z && t.state.selectable
      };
    });
    return (z, T) => (openBlock(), createElementBlock("g", mergeProps({
      class: unref(O),
      transform: `translate(${unref(d)} ${unref(h)})`
    }, toHandlers(unref(S)(e.id), true)), [
      renderSlot(z.$slots, "override-node-label", {
        nodeId: e.id,
        scale: unref(i),
        text: e.state.labelText,
        x: unref(f),
        y: unref(p),
        config: e.state.label,
        shape: e.state.shape,
        textAnchor: unref(k),
        dominantBaseline: unref(m),
        class: normalizeClass(unref(I))
      }, () => [
        createVNode(xt, {
          text: e.state.labelText,
          x: 0,
          y: 0,
          config: e.state.label,
          "text-anchor": unref(k),
          "dominant-baseline": unref(m),
          class: normalizeClass(unref(I)),
          transform: `translate(${unref(f)} ${unref(p)})`
        }, null, 8, ["text", "config", "text-anchor", "dominant-baseline", "class", "transform"])
      ])
    ], 16, Ar));
  }
});
var Zr = defineComponent({
  __name: "VNodeLabelsLayer",
  setup(e) {
    const t = useSlots(), n = computed(() => "override-node-label" in t), { nodeZOrderedList: o } = Se(), i = mt(), s = Jt(), r = computed(() => a(o.value));
    function a(l) {
      return l.filter((u) => {
        var c;
        return u.label.visible && ((c = u.labelText) != null ? c : false);
      });
    }
    return (l, u) => unref(n) ? (openBlock(), createBlock(TransitionGroup, {
      key: 0,
      name: unref(i).transition,
      css: !!unref(i).transition,
      tag: "g",
      class: "v-ng-layer-node-labels v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(r), (c) => (openBlock(), createBlock(Cn, {
          id: c.id,
          key: c.id,
          state: c,
          pos: unref(s).nodes[c.id]
        }, {
          "override-node-label": withCtx((d) => [
            renderSlot(l.$slots, "override-node-label", normalizeProps(guardReactiveProps(d)))
          ]),
          _: 2
        }, 1032, ["id", "state", "pos"]))), 128))
      ]),
      _: 3
    }, 8, ["name", "css"])) : (openBlock(), createBlock(TransitionGroup, {
      key: 1,
      name: unref(i).transition,
      css: !!unref(i).transition,
      tag: "g",
      class: "v-ng-layer-node-labels v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(r), (c) => (openBlock(), createBlock(Cn, {
          id: c.id,
          key: c.id,
          state: c,
          pos: unref(s).nodes[c.id]
        }, null, 8, ["id", "state", "pos"]))), 128))
      ]),
      _: 1
    }, 8, ["name", "css"]));
  }
});
var Dr = ["d", "stroke", "stroke-width", "stroke-dasharray", "stroke-linecap", "stroke-linejoin"];
var Nr = defineComponent({
  __name: "VPath",
  props: {
    path: null
  },
  setup(e) {
    const t = e, { nodeStates: n, edgeStates: o, layouts: i } = Se(), { scale: s } = be(), r = Zn();
    function a(h) {
      if (h.edges.length === 0) return [];
      const v = $.value(r.margin, h.path) * s.value;
      return pi(
        h,
        n,
        i.nodes,
        o,
        s.value,
        r.curveInNode,
        r.end,
        v
      );
    }
    function l(h) {
      const v = a(h);
      let E = true;
      return v.map((x) => {
        if (x === null)
          E = true;
        else {
          if (typeof x == "string")
            return x;
          if (x instanceof Array) {
            x = [...x];
            const w = [];
            if (x.length % 2 === 1) {
              const g = x[0];
              x = x.slice(1), w.push(`L ${g.x} ${g.y}`);
            }
            return chunk_default(x, 2).map(([g, y]) => w.push(`Q ${g.x} ${g.y} ${y.x} ${y.y}`)), w.join(" ");
          } else {
            const w = E;
            return E = false, `${w ? "M " : "L "}${x.x} ${x.y}`;
          }
        }
      }).join(" ");
    }
    const u = computed(() => {
      const h = t.path;
      return h.selected ? $.values(r.selected, h.path) : h.hovered && r.hover ? $.values(r.hover, h.path) : $.values(r.normal, h.path);
    }), c = computed(() => ot(u.value.dasharray, s.value)), d = computed(() => {
      const h = u.value.animate ? gt2(u.value.dasharray) * u.value.animationSpeed * s.value : false;
      return h ? { "--animation-speed": h } : void 0;
    });
    return (h, v) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({
        "v-ng-path": true,
        animate: unref(u).animate,
        clickable: e.path.clickable,
        hoverable: e.path.hoverable
      }),
      d: l(e.path),
      fill: "none",
      stroke: unref(u).color,
      "stroke-width": unref(u).width * unref(s),
      "stroke-dasharray": unref(c),
      "stroke-linecap": unref(u).linecap,
      "stroke-linejoin": unref(u).linejoin,
      style: normalizeStyle(unref(d))
    }, null, 14, Dr));
  }
});
var jr = defineComponent({
  __name: "VPaths",
  setup(e) {
    const { pathZOrderedList: t } = Se(), n = Zn(), {
      handlePathPointerDownEvent: o,
      handlePathPointerOverEvent: i,
      handlePathPointerOutEvent: s,
      handlePathClickEvent: r,
      handlePathDoubleClickEvent: a,
      handlePathContextMenu: l
    } = it();
    return (u, c) => (openBlock(), createBlock(TransitionGroup, {
      name: unref(n).transition,
      css: !!unref(n).transition,
      tag: "g",
      class: "v-ng-paths v-ng-layer-paths v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(t), (d) => (openBlock(), createBlock(Nr, {
          key: d.id,
          path: d,
          onPointerdown: (h) => unref(o)(d.id, h),
          onPointerenterPassive: (h) => unref(i)(d.id, h),
          onPointerleavePassive: (h) => unref(s)(d.id, h),
          onClick: withModifiers((h) => unref(r)(d.id, h), ["stop"]),
          onDblclick: withModifiers((h) => unref(a)(d.id, h), ["stop"]),
          onContextmenu: (h) => unref(l)(d.id, h)
        }, null, 8, ["path", "onPointerdown", "onPointerenterPassive", "onPointerleavePassive", "onClick", "onDblclick", "onContextmenu"]))), 128))
      ]),
      _: 1
    }, 8, ["name", "css"]));
  }
});
var Br = defineComponent({
  __name: "VPathsLayer",
  setup(e) {
    return (t, n) => (openBlock(), createBlock(jr));
  }
});
var Rr = { key: 0 };
var Vr = defineComponent({
  __name: "VNetworkGraph",
  props: {
    nodes: { default: () => ({}) },
    edges: { default: () => ({}) },
    paths: { default: () => ({}) },
    layouts: { default: () => ({}) },
    zoomLevel: { default: 1 },
    selectedNodes: { default: () => [] },
    selectedEdges: { default: () => [] },
    selectedPaths: { default: () => [] },
    configs: { default: () => ({}) },
    layers: { default: () => ({}) },
    eventHandlers: { default: () => ({}) }
  },
  emits: ["update:zoomLevel", "update:selectedNodes", "update:selectedEdges", "update:selectedPaths", "update:layouts"],
  setup(e, { expose: t, emit: n }) {
    const o = e, i = [
      "override-node",
      "override-node-label",
      "edge-overlay",
      "edge-label",
      "edges-label"
    ], s = useSlots(), r = toRef(o, "nodes"), a = toRef(o, "edges"), { objects: l, isInCompatibilityModeForPath: u } = ys(
      toRef(o, "paths")
    ), c = Ji();
    Object.entries(o.eventHandlers).forEach(([P, D]) => {
      c.on(P, D);
    });
    const d = Ko(toRef(o, "configs")), h = computed(() => {
      const P = new Set(Object.keys(s));
      i.forEach((Z) => P.delete(Z));
      const D = Object.fromEntries(Uo.map((Z) => [Z, []]));
      return Object.assign(
        D,
        Object.entries(o.layers).reduce(
          (Z, [W, te]) => (P.delete(W), te in Z ? Z[te].push(W) : Z[te] = [W], Z),
          {}
        )
      ), D.root.push(...P), D;
    }), v = computed(() => d.view.grid.visible), E = computed(() => {
      const P = h.value;
      return v.value || P.background.length > 0 || P.grid.length > 0;
    }), x = Ms(d, s), w = ref(), g = ref(), y = ref(), k = ref(
      0
      /* INITIAL */
    ), m = computed(
      () => k.value !== 0
      /* INITIAL */
    ), f = ws(o, "zoomLevel", n, (P) => (P = Math.max(P, d.view.minZoomLevel), P = Math.min(P, d.view.maxZoomLevel), P)), { svgPanZoom: p, onSvgPanZoomMounted: S, onSvgPanZoomUnmounted: O } = gs(g, {
      viewportSelector: ".v-ng-viewport",
      minZoom: d.view.minZoomLevel,
      // temporary
      maxZoom: d.view.maxZoomLevel,
      // temporary
      dblClickZoomEnabled: sn(d.view),
      mouseWheelZoomEnabled: St(d.view),
      fit: d.view.autoPanAndZoomOnLoad === "fit-content",
      center: d.view.autoPanAndZoomOnLoad !== false,
      zoomEnabled: d.view.zoomEnabled,
      preventMouseEventsDefault: false,
      onZoom: (P) => {
        var Z, W;
        if (k.value === 2) return;
        const D = (W = (Z = p.value) == null ? void 0 : Z.getRealZoom()) != null ? W : 1;
        Math.abs(f.value - D) >= 1e-6 && (f.value = D, c.emit("view:zoom", D));
      },
      panEnabled: d.view.panEnabled,
      onPan: (P) => {
        k.value !== 2 && c.emit("view:pan", P);
      }
    });
    Xo({ container: w, svg: g, viewport: y, svgPanZoom: p });
    const I = { width: 0, height: 0 }, z = globalThis.ResizeObserver ? new ResizeObserver(() => {
      var D, Z, W;
      if ((D = p.value) == null || D.resize(), !d.view.autoPanOnResize) return;
      const P = (Z = w.value) == null ? void 0 : Z.getBoundingClientRect();
      if (P) {
        const te = -(I.width - P.width) / 2, je = -(I.height - P.height) / 2;
        (W = p.value) == null || W.panBy({ x: te, y: je });
        const { width: Me, height: Mt } = P;
        (I.width !== Me || I.height !== Mt) && (Object.assign(I, { width: Me, height: Mt }), c.emit("view:resize", { x: P.x, y: P.y, width: Me, height: Mt }));
      }
    }) : void 0;
    S(() => {
      var te, je, Me;
      const P = q(w.value, "svg-pan-zoom container");
      z == null || z.observe(P), (je = (te = d.view).onSvgPanZoomInitialized) == null || je.call(te, q(p.value, "svg-pan-zoom instance"));
      const D = P.getBoundingClientRect(), { width: Z, height: W } = D;
      Object.assign(I, { width: Z, height: W }), (Me = y.value) == null || Me.addEventListener("touchstart", rn, { passive: false });
    }), O(() => {
      var P;
      z == null || z.disconnect(), (P = y.value) == null || P.removeEventListener("touchstart", rn);
    });
    const T = (P) => {
      var D;
      (D = p.value) == null || D.applyAbsoluteZoomLevel(
        P,
        d.view.minZoomLevel,
        d.view.maxZoomLevel
      );
    };
    watch(
      () => d.view.panEnabled,
      (P) => {
        var D;
        (D = p.value) == null || D.setPanEnabled(P);
      }
    ), watch(
      () => [
        d.view.zoomEnabled,
        sn(d.view),
        St(d.view)
      ],
      () => {
        const P = p.value;
        P && $o(
          P,
          d.view.zoomEnabled,
          d.view.doubleClickZoomEnabled,
          d.view.mouseWheelZoomEnabled
        );
      }
    ), watch(f, (P) => T(P)), watch(
      () => [d.view.minZoomLevel, d.view.maxZoomLevel],
      (P) => {
        T(f.value);
      }
    );
    const { scale: A } = ps(f, d.view);
    S(() => {
      const P = o.zoomLevel;
      T(P);
    });
    const R = () => Ee(this, null, function* () {
      var P;
      Object.keys(o.nodes).length > 0 && ((P = p.value) == null || P.updateBBox(), yield Pn());
    }), Y = (P) => Ee(this, null, function* () {
      var je, Me;
      const D = !P || P.margin === void 0 ? d.view.fitContentMargin : P.margin;
      yield R();
      const Z = q(g.value).getBoundingClientRect(), W = Ls(D, Z), te = As(
        q(y.value),
        Z,
        ge.nodes,
        f.value,
        W,
        d.view.scalingObjects
      );
      te ? (T(te.zoom), (je = p.value) == null || je.pan(te.pos)) : (Me = p.value) == null || Me.center(), c.emit("view:fit", void 0);
    }), B = () => Ee(this, null, function* () {
      var P;
      yield R(), (P = p.value) == null || P.center();
    }), F = () => {
      var P, D;
      return (D = (P = p.value) == null ? void 0 : P.getViewBox()) != null ? D : {
        top: 0,
        bottom: 0,
        left: 0,
        right: 0
      };
    }, ye = (P) => {
      var D;
      return (D = p.value) == null ? void 0 : D.setViewBox(P);
    }, ie = It(o, "selectedNodes", r, n);
    watch(ie, (P) => c.emit("node:select", Array.from(P)));
    const ke = It(o, "selectedEdges", a, n);
    watch(ke, (P) => c.emit("edge:select", Array.from(P)));
    const Ne = It(o, "selectedPaths", l, n);
    watch(Ne, (P) => c.emit("path:select", Array.from(P))), Es(ie, ke, Ne);
    const Xe = Ie(/* @__PURE__ */ new Set()), le = Ie(/* @__PURE__ */ new Set()), Ve = Ie(/* @__PURE__ */ new Set()), ge = Ie({ nodes: {} });
    ks(ge), watch(
      () => o.layouts,
      () => {
        var P;
        return Object.assign(ge.nodes, (P = o.layouts.nodes) != null ? P : {});
      },
      { deep: true, immediate: true }
    ), watch(ge, () => n("update:layouts", ge), { deep: true });
    const kt = xi(), Pt = ref(false);
    c.on("node:dragstart", (P) => Pt.value = true), c.on("node:dragend", (P) => Pt.value = false), c.on("view:mode", (P) => {
      var D, Z, W, te;
      d.view.panEnabled && (P === "default" ? (D = p.value) == null || D.enablePan() : (Z = p.value) == null || Z.disablePan()), d.view.zoomEnabled && (P === "default" ? (W = p.value) == null || W.enableZoom() : (te = p.value) == null || te.disableZoom());
    });
    const fo = computed(() => d.view.panEnabled || d.view.zoomEnabled || d.node.draggable), { nodeStates: ho, edgeStates: vo, pathStates: go } = Ci(
      zt(r, ie, Xe),
      zt(a, ke, le),
      zt(l, Ne, Ve),
      readonly(d),
      ge,
      o.layouts,
      kt,
      A
    ), po = computed(() => St(d.view)), { isBoxSelectionMode: mo, selectionBox: en, startBoxSelection: bo, stopBoxSelection: yo } = Yi(
      g,
      readonly(ge),
      readonly(f),
      ho,
      vo,
      go,
      ie,
      ke,
      Ne,
      Xe,
      le,
      Ve,
      u,
      po,
      d,
      c
    ), tn = () => ({
      layouts: Ie(ge.nodes),
      // deprecated parameter.
      nodePositions: toRef(ge, "nodes"),
      nodes: r,
      edges: a,
      configs: readonly(d),
      scale: readonly(A),
      emitter: c,
      svgPanZoom: q(p.value)
    });
    watch(
      () => d.view.layoutHandler,
      (P, D) => {
        D.deactivate(), P.activate(tn());
      }
    );
    const { transitionWhile: wo, transitionOption: nn } = bs(), Eo = computed(() => {
      const P = nn.value;
      return P.enabled ? {
        "--transition-duration": P.duration + "ms",
        "--transition-function": P.timingFunction
      } : {};
    });
    S(() => Ee(this, null, function* () {
      if (d.view.onBeforeInitialDisplay) {
        const Z = d.view.onBeforeInitialDisplay();
        ei(Z) && (yield Z);
      }
      const P = q(p.value, "svg-pan-zoom");
      d.view.layoutHandler.activate(tn()), yield Pn();
      const D = d.view.autoPanAndZoomOnLoad;
      if (d.view.fit || D !== false) {
        const Z = Object.keys(o.nodes).length == 0, W = P.getPan();
        if (Z || D === "center-zero") {
          yield R();
          const te = P.getSizes();
          P.pan({
            x: te.width / 2,
            y: te.height / 2
          });
        } else D === "fit-content" || d.view.fit ? yield Y() : D === "center-content" ? yield B() : yield R();
        nextTick(() => {
          const te = P.getPan();
          W.x === te.x && W.y === te.y && c.emit("view:pan", te);
        });
      } else
        yield R();
      c.emit("view:load"), k.value = 1;
    })), O(() => {
      k.value = 2, c.emit("view:unload"), d.view.layoutHandler.deactivate();
    });
    function xo() {
      var P;
      (P = p.value) == null || P.zoomIn();
    }
    function ko() {
      var P;
      (P = p.value) == null || P.zoomOut();
    }
    function Po(P) {
      var D;
      (D = p.value) == null || D.pan(P);
    }
    function So(P) {
      var D;
      (D = p.value) == null || D.panBy(P);
    }
    function Mo() {
      return q(p.value).getPan();
    }
    function Co() {
      const P = q(p.value).getSizes();
      return {
        width: P.width,
        height: P.height,
        viewBox: P.viewBox
      };
    }
    function Oo(P) {
      return Dt(
        q(g.value, "svg"),
        q(y.value, "viewport"),
        P
      );
    }
    function zo(P) {
      return _i(
        q(g.value, "svg"),
        q(y.value, "viewport"),
        P
      );
    }
    function To() {
      return Gn(
        q(g.value, "svg"),
        q(y.value, "viewport"),
        A.value
      ).outerHTML;
    }
    function Io() {
      return Ee(this, arguments, function* (P = {}) {
        return (yield on(P)).outerHTML;
      });
    }
    function on() {
      return Ee(this, arguments, function* (P = {}) {
        return Ui(
          q(g.value, "svg"),
          q(y.value, "viewport"),
          A.value,
          P
        );
      });
    }
    t({
      // methods
      fitToContents: Y,
      panToCenter: B,
      getViewBox: F,
      setViewBox: ye,
      transitionWhile: wo,
      startBoxSelection: bo,
      stopBoxSelection: yo,
      zoomIn: xo,
      zoomOut: ko,
      panTo: Po,
      panBy: So,
      getPan: Mo,
      getSizes: Co,
      translateFromDomToSvgCoordinates: Oo,
      translateFromSvgToDomCoordinates: zo,
      getAsSvg: To,
      exportAsSvgText: Io,
      exportAsSvgElement: on
    });
    function $o(P, D, Z, W) {
      P.setZoomEnabled(D), D && Z ? P.enableDblClickZoom() : P.disableDblClickZoom(), D && W ? P.enableMouseWheelZoom() : P.disableMouseWheelZoom();
    }
    function sn(P) {
      return P.zoomEnabled && P.doubleClickZoomEnabled;
    }
    function St(P) {
      return P.zoomEnabled && P.mouseWheelZoomEnabled;
    }
    function rn(P) {
      P.stopPropagation();
    }
    return (P, D) => (openBlock(), createElementBlock("div", {
      ref_key: "container",
      ref: w,
      class: "v-network-graph v-ng-container"
    }, [
      (openBlock(), createElementBlock("svg", {
        ref_key: "svg",
        ref: g,
        class: normalizeClass(["v-ng-canvas", { show: unref(m), dragging: Pt.value, touches: unref(fo), "box-selection-mode": unref(mo) }]),
        width: "100%",
        height: "100%"
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(h).root, (Z) => renderSlot(P.$slots, Z, {
          key: Z,
          scale: unref(A)
        })), 128)),
        Object.keys(unref(kt).markers).length > 0 ? (openBlock(), createElementBlock("defs", Rr, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(unref(kt).markers, (Z, W) => (openBlock(), createBlock(Xs, {
            id: W,
            key: W,
            marker: Z,
            scale: unref(A)
          }, null, 8, ["id", "marker", "scale"]))), 128))
        ])) : createCommentVNode("", true),
        unref(E) ? (openBlock(), createBlock(er, { key: 1 }, {
          default: withCtx(() => [
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(h).background, (Z) => (openBlock(), createElementBlock("g", {
              key: Z,
              class: "v-ng-layer"
            }, [
              renderSlot(P.$slots, Z, { scale: unref(A) })
            ]))), 128)),
            unref(v) ? (openBlock(), createBlock(Js, { key: 0 })) : createCommentVNode("", true),
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(h).grid, (Z) => (openBlock(), createElementBlock("g", {
              key: Z,
              class: "v-ng-layer"
            }, [
              renderSlot(P.$slots, Z, { scale: unref(A) })
            ]))), 128))
          ]),
          _: 3
        })) : createCommentVNode("", true),
        createBaseVNode("g", {
          ref_key: "viewport",
          ref: y,
          class: normalizeClass(["v-ng-viewport", { "v-ng-transition": unref(nn).enabled }]),
          style: normalizeStyle(unref(Eo))
        }, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(unref(h).base, (Z) => (openBlock(), createElementBlock("g", {
            key: Z,
            class: "v-ng-layer"
          }, [
            renderSlot(P.$slots, Z, { scale: unref(A) })
          ]))), 128)),
          (openBlock(true), createElementBlock(Fragment, null, renderList(unref(x), (Z) => (openBlock(), createElementBlock(Fragment, { key: Z }, [
            Z === "edges" ? (openBlock(), createBlock(yr, { key: 0 }, createSlots({ _: 2 }, [
              "edge-overlay" in unref(s) ? {
                name: "edge-overlay",
                fn: withCtx((W) => [
                  renderSlot(P.$slots, "edge-overlay", normalizeProps(guardReactiveProps(W)))
                ]),
                key: "0"
              } : void 0
            ]), 1024)) : Z === "edge-labels" ? (openBlock(), createBlock(Pr, {
              key: 1,
              "enable-edge-label": "edge-label" in unref(s),
              "enable-edges-label": "edges-label" in unref(s)
            }, {
              "edge-label": withCtx((W) => [
                renderSlot(P.$slots, "edge-label", normalizeProps(guardReactiveProps(W)))
              ]),
              "edges-label": withCtx((W) => [
                renderSlot(P.$slots, "edges-label", normalizeProps(guardReactiveProps(W)))
              ]),
              _: 3
            }, 8, ["enable-edge-label", "enable-edges-label"])) : Z === "focusring" ? (openBlock(), createBlock(Cr, { key: 2 })) : Z === "nodes" ? (openBlock(), createBlock(zr, { key: 3 }, {
              "override-node": withCtx((W) => [
                renderSlot(P.$slots, "override-node", normalizeProps(guardReactiveProps(W)))
              ]),
              _: 3
            })) : Z === "node-labels" ? (openBlock(), createBlock(Zr, { key: 4 }, {
              "override-node-label": withCtx((W) => [
                renderSlot(P.$slots, "override-node-label", normalizeProps(guardReactiveProps(W)))
              ]),
              _: 3
            })) : Z === "paths" ? (openBlock(), createBlock(Br, { key: 5 })) : createCommentVNode("", true),
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(h)[Z], (W) => (openBlock(), createElementBlock("g", {
              key: W,
              class: "v-ng-layer"
            }, [
              renderSlot(P.$slots, W, { scale: unref(A) })
            ]))), 128))
          ], 64))), 128))
        ], 6),
        unref(en) ? (openBlock(), createBlock(Bs, {
          key: 2,
          box: unref(en),
          config: unref(d).view.selection.box
        }, null, 8, ["box", "config"])) : createCommentVNode("", true)
      ], 2))
    ], 512));
  }
});
var Wr = (e, t) => {
  const n = e.__vccOpts || e;
  for (const [o, i] of t)
    n[o] = i;
  return n;
};
var Hr = {};
function _r(e, t) {
  return openBlock(), createElementBlock("defs", null, [
    (openBlock(), createBlock(resolveDynamicComponent("style"), null, {
      default: withCtx(() => [
        renderSlot(e.$slots, "default")
      ]),
      _: 3
    }))
  ]);
}
var Fr = Wr(Hr, [["render", _r]]);
var Ur = defineComponent({
  __name: "VEdgeLabel",
  props: {
    area: null,
    config: null,
    text: { default: "" },
    align: { default: "center" },
    verticalAlign: { default: "center" },
    edge: { default: void 0 },
    hovered: { type: Boolean, default: void 0 },
    selected: { type: Boolean, default: void 0 },
    scale: { default: void 0 }
  },
  setup(e) {
    const t = e, n = ref(0), o = ref(0), i = ref("middle"), s = ref("central"), r = ref(0);
    watchEffect(() => {
      const l = t.area.source, u = t.area.target;
      t.align === "source" ? (l.above.x == u.above.x ? i.value = l.above.y > u.above.y ? "start" : "end" : i.value = l.above.x < u.above.x ? "start" : "end", t.verticalAlign === "above" ? (n.value = l.above.x, o.value = l.above.y, s.value = "text-top") : t.verticalAlign === "below" ? (n.value = l.below.x, o.value = l.below.y, s.value = "hanging") : (n.value = (l.above.x + l.below.x) / 2, o.value = (l.above.y + l.below.y) / 2, s.value = "central")) : t.align === "target" ? (l.above.x == u.above.x ? i.value = l.above.y < u.above.y ? "start" : "end" : i.value = l.above.x > u.above.x ? "start" : "end", t.verticalAlign === "above" ? (n.value = u.above.x, o.value = u.above.y, s.value = "text-top") : t.verticalAlign === "below" ? (n.value = u.below.x, o.value = u.below.y, s.value = "hanging") : (n.value = (u.above.x + u.below.x) / 2, o.value = (u.above.y + u.below.y) / 2, s.value = "central")) : (i.value = "middle", t.verticalAlign === "above" ? (n.value = (l.above.x + u.above.x) / 2, o.value = (l.above.y + u.above.y) / 2, s.value = "text-top") : t.verticalAlign === "below" ? (n.value = (l.below.x + u.below.x) / 2, o.value = (l.below.y + u.below.y) / 2, s.value = "hanging") : (n.value = (l.above.x + u.below.x) / 2, o.value = (l.above.y + u.below.y) / 2, s.value = "central"));
      let c = Q.fromPositions(l.above, u.above).v.angleDegree();
      (c < -90 || c >= 90) && (c = c + 180, c > 180 && (c -= 360)), r.value = c;
    });
    const a = computed(() => s.value === "central" && !t.config.background ? qe(se({}, t.config), {
      background: {
        visible: true,
        color: "#ffffff",
        padding: {
          vertical: 1,
          horizontal: 4
        },
        borderRadius: 2
      }
    }) : t.config);
    return (l, u) => (openBlock(), createBlock(xt, {
      class: "v-ng-edge-label",
      text: e.text,
      x: n.value,
      y: o.value,
      config: unref(a),
      "text-anchor": i.value,
      "dominant-baseline": s.value,
      transform: `rotate(${r.value} ${n.value} ${o.value})`
    }, null, 8, ["text", "x", "y", "config", "text-anchor", "dominant-baseline", "transform"]));
  }
});
var Xr = Object.freeze(Object.defineProperty({
  __proto__: null,
  VEdgeLabel: Ur,
  VLabelText: xt,
  VNetworkGraph: Vr,
  VShape: Et,
  VStyle: Fr
}, Symbol.toStringTag, { value: "Module" }));
var qr = 10;
var ta = class extends $n {
  constructor(t = {}) {
    super(), this.options = t;
  }
  setNodePosition(t, n) {
    const o = this.options.grid || qr;
    t.value.x = Math.floor(n.x / o) * o, t.value.y = Math.floor(n.y / o) * o;
  }
};
var na = function(e) {
  Object.entries(Xr).forEach(([t, n]) => {
    e.component(t, n);
  });
};
export {
  $ as Config,
  ta as GridLayout,
  Uo as LayerPositions,
  N as NodeLabelDirection,
  $n as SimpleLayout,
  Ur as VEdgeLabel,
  xt as VLabelText,
  Vr as VNetworkGraph,
  Et as VShape,
  Fr as VStyle,
  V as Vector2D,
  Qr as configsWithType,
  na as default,
  Jr as defineConfigs,
  ea as getFullConfigs,
  Se as useStates,
  Ct as withSelf
};
/*! Bundled license information:

lodash-es/lodash.default.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)

lodash-es/lodash.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)
*/
//# sourceMappingURL=v-network-graph.js.map
